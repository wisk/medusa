#
## Description ################################################################
# This yaml file tries do detail all x86 instruction.
# It's used by Medusa to generate c++ code in order to disassemble x86
# executable.
# Check out http://github.com/wisk/medusa for further information.

## Architecture information ###################################################
arch_info:
  name: x86
  insn_set_type: complex

## Instruction semantic #######################################################

semantic:
  add: &add
    [ expr('begin_update_flags'), res = op0.val + op1.val, expr('end_update_flags'), res = op0.val ]

  adc: &adc
    [ expr('begin_update_flags'), res = op0.val + op1.val + cf.id, expr('end_update_flags'), res = op0.val ]

  inc: &inc
    [ expr('begin_update_flags'), 'op0.val = op0.val + int(op0.bit, 1)', expr('end_update_flags') ]

  and: &and
    [ expr('begin_update_flags'), res = op0.val & op1.val, expr('end_update_flags'), res = op0.val ]

  or: &or
    [ expr('begin_update_flags'), res = op0.val | op1.val, expr('end_update_flags'), res = op0.val ]

  xor: &xor
    [ expr('begin_update_flags'), res = op0.val ^ op1.val, expr('end_update_flags'), res = op0.val ]

  sub: &sub
    [ expr('begin_update_flags'), res = op0.val - op1.val, expr('end_update_flags'), op0.val = res ]

  sbb: &sbb
    [ expr('begin_update_flags'), res = op0.val - op1.val - cf.id, expr('end_update_flags'), op0.val = res ]

  dec: &dec
    [ expr('begin_update_flags'), 'op0.val = op0.val - int(op0.bit, 1)', expr('end_update_flags') ]

  imul1: &imul1
    [ 'acc.id *= op0.val' ]

  imul2: &imul2
    [ 'res = op0.val * op1.val', op0.val = res ]

  # http://x86.renejeschke.de/html/file_module_x86_id_138.html
  imul3: &imul3
    [ 'res = op1.val * op2.val', op0.val = res ]

  mul: &mul
    [ ]

  idiv: &idiv
    [ ]

  div: &div
    [ ]

  mov: &mov
    [ op0.val = op1.val ]

  push: &push
    [ stack.id -= stack.size, stack.mem = op0.val ]

  pusha: &pusha
    [
      'stack.id -= int(16, 2)', 'stack.mem = ax.id',
      'stack.id -= int(16, 2)', 'stack.mem = cx.id',
      'stack.id -= int(16, 2)', 'stack.mem = dx.id',
      'stack.id -= int(16, 2)', 'stack.mem = bx.id',
      'stack.id -= int(16, 2)', 'stack.mem = sp.id + int(16, 8)',
      'stack.id -= int(16, 2)', 'stack.mem = bp.id',
      'stack.id -= int(16, 2)', 'stack.mem = si.id',
      'stack.id -= int(16, 2)', 'stack.mem = di.id',
    ]

  pushad: &pushad
    [
      'stack.id -= int(32, 4)', 'stack.mem = eax.id',
      'stack.id -= int(32, 4)', 'stack.mem = ecx.id',
      'stack.id -= int(32, 4)', 'stack.mem = edx.id',
      'stack.id -= int(32, 4)', 'stack.mem = ebx.id',
      'stack.id -= int(32, 4)', 'stack.mem = esp.id + int(32, 16)',
      'stack.id -= int(32, 4)', 'stack.mem = ebp.id',
      'stack.id -= int(32, 4)', 'stack.mem = esi.id',
      'stack.id -= int(32, 4)', 'stack.mem = edi.id',
    ]


  pop: &pop
    [ op0.val = stack.mem, stack.id += stack.size ]

  popa: &popa
    [
      'di.id = stack.mem', 'stack.id += int(16, 2)',
      'si.id = stack.mem', 'stack.id += int(16, 2)',
      'bp.id = stack.mem', 'stack.id += int(16, 2)',
      'sp.id = stack.mem', 'stack.id += int(16, 2)',
      'bx.id = stack.mem', 'stack.id += int(16, 2)',
      'dx.id = stack.mem', 'stack.id += int(16, 2)',
      'cx.id = stack.mem', 'stack.id += int(16, 2)',
      'ax.id = stack.mem', 'stack.id += int(16, 2)',
    ]

  popad: &popad
    [
      'edi.id = stack.mem', 'stack.id += int(32, 4)',
      'esi.id = stack.mem', 'stack.id += int(32, 4)',
      'ebp.id = stack.mem', 'stack.id += int(32, 4)',
      'esp.id = stack.mem', 'stack.id += int(32, 4)',
      'ebx.id = stack.mem', 'stack.id += int(32, 4)',
      'edx.id = stack.mem', 'stack.id += int(32, 4)',
      'ecx.id = stack.mem', 'stack.id += int(32, 4)',
      'eax.id = stack.mem', 'stack.id += int(32, 4)',
    ]

  jmp: &jmp
    [ program.id = op0.val ]

  call: &call
    [ stack.id -= stack.size, stack.mem = (program.id + insn.size), program.id = op0.val ]

  ret: &ret
    [ program.id = stack.mem, stack.id += stack.size ]

  cmp: &cmp
    [ expr('begin_update_flags'), res = op0.val - op1.val, expr('end_update_flags') ]

  test: &test
    [ expr('begin_update_flags'), res = op0.val & op1.val, expr('end_update_flags') ]

  not: &not
    [ expr('begin_update_flags'), 'op0.val = op0.val ^ int(op0.bit, -1)', expr('end_update_flags') ]

  # NOTE: we must save op1 in a temporary space, it could be used while computing op0
  movzx: &movzx
    [ 'res = op1.val', 'op0.val = int(op0.bit, 0)', 'op0.val |= res' ]

  movsx: &movsx
    [ 'op0.val = sign_extend(op1.val, op0.size)' ]

  nop: &nop
    [ program.id = program.id ]

  xchg: &xchg
    [ 'swap(op0.val, op1.val)' ]

  # FIXME: Handle sign extension
  sal: &sal
    [ op0.val = op0.val << op1.val ]

  sar: &sar
    [ op0.val = op0.val >> op1.val ]

  rol: &rol
    [ 'res = ((op0.val << op1.val) | (op0.val >> (int(op0.bit, op0.bit) - op1.val)))', op0.val = res ]

  ror: &ror
    [ 'res = ((op0.val >> op1.val) | (op0.val << (int(op0.bit, op0.bit) - op1.val)))', op0.val = res ]

  # FIXME: not done http://faydoc.tripod.com/cpu/cmpxchg.htm
  cmpxchg: &cmpxchg
    [
      "if op0.val == acc.id: zf.id = int1(1)\nelse: zf.id = int1(0)",
      'if zf.id == int1(1): op0.val = op1.val'
    ]

  scas: &scas
    [
      "if op0.val == op1.val: zf.id = int1(1)\nelse: zf.id = int1(0)",
      "if df.id == int1(1): op0.addr -= op0.size\nelse: op0.addr += op0.size"
    ]

  stos: &stos
    [
      'op0.val = op1.val',
      "if df.id == int1(1): op0.addr -= op0.size\nelse:op0.addr += op0.size"
    ]

  loop: &loop
    [ 'cnt.id -= int(cnt.bit, 1)', 'if cnt.id != int(cnt.bit, 0): program.id = op0.val' ]

  loopz: &loopz
    [ 'cnt.id -= int(cnt.bit, 1)', 'if (cnt.id | zf.id) != int(cnt.bit, 0): program.id = op0.val' ]

  loopnz: &loopnz
    [ 'cnt.id -= int(cnt.bit, 1)', 'if (zf.id ^ int(cnt.bit, 1) & cnt.id) != int(cnt.bit, 0): program.id = op0.val' ]

  jcntz: &jcntz
    [ 'if cnt.id == int(cnt.bit, 0): program.id = op0.val' ]

## Condition
# o           → of = 1
# no          → of = 0
# c / b / nae → cf = 1
# nc/ nb / ae → cf = 0
# e / z       → zf = 1
# ne / nz     → zf = 0
# s           → sf = 1
# ns          → sf = 0
# p / pe      → pf = 1
# np / po     → pf = 0
# be / na     → (cf or zf) = 1
# nbe / a     → (cf or zf) = 0
# l / nge     → (sf xor of) = 1
# nl / ge     → (sf xor of) = 0
# le / ng     → ((sf xor of) or zf) = 1
# nle / g     → ((sf xor of) or zf) = 0

  jmpo: &jmpo
    [ 'if of.id == int1(1): program.id = op0.val' ]
  jmpno: &jmpno
    [ 'if of.id == int1(0): program.id = op0.val' ]
  jmpc: &jmpc
    [ 'if cf.id == int1(1): program.id = op0.val' ]
  jmpnc: &jmpnc
    [ 'if cf.id == int1(0): program.id = op0.val' ]
  jmpz: &jmpz
    [ 'if zf.id == int1(1): program.id = op0.val' ]
  jmpnz: &jmpnz
    [ 'if zf.id == int1(0): program.id = op0.val' ]
  jmps: &jmps
    [ 'if sf.id == int1(1): program.id = op0.val' ]
  jmpns: &jmpns
    [ 'if sf.id == int1(0): program.id = op0.val' ]
  jmpp: &jmpp
    [ 'if pf.id == int1(1): program.id = op0.val' ]
  jmpnp: &jmpnp
    [ 'if pf.id == int1(0): program.id = op0.val' ]
  jmpbe: &jmpbe
    [ 'if (cf.id | zf.id) != int1(0): program.id = op0.val' ]
  jmpa: &jmpa
    [ 'if (cf.id | zf.id) == int1(0): program.id = op0.val' ]
  jmpl: &jmpl
    [ 'if (sf.id ^ of.id) != int1(0): program.id = op0.val' ]
  jmpge: &jmpge
    [ 'if (sf.id ^ of.id) == int1(0): program.id = op0.val' ]
  jmple: &jmple
    [ 'if ((sf.id ^ of.id) | zf.id) != int1(0): program.id = op0.val' ]
  jmpg: &jmpg
    [ 'if ((sf.id ^ of.id) | zf.id) == int1(0): program.id = op0.val' ]

  seto: &seto
    [ "if of.id == int1(1): op0.val = int8(1)\nelse: op0.val = int8(0)" ]
  setno: &setno
    [ "if of.id == int1(0): op0.val = int8(1)\nelse: op0.val = int8(0)" ]
  setc: &setc
    [ "if cf.id == int1(1): op0.val = int8(1)\nelse: op0.val = int8(0)" ]
  setnc: &setnc
    [ "if cf.id == int1(0): op0.val = int8(1)\nelse: op0.val = int8(0)" ]
  setz: &setz
    [ "if zf.id == int1(1): op0.val = int8(1)\nelse: op0.val = int8(0)" ]
  setnz: &setnz
    [ "if zf.id == int1(0): op0.val = int8(1)\nelse: op0.val = int8(0)" ]
  sets: &sets
    [ "if sf.id == int1(1): op0.val = int8(1)\nelse: op0.val = int8(0)" ]
  setns: &setns
    [ "if sf.id == int1(0): op0.val = int8(1)\nelse: op0.val = int8(0)" ]
  setp: &setp
    [ "if pf.id == int1(1): op0.val = int8(1)\nelse: op0.val = int8(0)" ]
  setnp: &setnp
    [ "if pf.id == int1(0): op0.val = int8(1)\nelse: op0.val = int8(0)" ]
  setbe: &setbe
    [ "if (cf.id | zf.id) != int1(0): op0.val = int8(1)\nelse: op0.val = int8(0)" ]
  seta: &seta
    [ "if (cf.id | zf.id) == int1(0): op0.val = int8(1)\nelse: op0.val = int8(0)" ]
  setl: &setl
    [ "if (sf.id ^ of.id) != int1(0): op0.val = int8(1)\nelse: op0.val = int8(0)" ]
  setge: &setge
    [ "if (sf.id ^ of.id) == int1(0): op0.val = int8(1)\nelse: op0.val = int8(0)" ]
  setle: &setle
    [ "if ((sf.id ^ of.id) | zf.id) != int1(0): op0.val = int8(1)\nelse: op0.val = int8(0)" ]
  setg: &setg
    [ "if ((sf.id ^ of.id) | zf.id) == int1(0): op0.val = int8(1)\nelse: op0.val = int8(0)" ]

  cmovo: &cmovo
    [ 'if of.id == int1(1): op0.val = op1.val' ]
  cmovno: &cmovno
    [ 'if of.id == int1(0): op0.val = op1.val' ]
  cmovc: &cmovc
    [ 'if cf.id == int1(1): op0.val = op1.val' ]
  cmovnc: &cmovnc
    [ 'if cf.id == int1(0): op0.val = op1.val' ]
  cmovz: &cmovz
    [ 'if zf.id == int1(1): op0.val = op1.val' ]
  cmovnz: &cmovnz
    [ 'if zf.id == int1(0): op0.val = op1.val' ]
  cmovs: &cmovs
    [ 'if sf.id == int1(1): op0.val = op1.val' ]
  cmovns: &cmovns
    [ 'if sf.id == int1(0): op0.val = op1.val' ]
  cmovp: &cmovp
    [ 'if pf.id == int1(1): op0.val = op1.val' ]
  cmovnp: &cmovnp
    [ 'if pf.id == int1(0): op0.val = op1.val' ]
  cmovbe: &cmovbe
    [ 'if (cf.id | zf.id) != int1(0): op0.val = op1.val' ]
  cmova: &cmova
    [ 'if (cf.id | zf.id) == int1(0): op0.val = op1.val' ]
  cmovl: &cmovl
    [ 'if (sf.id ^ of.id) != int1(0): op0.val = op1.val' ]
  cmovge: &cmovge
    [ 'if (sf.id ^ of.id) == int1(0): op0.val = op1.val' ]
  cmovle: &cmovle
    [ 'if ((sf.id ^ of.id) | zf.id) != int1(0): op0.val = op1.val' ]
  cmovg: &cmovg
    [ 'if ((sf.id ^ of.id) | zf.id) == int1(0): op0.val = op1.val' ]

## Instruction definition #####################################################

insn:

  table:

    table_1:
      - opcode: 0x00
        mnemonic: add
        operand: [ Eb, Gb ]
        update_flags: [ cf, pf, af, zf, sf, of ]
        semantic: *add

      - opcode: 0x01
        mnemonic: add
        operand: [ Ev, Gv ]
        update_flags: [ cf, pf, af, zf, sf, of ]
        semantic: *add

      - opcode: 0x02
        mnemonic: add
        operand: [ Gb, Eb ]
        update_flags: [ cf, pf, af, zf, sf, of ]
        semantic: *add

      - opcode: 0x03
        mnemonic: add
        operand: [ Gv, Ev ]
        update_flags: [ cf, pf, af, zf, sf, of ]
        semantic: *add

      - opcode: 0x04
        mnemonic: add
        operand: [ AL, Ib ]
        update_flags: [ cf, pf, af, zf, sf, of ]
        semantic: *add

      - opcode: 0x05
        mnemonic: add
        operand: [ rAX, Iz ]
        update_flags: [ cf, pf, af, zf, sf, of ]
        semantic: *add

      - opcode: 0x06
        mnemonic: push
        operand: [ ES ]
        attr: [ nm64 ]
        semantic: *push

      - opcode: 0x07
        mnemonic: pop
        operand: [ ES ]
        attr: [ nm64 ]
        semantic: *pop

      - opcode: 0x08
        mnemonic: or
        operand: [ Eb, Gb ]
        update_flags: [ cf, pf, af, zf, sf, of ]
        clear_flags: [ af, of, cf ]
        semantic: *or

      - opcode: 0x09
        mnemonic: or
        operand: [ Ev, Gv ]
        update_flags: [ cf, pf, af, zf, sf, of ]
        clear_flags: [ af, of, cf ]
        semantic: *or

      - opcode: 0x0a
        mnemonic: or
        operand: [ Gb, Eb ]
        update_flags: [ cf, pf, af, zf, sf, of ]
        clear_flags: [ af, of, cf ]
        semantic: *or

      - opcode: 0x0b
        mnemonic: or
        operand: [ Gv, Ev ]
        update_flags: [ cf, pf, af, zf, sf, of ]
        clear_flags: [ af, of, cf ]
        semantic: *or

      - opcode: 0x0c
        mnemonic: or
        operand: [ AL, Ib ]
        update_flags: [ cf, pf, af, zf, sf, of ]
        clear_flags: [ af, of, cf ]
        semantic: *or

      - opcode: 0x0d
        mnemonic: or
        operand: [ rAX, Iz ]
        update_flags: [ cf, pf, af, zf, sf, of ]
        clear_flags: [ af, of, cf ]
        semantic: *or

      - opcode: 0x0e
        mnemonic: push
        operand: [ CS ]
        attr: [ nm64 ]
        semantic: *push

      - opcode: 0x0f
        reference: table_2
        cpu_model: ">= X86_Arch_80286"

      - opcode: 0x10
        mnemonic: adc
        operand: [ Eb, Gb ]
        test_flags: [ cf ]
        update_flags: [ cf, pf, af, zf, sf, of ]
        semantic: *adc

      - opcode: 0x11
        mnemonic: adc
        operand: [ Ev, Gv ]
        test_flags: [ cf ]
        update_flags: [ cf, pf, af, zf, sf, of ]
        semantic: *adc

      - opcode: 0x12
        mnemonic: adc
        operand: [ Gb, Eb ]
        test_flags: [ cf ]
        update_flags: [ cf, pf, af, zf, sf, of ]
        semantic: *adc

      - opcode: 0x13
        mnemonic: adc
        operand: [ Gv, Ev ]
        test_flags: [ cf ]
        update_flags: [ cf, pf, af, zf, sf, of ]
        semantic: *adc

      - opcode: 0x14
        mnemonic: adc
        operand: [ AL, Ib ]
        test_flags: [ cf ]
        update_flags: [ cf, pf, af, zf, sf, of ]
        semantic: *adc

      - opcode: 0x15
        mnemonic: adc
        operand: [ rAX, Iz ]
        test_flags: [ cf ]
        update_flags: [ cf, pf, af, zf, sf, of ]
        semantic: *adc

      - opcode: 0x16
        mnemonic: push
        operand: [ SS ]
        attr: [ nm64 ]
        semantic: *push

      - opcode: 0x17
        mnemonic: pop
        operand: [ SS ]
        attr: [ nm64 ]
        semantic: *pop

      - opcode: 0x18
        mnemonic: sbb
        operand: [ Eb, Gb ]
        test_flags: [ cf ]
        update_flags: [ cf, pf, af, zf, sf, of ]
        semantic: *sbb

      - opcode: 0x19
        mnemonic: sbb
        operand: [ Ev, Gv ]
        test_flags: [ cf ]
        update_flags: [ cf, pf, af, zf, sf, of ]
        semantic: *sbb

      - opcode: 0x1a
        mnemonic: sbb
        operand: [ Gb, Eb ]
        test_flags: [ cf ]
        update_flags: [ cf, pf, af, zf, sf, of ]
        semantic: *sbb

      - opcode: 0x1b
        mnemonic: sbb
        operand: [ Gv, Ev ]
        test_flags: [ cf ]
        update_flags: [ cf, pf, af, zf, sf, of ]
        semantic: *sbb

      - opcode: 0x1c
        mnemonic: sbb
        operand: [ AL, Ib ]
        test_flags: [ cf ]
        update_flags: [ cf, pf, af, zf, sf, of ]
        semantic: *sbb

      - opcode: 0x1d
        mnemonic: sbb
        operand: [ rAX, Iz ]
        test_flags: [ cf ]
        update_flags: [ cf, pf, af, zf, sf, of ]
        semantic: *sbb

      - opcode: 0x1e
        mnemonic: push
        operand: [ DS ]
        attr: [ nm64 ]
        semantic: *push

      - opcode: 0x1f
        mnemonic: pop
        operand: [ DS ]
        attr: [ nm64 ]
        semantic: *pop

      - opcode: 0x20
        mnemonic: and
        operand: [ Eb, Gb ]
        update_flags: [ cf, pf, af, zf, sf, of ]
        clear_flags: [ af, of, cf ]
        semantic: *and

      - opcode: 0x21
        mnemonic: and
        operand: [ Ev, Gv ]
        update_flags: [ cf, pf, af, zf, sf, of ]
        clear_flags: [ af, of, cf ]
        semantic: *and

      - opcode: 0x22
        mnemonic: and
        operand: [ Gb, Eb ]
        update_flags: [ cf, pf, af, zf, sf, of ]
        clear_flags: [ af, of, cf ]
        semantic: *and

      - opcode: 0x23
        mnemonic: and
        operand: [ Gv, Ev ]
        update_flags: [ cf, pf, af, zf, sf, of ]
        clear_flags: [ af, of, cf ]
        semantic: *and

      - opcode: 0x24
        mnemonic: and
        operand: [ AL, Ib ]
        update_flags: [ cf, pf, af, zf, sf, of ]
        clear_flags: [ af, of, cf ]
        semantic: *and

      - opcode: 0x25
        mnemonic: and
        operand: [ rAX, Iz ]
        update_flags: [ cf, pf, af, zf, sf, of ]
        clear_flags: [ af, of, cf ]
        semantic: *and

      - opcode: 0x26
        mnemonic: ES
        constraint: pfx1

      - opcode: 0x27
        mnemonic: daa
        test_flags: [ af, cf ]
        update_flags: [ cf, pf, af, zf, sf, of ]
        clear_flags: [ of ]
        attr: [ nm64 ]

      - opcode: 0x28
        mnemonic: sub
        operand: [ Eb, Gb ]
        update_flags: [ cf, pf, af, zf, sf, of ]
        semantic: *sub

      - opcode: 0x29
        mnemonic: sub
        operand: [ Ev, Gv ]
        update_flags: [ cf, pf, af, zf, sf, of ]
        semantic: *sub

      - opcode: 0x2a
        mnemonic: sub
        operand: [ Gb, Eb ]
        update_flags: [ cf, pf, af, zf, sf, of ]
        semantic: *sub

      - opcode: 0x2b
        mnemonic: sub
        operand: [ Gv, Ev ]
        update_flags: [ cf, pf, af, zf, sf, of ]
        semantic: *sub

      - opcode: 0x2c
        mnemonic: sub
        operand: [ AL, Ib ]
        update_flags: [ cf, pf, af, zf, sf, of ]
        semantic: *sub

      - opcode: 0x2d
        mnemonic: sub
        operand: [ rAX, Iz ]
        update_flags: [ cf, pf, af, zf, sf, of ]
        semantic: *sub

      - opcode: 0x2e
        sub_opcodes:
          - mnemonic: CS
            constraint: pfx1

          - mnemonic: HintNotTaken
            constraint: pfx1
            cpu_model: ">= X86_Arch_Pentium_4"

      - opcode: 0x2f
        mnemonic: das
        test_flags: [ af, cf ]
        update_flags: [ cf, pf, af, zf, sf, of ]
        clear_flags: [ of ]
        attr: [ nm64 ]

      - opcode: 0x30
        mnemonic: xor
        operand: [ Eb, Gb ]
        update_flags: [ cf, pf, af, zf, sf, of ]
        clear_flags: [ af, of, cf ]
        semantic: *xor

      - opcode: 0x31
        mnemonic: xor
        operand: [ Ev, Gv ]
        update_flags: [ cf, pf, af, zf, sf, of ]
        clear_flags: [ af, of, cf ]
        semantic: *xor

      - opcode: 0x32
        mnemonic: xor
        operand: [ Gb, Eb ]
        update_flags: [ cf, pf, af, zf, sf, of ]
        clear_flags: [ af, of, cf ]
        semantic: *xor

      - opcode: 0x33
        mnemonic: xor
        operand: [ Gv, Ev ]
        update_flags: [ cf, pf, af, zf, sf, of ]
        clear_flags: [ af, of, cf ]
        semantic: *xor

      - opcode: 0x34
        mnemonic: xor
        operand: [ AL, Ib ]
        update_flags: [ cf, pf, af, zf, sf, of ]
        clear_flags: [ af, of, cf ]
        semantic: *xor

      - opcode: 0x35
        mnemonic: xor
        operand: [ rAX, Iz ]
        update_flags: [ cf, pf, af, zf, sf, of ]
        clear_flags: [ af, of, cf ]
        semantic: *xor

      - opcode: 0x36
        mnemonic: SS
        constraint: pfx1

      - opcode: 0x37
        mnemonic: aaa
        test_flags: [ af, cf ]
        update_flags: [ cf, pf, af, zf, sf, of ]
        clear_flags: [ of ]

      - opcode: 0x38
        mnemonic: cmp
        operand: [ Eb, Gb ]
        update_flags: [ cf, pf, af, zf, sf, of ]
        semantic: *cmp

      - opcode: 0x39
        mnemonic: cmp
        operand: [ Ev, Gv ]
        update_flags: [ cf, pf, af, zf, sf, of ]
        semantic: *cmp

      - opcode: 0x3a
        mnemonic: cmp
        operand: [ Gb, Eb ]
        update_flags: [ cf, pf, af, zf, sf, of ]
        semantic: *cmp

      - opcode: 0x3b
        mnemonic: cmp
        operand: [ Gv, Ev ]
        update_flags: [ cf, pf, af, zf, sf, of ]
        semantic: *cmp

      - opcode: 0x3c
        mnemonic: cmp
        operand: [ AL, Ib ]
        update_flags: [ cf, pf, af, zf, sf, of ]
        semantic: *cmp

      - opcode: 0x3d
        mnemonic: cmp
        operand: [ rAX, Iz ]
        update_flags: [ cf, pf, af, zf, sf, of ]
        semantic: *cmp

      - opcode: 0x3e
        sub_opcodes:
          - mnemonic: DS
            constraint: pfx1

          - mnemonic: HintTaken
            constraint: pfx1
            cpu_model: ">= X86_Arch_Pentium_4"

      - opcode: 0x3f
        mnemonic: aas
        test_flags: [ af ]
        update_flags: [ cf, pf, af, zf, sf, of ]
        clear_flags: [ of, sf, zf, pf ]
        attr: [ nm64 ]

      - opcode: 0x40
        sub_opcodes:
          - mnemonic: inc
            operand: [ eAX ]
            update_flags: [ pf, af, zf, sf, of ]
            semantic: *inc

          - mnemonic: REX
            constraint: pfx1
            attr: [ m64 ]

      - opcode: 0x41
        sub_opcodes:
          - mnemonic: inc
            operand: [ eCX ]
            update_flags: [ pf, af, zf, sf, of ]
            semantic: *inc

          - mnemonic: REX_b
            constraint: pfx1
            attr: [ m64 ]

      - opcode: 0x42
        sub_opcodes:
          - mnemonic: inc
            operand: [ eDX ]
            update_flags: [ pf, af, zf, sf, of ]
            semantic: *inc

          - mnemonic: REX_x
            constraint: pfx1
            attr: [ m64 ]

      - opcode: 0x43
        sub_opcodes:
          - mnemonic: inc
            operand: [ eBX ]
            update_flags: [ pf, af, zf, sf, of ]
            semantic: *inc

          - mnemonic: REX_xb
            constraint: pfx1
            attr: [ m64 ]

      - opcode: 0x44
        sub_opcodes:
          - mnemonic: inc
            operand: [ eSP ]
            update_flags: [ pf, af, zf, sf, of ]
            semantic: *inc

          - mnemonic: REX_r
            constraint: pfx1
            attr: [ m64 ]

      - opcode: 0x45
        sub_opcodes:
          - mnemonic: inc
            operand: [ eBP ]
            update_flags: [ pf, af, zf, sf, of ]
            semantic: *inc

          - mnemonic: REX_rb
            constraint: pfx1
            attr: [ m64 ]

      - opcode: 0x46
        sub_opcodes:
          - mnemonic: inc
            operand: [ eSI ]
            update_flags: [ pf, af, zf, sf, of ]
            semantic: *inc

          - mnemonic: REX_rx
            constraint: pfx1
            attr: [ m64 ]

      - opcode: 0x47
        sub_opcodes:
          - mnemonic: inc
            operand: [ eDI ]
            update_flags: [ pf, af, zf, sf, of ]
            semantic: *inc

          - mnemonic: REX_rxb
            constraint: pfx1
            attr: [ m64 ]

      - opcode: 0x48
        sub_opcodes:
          - mnemonic: dec
            operand: [ eAX ]
            update_flags: [ pf, af, zf, sf, of ]
            semantic: *dec

          - mnemonic: REX_w
            constraint: pfx1
            attr: [ m64 ]

      - opcode: 0x49
        sub_opcodes:
          - mnemonic: dec
            operand: [ eCX ]
            update_flags: [ pf, af, zf, sf, of ]
            semantic: *dec

          - mnemonic: REX_wb
            constraint: pfx1
            attr: [ m64 ]

      - opcode: 0x4a
        sub_opcodes:
          - mnemonic: dec
            operand: [ eDX ]
            update_flags: [ pf, af, zf, sf, of ]
            semantic: *dec

          - mnemonic: REX_wx
            constraint: pfx1
            attr: [ m64 ]

      - opcode: 0x4b
        sub_opcodes:
          - mnemonic: dec
            operand: [ eBX ]
            update_flags: [ pf, af, zf, sf, of ]
            semantic: *dec

          - mnemonic: REX_wxb
            constraint: pfx1
            attr: [ m64 ]

      - opcode: 0x4c
        sub_opcodes:
          - mnemonic: dec
            operand: [ eSP ]
            update_flags: [ pf, af, zf, sf, of ]
            semantic: *dec

          - mnemonic: REX_wr
            constraint: pfx1
            attr: [ m64 ]

      - opcode: 0x4d
        sub_opcodes:
          - mnemonic: dec
            operand: [ eBP ]
            update_flags: [ pf, af, zf, sf, of ]
            semantic: *dec

          - mnemonic: REX_wrb
            constraint: pfx1
            attr: [ m64 ]

      - opcode: 0x4e
        sub_opcodes:
          - mnemonic: dec
            operand: [ eSI ]
            update_flags: [ pf, af, zf, sf, of ]
            semantic: *dec

          - mnemonic: REX_wrx
            constraint: pfx1
            attr: [ m64 ]

      - opcode: 0x4f
        sub_opcodes:
          - mnemonic: dec
            operand: [ eDI ]
            update_flags: [ pf, af, zf, sf, of ]
            semantic: *dec

          - mnemonic: REX_wrxb
            constraint: pfx1
            attr: [ m64 ]

      - opcode: 0x50
        sub_opcodes:
          - mnemonic: push
            operand: [ rAX ]
            constraint: d64
            semantic: *push

          - mnemonic: push
            operand: [ r8 ]
            attr: [ rexb, m64 ]
            semantic: *push

      - opcode: 0x51
        sub_opcodes:
          - mnemonic: push
            operand: [ rCX ]
            constraint: d64
            semantic: *push

          - mnemonic: push
            operand: [ r9 ]
            attr: [ rexb, m64 ]
            semantic: *push

      - opcode: 0x52
        sub_opcodes:
          - mnemonic: push
            operand: [ rDX ]
            constraint: d64
            semantic: *push

          - mnemonic: push
            operand: [ r10 ]
            attr: [ rexb, m64 ]
            semantic: *push

      - opcode: 0x53
        sub_opcodes:
          - mnemonic: push
            operand: [ rBX ]
            constraint: d64
            semantic: *push

          - mnemonic: push
            operand: [ r11 ]
            attr: [ rexb, m64 ]
            semantic: *push

      - opcode: 0x54
        sub_opcodes:
          - mnemonic: push
            operand: [ rSP ]
            constraint: d64
            semantic: *push

          - mnemonic: push
            operand: [ r12 ]
            attr: [ rexb, m64 ]
            semantic: *push

      - opcode: 0x55
        sub_opcodes:
          - mnemonic: push
            operand: [ rBP ]
            constraint: d64
            semantic: *push

          - mnemonic: push
            operand: [ r13 ]
            attr: [ rexb, m64 ]
            constraint: d64
            semantic: *push

      - opcode: 0x56
        sub_opcodes:
          - mnemonic: push
            operand: [ rSI ]
            constraint: d64
            semantic: *push

          - mnemonic: push
            operand: [ r14 ]
            attr: [ rexb, m64 ]
            constraint: d64
            semantic: *push

      - opcode: 0x57
        sub_opcodes:
          - mnemonic: push
            operand: [ rDI ]
            constraint: d64
            semantic: *push

          - mnemonic: push
            operand: [ r15 ]
            attr: [ rexb, m64 ]
            constraint: d64
            semantic: *push

      - opcode: 0x58
        sub_opcodes:
          - mnemonic: pop
            operand: [ rAX ]
            constraint: d64
            semantic: *pop

          - mnemonic: pop
            operand: [ r8 ]
            attr: [ rexb, m64 ]
            constraint: d64
            semantic: *pop

      - opcode: 0x59
        sub_opcodes:
          - mnemonic: pop
            operand: [ rCX ]
            constraint: d64
            semantic: *pop

          - mnemonic: pop
            operand: [ r9 ]
            attr: [ rexb, m64 ]
            constraint: d64
            semantic: *pop

      - opcode: 0x5a
        sub_opcodes:
          - mnemonic: pop
            operand: [ rDX ]
            constraint: d64
            semantic: *pop

          - mnemonic: pop
            operand: [ r10 ]
            attr: [ rexb, m64 ]
            constraint: d64
            semantic: *pop

      - opcode: 0x5b
        sub_opcodes:
          - mnemonic: pop
            operand: [ rBX ]
            constraint: d64
            semantic: *pop

          - mnemonic: pop
            operand: [ r11 ]
            attr: [ rexb, m64 ]
            constraint: d64
            semantic: *pop

      - opcode: 0x5c
        sub_opcodes:
          - mnemonic: pop
            operand: [ rSP ]
            constraint: d64
            semantic: *pop

          - mnemonic: pop
            operand: [ r12 ]
            attr: [ rexb, m64 ]
            constraint: d64
            semantic: *pop

      - opcode: 0x5d
        sub_opcodes:
          - mnemonic: pop
            operand: [ rBP ]
            constraint: d64
            semantic: *pop

          - mnemonic: pop
            operand: [ r13 ]
            attr: [ rexb, m64 ]
            constraint: d64
            semantic: *pop

      - opcode: 0x5e
        sub_opcodes:
          - mnemonic: pop
            operand: [ rSI ]
            constraint: d64
            semantic: *pop

          - mnemonic: pop
            operand: [ r14 ]
            attr: [ rexb, m64 ]
            constraint: d64
            semantic: *pop

      - opcode: 0x5f
        sub_opcodes:
          - mnemonic: pop
            operand: [ rDI ]
            constraint: d64
            semantic: *pop

          - mnemonic: pop
            operand: [ r15 ]
            attr: [ rexb, m64 ]
            constraint: d64
            semantic: *pop

      - opcode: 0x60
        sub_opcodes:
          - mnemonic: pusha
            attr: [ nm64 ]
            cpu_model: ">= X86_Arch_80186"
            semantic: *pusha

          - mnemonic: pushad
            attr: [ nm64, na16 ]
            cpu_model: ">= X86_Arch_80186"
            semantic: *pushad

      - opcode: 0x61
        sub_opcodes:
          - mnemonic: popa
            attr: [ nm64 ]
            cpu_model: ">= X86_Arch_80186"
            semantic: *popa

          - mnemonic: popad
            attr: [ nm64, na16 ]
            cpu_model: ">= X86_Arch_80186"
            semantic: *popad

      - opcode: 0x62
        mnemonic: bound
        operand: [ Gv, Ma ]
        update_flags: [ if ]
        attr: [ nm64 ]
        cpu_model: ">= X86_Arch_80186"

      - opcode: 0x63
        sub_opcodes:
          - mnemonic: arpl
            operand: [ Ew, Gw ]
            update_flags: [ zf ]
            attr: [ nm64 ]
            cpu_model: "== X86_Arch_80286"

          - mnemonic: movsx
            operand: [ Gv, Ed ]
            cpu_model: ">= X86_Arch_80386"
            semantic: *movsx

      - opcode: 0x64
        sub_opcodes:
          - mnemonic: FS
            constraint: pfx1
            cpu_model: ">= X86_Arch_80386"
            semantic: *movsx

          - mnemonic: HintAltTaken
            constraint: pfx1
            cpu_model: ">= X86_Arch_Pentium_4"

      - opcode: 0x65
        mnemonic: GS
        constraint: pfx1
        cpu_model: ">= X86_Arch_80386"

      - opcode: 0x66
        mnemonic: OpSize
        constraint: pfx1
        cpu_model: ">= X86_Arch_80386"

      - opcode: 0x67
        mnemonic: AdSize
        constraint: pfx1
        cpu_model: ">= X86_Arch_80386"

      - opcode: 0x68
        mnemonic: push
        operand: [ Iz ]
        cpu_model: ">= X86_Arch_80186"
        constraint: d64
        semantic: *push

      - opcode: 0x69
        mnemonic: imul
        operand: [ Gv, Ev, Iz ]
        update_flags: [ of, cf ]
        clear_flags: [ sf, zf, af, pf ]
        cpu_model: ">= X86_Arch_80186"
        semantic: *imul3

      - opcode: 0x6a
        mnemonic: push
        operand: [ Ib ]
        cpu_model: ">= X86_Arch_80186"
        constraint: d64
        semantic: *push

      - opcode: 0x6b
        mnemonic: imul
        operand: [ Gv, Ev, Ibs ]
        update_flags: [ of, cf ]
        clear_flags: [ sf, zf, af, pf ]
        cpu_model: ">= X86_Arch_80186"
        semantic: *imul3

      - opcode: 0x6c
        mnemonic: ins
        operand: [ Yb, DX ]
        test_flags: [ df ]
        cpu_model: ">= X86_Arch_80186"

      - opcode: 0x6d
        mnemonic: ins
        operand: [ Yz, DX ]
        test_flags: [ df ]
        cpu_model: ">= X86_Arch_80186"

      - opcode: 0x6e
        mnemonic: outs
        operand: [ DX, Xb ]
        test_flags: [ df ]
        cpu_model: ">= X86_Arch_80186"

      - opcode: 0x6f
        mnemonic: outs
        operand: [ DX, Xz ]
        test_flags: [ df ]
        cpu_model: ">= X86_Arch_80186"

      - opcode: 0x70
        mnemonic: jo
        operand: [ Jb ]
        operation_type: ['jmp', 'cond']
        test_flags: [ of ]
        semantic: *jmpo

      - opcode: 0x71
        mnemonic: jno
        operand: [ Jb ]
        operation_type: ['jmp', 'cond']
        test_flags: [ of ]
        semantic: *jmpno

      - opcode: 0x72
        mnemonic: jb
        operand: [ Jb ]
        operation_type: ['jmp', 'cond']
        test_flags: [ cf ]
        semantic: *jmpc

      - opcode: 0x73
        mnemonic: jnb
        operand: [ Jb ]
        operation_type: ['jmp', 'cond']
        test_flags: [ cf ]
        semantic: *jmpnc

      - opcode: 0x74
        mnemonic: jz
        operand: [ Jb ]
        operation_type: ['jmp', 'cond']
        test_flags: [ zf ]
        semantic: *jmpz

      - opcode: 0x75
        mnemonic: jnz
        operand: [ Jb ]
        operation_type: ['jmp', 'cond']
        test_flags: [ zf ]
        semantic: *jmpnz

      - opcode: 0x76
        mnemonic: jbe
        operand: [ Jb ]
        operation_type: ['jmp', 'cond']
        test_flags: [ cf, zf ]
        semantic: *jmpbe

      - opcode: 0x77
        mnemonic: jnbe
        operand: [ Jb ]
        operation_type: ['jmp', 'cond']
        test_flags: [ cf, zf ]
        semantic: *jmpa

      - opcode: 0x78
        mnemonic: js
        operand: [ Jb ]
        operation_type: ['jmp', 'cond']
        test_flags: [ sf ]
        semantic: *jmps

      - opcode: 0x79
        mnemonic: jns
        operand: [ Jb ]
        operation_type: ['jmp', 'cond']
        test_flags: [ sf ]
        semantic: *jmpns

      - opcode: 0x7a
        mnemonic: jp
        operand: [ Jb ]
        operation_type: ['jmp', 'cond']
        test_flags: [ pf ]
        semantic: *jmpp

      - opcode: 0x7b
        mnemonic: jnp
        operand: [ Jb ]
        operation_type: ['jmp', 'cond']
        test_flags: [ pf ]
        semantic: *jmpnp

      - opcode: 0x7c
        mnemonic: jl
        operand: [ Jb ]
        operation_type: ['jmp', 'cond']
        test_flags: [ of, sf ]
        semantic: *jmpl

      - opcode: 0x7d
        mnemonic: jnl
        operand: [ Jb ]
        operation_type: ['jmp', 'cond']
        test_flags: [ of, sf ]
        semantic: *jmpge

      - opcode: 0x7e
        mnemonic: jle
        operand: [ Jb ]
        operation_type: ['jmp', 'cond']
        test_flags: [ of, sf, zf ]
        semantic: *jmple

      - opcode: 0x7f
        mnemonic: jnle
        operand: [ Jb ]
        operation_type: ['jmp', 'cond']
        test_flags: [ of, sf, zf ]
        semantic: *jmpg

      - opcode: 0x80
        operand: [ Eb, Ib ]
        reference: group_01

      - opcode: 0x81
        operand: [ Ev, Iz ]
        reference: group_01

      - opcode: 0x82
        operand: [ Eb, Ib ]
        reference: group_01
        attr: [ nm64 ]

      - opcode: 0x83
        operand: [ Ev, Ibs ]
        reference: group_01

      - opcode: 0x84
        mnemonic: test
        operand: [ Eb, Gb ]
        update_flags: [ of, sf, zf, pf, cf ]
        clear_flags: [ af ]
        semantic: *test

      - opcode: 0x85
        mnemonic: test
        operand: [ Ev, Gv ]
        update_flags: [ of, sf, zf, pf, cf ]
        clear_flags: [ af ]
        semantic: *test

      - opcode: 0x86
        mnemonic: xchg
        operand: [ Eb, Gb ]
        semantic: *xchg

      - opcode: 0x87
        mnemonic: xchg
        operand: [ Ev, Gv ]
        semantic: *xchg

      - opcode: 0x88
        mnemonic: mov
        operand: [ Eb, Gb ]
        semantic: *mov

      - opcode: 0x89
        mnemonic: mov
        operand: [ Ev, Gv ]
        semantic: *mov

      - opcode: 0x8a
        mnemonic: mov
        operand: [ Gb, Eb ]
        semantic: *mov

      - opcode: 0x8b
        mnemonic: mov
        operand: [ Gv, Ev ]
        semantic: *mov

      - opcode: 0x8c
        mnemonic: mov
        operand: [ Ew, Sw ]
        semantic: *mov

      - opcode: 0x8d
        mnemonic: lea
        operand: [ Gv, M ]
        semantic: [ op0.val = op1.addr ]

      - opcode: 0x8e
        mnemonic: mov
        operand: [ Sw, Ew ]
        semantic: *mov

      - opcode: 0x8f
        reference: group_1A

      - opcode: 0x90
        sub_opcodes:
          - mnemonic: nop
            semantic: *nop

          - mnemonic: xchg
            operand: [ r8, rAX ]
            attr: [ rexb ]
            semantic: *xchg

      - opcode: 0x91
        sub_opcodes:
          - mnemonic: xchg
            operand: [ rCX, rAX ]
            semantic: *xchg

          - mnemonic: xchg
            operand: [ r9, rAX ]
            attr: [ rexb ]
            semantic: *xchg

      - opcode: 0x92
        sub_opcodes:
          - mnemonic: xchg
            operand: [ rDX, rAX ]
            semantic: *xchg

          - mnemonic: xchg
            operand: [ r10, rAX ]
            attr: [ rexb ]
            semantic: *xchg

      - opcode: 0x93
        sub_opcodes:
          - mnemonic: xchg
            operand: [ rBX, rAX ]
            semantic: *xchg

          - mnemonic: xchg
            operand: [ r11, rAX ]
            attr: [ rexb ]
            semantic: *xchg

      - opcode: 0x94
        sub_opcodes:
          - mnemonic: xchg
            operand: [ rSP, rAX ]
            semantic: *xchg

          - mnemonic: xchg
            operand: [ r12, rAX ]
            attr: [ rexb ]
            semantic: *xchg

      - opcode: 0x95
        sub_opcodes:
          - mnemonic: xchg
            operand: [ rBP, rAX ]
            semantic: *xchg

          - mnemonic: xchg
            operand: [ r13, rAX ]
            attr: [ rexb ]
            semantic: *xchg

      - opcode: 0x96
        sub_opcodes:
          - mnemonic: xchg
            operand: [ rSI, rAX ]
            semantic: *xchg

          - mnemonic: xchg
            operand: [ r14, rAX ]
            attr: [ rexb ]
            semantic: *xchg

      - opcode: 0x97
        sub_opcodes:
          - mnemonic: xchg
            operand: [ rDI, rAX ]
            semantic: *xchg

          - mnemonic: xchg
            operand: [ r15, rAX ]
            attr: [ rexb ]
            semantic: *xchg

      - opcode: 0x98
        sub_opcodes:
          - mnemonic: cbw
            cpu_model: "== X86_Arch_8088"
            semantic: [ "if (al.id & int8(0x80)) == int8(0): ax.id &= int16(0x00ff)\nelse: ax.id |= int16(0xff00)" ]

          - mnemonic: cwde
            cpu_model: ">= X86_Arch_80386"
            semantic: [ "if (ax.id & int16(0x8000)) == int16(0): eax.id &= int32(0x0000ffff)\nelse: eax.id |= int32(0xffff0000)" ]

          - mnemonic: cdqe
            attr: [ rexw ]
            semantic: [ "if (eax.id & int32(0x80000000)) == int32(0): rax.id &= int64(0x00000000ffffffff)\nelse: rax.id |= int64(0xffffffff00000000)" ]

      - opcode: 0x99
        sub_opcodes:
          - mnemonic: cwd
            cpu_model: "== X86_Arch_8088"
            semantic: [ "if (ax.id & int16(0x8000)) == int16(0): dx.id = int16(0xffff)\nelse: dx.id = int16(0)" ]

          - mnemonic: cdq
            cpu_model: ">= X86_Arch_80386"
            semantic: [ "if (eax.id & int32(0x80000000)) == int32(0): edx.id = int32(0xffffffff)\nelse: edx.id = int32(0)" ]

          - mnemonic: cqo
            attr: [ rexw ]
            semantic: [ "if (rax.id & int64(0x8000000000000000)) == int64(0): rdx.id = int64(0xffffffffffffffff)\nelse: rdx.id = int64(0)" ]

      - opcode: 0x9a
        mnemonic: call
        operand: [ Ap ]
        operation_type: ['call']
        attr: [ nm64 ]

      - opcode: 0x9b
        mnemonic: fwait

      - opcode: 0x9c
        mnemonic: pushf
        operand: [ Fv ]
        constraint: d64

      - opcode: 0x9d
        mnemonic: popf
        operand: [ Fv ]
        constraint: d64

      - opcode: 0x9e
        mnemonic: sahf
        update_flags: [ sf, zf, af, pf, cf ]

      - opcode: 0x9f
        mnemonic: lahf
        test_flags: [ sf, zf, af, pf, cf ]

      - opcode: 0xa0
        mnemonic: mov
        operand: [ AL, Ob ]
        semantic: *mov

      - opcode: 0xa1
        mnemonic: mov
        operand: [ rAX, Ov ]
        semantic: *mov

      - opcode: 0xa2
        mnemonic: mov
        operand: [ Ob, AL ]
        semantic: *mov

      - opcode: 0xa3
        mnemonic: mov
        operand: [ Ov, rAX ]
        semantic: *mov

      - opcode: 0xa4
        mnemonic: movs
        operand: [ Yb, Xb ]
        test_flags: [ df ]

      - opcode: 0xa5
        mnemonic: movs
        operand: [ Yv, Xv ]
        test_flags: [ df ]

      - opcode: 0xa6
        mnemonic: cmps
        operand: [ Yb, Xb ]
        test_flags: [ df ]
        update_flags: [ of, sf, zf, af, pf, cf ]

      - opcode: 0xa7
        mnemonic: cmps
        operand: [ Yb, Xb ]
        test_flags: [ df ]
        update_flags: [ of, sf, zf, af, pf, cf ]

      - opcode: 0xa8
        mnemonic: test
        operand: [ AL, Ib ]
        update_flags: [ of, sf, zf, pf, cf ]
        clear_flags: [ af ]
        semantic: *test

      - opcode: 0xa9
        mnemonic: test
        operand: [ rAX, Iz ]
        update_flags: [ of, sf, zf, pf, cf ]
        clear_flags: [ af ]
        semantic: *test

      - opcode: 0xaa
        mnemonic: stos
        operand: [ Yb, AL ]
        test_flags: [ df ]
        semantic: *stos

      - opcode: 0xab
        mnemonic: stos
        operand: [ Yv, rAX ]
        test_flags: [ df ]
        semantic: *stos

      - opcode: 0xac
        mnemonic: lods
        operand: [ AL, Xb ]
        test_flags: [ df ]

      - opcode: 0xad
        mnemonic: lods
        operand: [ rAX, Xv ]
        test_flags: [ df ]

      - opcode: 0xae
        mnemonic: scas
        operand: [ Yb, AL ]
        test_flags: [ df ]
        update_flags: [ of, sf, zf, af, pf, cf ]
        semantic: *scas

      - opcode: 0xaf
        mnemonic: scas
        operand: [ Yv, rAX ]
        test_flags: [ df ]
        update_flags: [ of, sf, zf, af, pf, cf ]
        semantic: *scas

      - opcode: 0xb0
        sub_opcodes:
          - mnemonic: mov
            operand: [ AL, Ib ]
            semantic: *mov

          - mnemonic: mov
            operand: [ r8b, Ib ]
            attr: [ rexb ]
            semantic: *mov

      - opcode: 0xb1
        sub_opcodes:
          - mnemonic: mov
            operand: [ CL, Ib ]
            semantic: *mov

          - mnemonic: mov
            operand: [ r9b, Ib ]
            attr: [ rexb ]
            semantic: *mov

      - opcode: 0xb2
        sub_opcodes:
          - mnemonic: mov
            operand: [ DL, Ib ]
            semantic: *mov

          - mnemonic: mov
            operand: [ r10b, Ib ]
            attr: [ rexb ]
            semantic: *mov

      - opcode: 0xb3
        sub_opcodes:
          - mnemonic: mov
            operand: [ BL, Ib ]
            semantic: *mov

          - mnemonic: mov
            operand: [ r11b, Ib ]
            attr: [ rexb ]
            semantic: *mov

      - opcode: 0xb4
        sub_opcodes:
          - mnemonic: mov
            operand: [ AH, Ib ]
            semantic: *mov

          - mnemonic: mov
            operand: [ r12b, Ib ]
            attr: [ rexb ]
            semantic: *mov

      - opcode: 0xb5
        sub_opcodes:
          - mnemonic: mov
            operand: [ CH, Ib ]
            semantic: *mov

          - mnemonic: mov
            operand: [ r13b, Ib ]
            attr: [ rexb ]
            semantic: *mov

      - opcode: 0xb6
        sub_opcodes:
          - mnemonic: mov
            operand: [ DH, Ib ]
            semantic: *mov

          - mnemonic: mov
            operand: [ r14b, Ib ]
            attr: [ rexb ]
            semantic: *mov

      - opcode: 0xb7
        sub_opcodes:
          - mnemonic: mov
            operand: [ BH, Ib ]
            semantic: *mov

          - mnemonic: mov
            operand: [ r15b, Ib ]
            attr: [ rexb ]
            semantic: *mov

      - opcode: 0xb8
        sub_opcodes:
          - mnemonic: mov
            operand: [ rAX, Iv ]
            semantic: *mov

          - mnemonic: mov
            operand: [ r8, Iv ]
            attr: [ rexb ]
            semantic: *mov

      - opcode: 0xb9
        sub_opcodes:
          - mnemonic: mov
            operand: [ rCX, Iv ]
            semantic: *mov

          - mnemonic: mov
            operand: [ r9, Iv ]
            attr: [ rexb ]
            semantic: *mov

      - opcode: 0xba
        sub_opcodes:
          - mnemonic: mov
            operand: [ rDX, Iv ]
            semantic: *mov

          - mnemonic: mov
            operand: [ r10, Iv ]
            attr: [ rexb ]
            semantic: *mov

      - opcode: 0xbb
        sub_opcodes:
          - mnemonic: mov
            operand: [ rBX, Iv ]
            semantic: *mov

          - mnemonic: mov
            operand: [ r11, Iv ]
            attr: [ rexb ]
            semantic: *mov

      - opcode: 0xbc
        sub_opcodes:
          - mnemonic: mov
            operand: [ rSP, Iv ]
            semantic: *mov

          - mnemonic: mov
            operand: [ r12, Iv ]
            attr: [ rexb ]
            semantic: *mov

      - opcode: 0xbd
        sub_opcodes:
          - mnemonic: mov
            operand: [ rBP, Iv ]
            semantic: *mov

          - mnemonic: mov
            operand: [ r13, Iv ]
            attr: [ rexb ]
            semantic: *mov

      - opcode: 0xbe
        sub_opcodes:
          - mnemonic: mov
            operand: [ rSI, Iv ]
            semantic: *mov

          - mnemonic: mov
            operand: [ r14, Iv ]
            attr: [ rexb ]
            semantic: *mov

      - opcode: 0xbf
        sub_opcodes:
          - mnemonic: mov
            operand: [ rDI, Iv ]
            semantic: *mov

          - mnemonic: mov
            operand: [ r15, Iv ]
            attr: [ rexb ]
            semantic: *mov

      - opcode: 0xc0
        operand: [ Eb, Ib ]
        reference: group_02

      - opcode: 0xc1
        operand: [ Ev, Ib ]
        reference: group_02

      - opcode: 0xc2
        mnemonic: ret
        operand: [ Iw ]
        operation_type: ['ret']
        semantic: [ program.id = stack.mem, stack.id += stack.size, stack.id += op0.val ]

      - opcode: 0xc3
        mnemonic: ret
        operation_type: ['ret']
        semantic: *ret

      - opcode: 0xc4
        sub_opcodes:
          - mnemonic: les
            operand: [ Gv, Mp ]

          - mnemonic: VEX3
            constraint: pfx3
            attr: [ m64 ]

      - opcode: 0xc5
        sub_opcodes:
          - mnemonic: lds
            operand: [ Gv, Mp ]

          - mnemonic: VEX2
            constraint: pfx2
            attr: [ m64 ]

      - opcode: 0xc6
        operand: [ Eb, Ib ]
        reference: group_11

      - opcode: 0xc7
        operand: [ Ev, Iz ]
        reference: group_11

      - opcode: 0xc8
        mnemonic: enter
        operand: [ Iw, Ib ]
        cpu_model: ">= X86_Arch_80186"
        constraint: d64

      - opcode: 0xc9
        mnemonic: leave
        cpu_model: ">= X86_Arch_80186"
        constraint: d64
        semantic: [ stack.id = frame.id, frame.id = stack.mem, stack.id += stack.size ]

      - opcode: 0xca
        mnemonic: retf
        operand: [ Iw ]
        operation_type: ['ret']

      - opcode: 0xcb
        mnemonic: retf
        operation_type: ['ret']

      - opcode: 0xcc
        mnemonic: int
        operand: [ "3" ]

      - opcode: 0xcd
        mnemonic: int
        operand: [ Ib ]

      - opcode: 0xce
        mnemonic: into
        attr: [ nm64 ]

      - opcode: 0xcf
        mnemonic: iret
        operation_type: ['ret']

      - opcode: 0xd0
        operand: [ Eb, "1" ]
        reference: group_02

      - opcode: 0xd1
        operand: [ Ev, "1" ]
        reference: group_02

      - opcode: 0xd2
        operand: [ Eb, CL ]
        reference: group_02

      - opcode: 0xd3
        operand: [ Ev, CL ]
        reference: group_02

      - opcode: 0xd4
        mnemonic: aam
        operand: [ Ib ]
        update_flags: [ sf, zf, pf ]
        clear_flags: [ of, af, cf ]
        attr: [ nm64 ]

      - opcode: 0xd5
        mnemonic: aad
        operand: [ Ib ]
        update_flags: [ sf, zf, pf ]
        clear_flags: [ of, af, cf ]
        attr: [ nm64 ]

      - opcode: 0xd6
        mnemonic: salc
        test_flags: [ cf ]
        attr: [ nm64 ]

      - opcode: 0xd7
        mnemonic: xlat

      - opcode: 0xd8
        reference: fpu0

      - opcode: 0xd9
        reference: fpu1

      - opcode: 0xda
        reference: fpu2

      - opcode: 0xdb
        reference: fpu3

      - opcode: 0xdc
        reference: fpu4

      - opcode: 0xdd
        reference: fpu5

      - opcode: 0xde
        reference: fpu6

      - opcode: 0xdf
        reference: fpu7

      - opcode: 0xe0
        mnemonic: loopnz
        operand: [ Jb ]
        operation_type: ['jmp', 'cond']
        test_flags: [ zf ]
        semantic: *loopnz

      - opcode: 0xe1
        mnemonic: loopz
        operand: [ Jb ]
        operation_type: ['jmp', 'cond']
        test_flags: [ zf ]
        semantic: *loopz

      - opcode: 0xe2
        mnemonic: loop
        operand: [ Jb ]
        operation_type: ['jmp', 'cond']
        semantic: *loop

      - opcode: 0xe3
        sub_opcodes:
          - mnemonic: jcxz
            operand: [ Jb ]
            operation_type: ['jmp', 'cond']
            semantic: *jcntz

          - mnemonic: jecxz
            operand: [ Jb ]
            operation_type: ['jmp', 'cond']
            attr: [ na16 ]
            semantic: *jcntz

          - mnemonic: jrcxz
            operand: [ Jb ]
            operation_type: ['jmp', 'cond']
            attr: [ a64 ]
            semantic: *jcntz

      - opcode: 0xe4
        mnemonic: in
        operand: [ AL, Ib ]

      - opcode: 0xe5
        mnemonic: in
        operand: [ eAX, Ib ]

      - opcode: 0xe6
        mnemonic: out
        operand: [ Ib, AL ]

      - opcode: 0xe7
        mnemonic: out
        operand: [ Ib, eAX ]

      - opcode: 0xe8
        mnemonic: call
        operand: [ Jz ]
        operation_type: ['call']
        semantic: *call

      - opcode: 0xe9
        mnemonic: jmp
        operand: [ Jz ]
        operation_type: ['jmp']
        semantic: *jmp

      - opcode: 0xea
        mnemonic: jmp
        operand: [ Ap ]
        operation_type: ['jmp']
        attr: [ nm64 ]
        semantic: *jmp

      - opcode: 0xeb
        mnemonic: jmp
        operand: [ Jb ]
        operation_type: ['jmp']
        semantic: *jmp

      - opcode: 0xec
        mnemonic: in
        operand: [ AL, DX ]

      - opcode: 0xed
        mnemonic: in
        operand: [ eAX, DX ]

      - opcode: 0xee
        mnemonic: out
        operand: [ DX, AL ]

      - opcode: 0xef
        mnemonic: out
        operand: [ DX, eAX ]

      - opcode: 0xf0
        mnemonic: Lock
        constraint: pfx1

      - opcode: 0xf1
        mnemonic: icebp

      - opcode: 0xf2
        mnemonic: RepNz
        constraint: pfx1
        test_flags: [ zf ]

      - opcode: 0xf3
        mnemonic: Rep
        constraint: pfx1
        test_flags: [ zf ]

      - opcode: 0xf4
        mnemonic: hlt
        operation_type: ['ret']

      - opcode: 0xf5
        mnemonic: cmc
        update_flags: [ cf ]

      - opcode: 0xf6
        reference: group_03A

      - opcode: 0xf7
        reference: group_03B

      - opcode: 0xf8
        mnemonic: clc
        clear_flags: [ cf ]

      - opcode: 0xf9
        mnemonic: stc
        update_flags: [ cf ]

      - opcode: 0xfa
        mnemonic: cli
        clear_flags: [ if ]

      - opcode: 0xfb
        mnemonic: sti
        set_flags: [ if ]

      - opcode: 0xfc
        mnemonic: cld
        clear_flags: [ df ]

      - opcode: 0xfd
        mnemonic: std
        set_flags: [ df ]

      - opcode: 0xfe
        reference: group_04

      - opcode: 0xff
        reference: group_05

    table_2:
      - opcode: 0x00
        reference: group_06

      - opcode: 0x01
        reference: group_07

      - opcode: 0x02
        mnemonic: lar
        operand: [ Gv, Ew ]

      - opcode: 0x03
        mnemonic: lsl
        operand: [ Gv, Ew ]

      - opcode: 0x04
        mnemonic: loadall
        cpu_model: "== X86_Arch_80286"

      - opcode: 0x05
        sub_opcodes:
          - mnemonic: loadall
            cpu_model: "== X86_Arch_80286"

          - mnemonic: syscall
            cpu_model: ">= X86_Arch_K6_2"
            semantic: [ expr('syscall') ]

      - opcode: 0x06
        mnemonic: clts

      - opcode: 0x07
        sub_opcodes:
          - mnemonic: loadall
            cpu_model: "== X86_Arch_80386"

          - mnemonic: sysret
            cpu_model: ">= X86_Arch_K6_2"

      - opcode: 0x08
        mnemonic: invd
        cpu_model: ">= X86_Arch_80486"

      - opcode: 0x09
        mnemonic: wbindvd
        cpu_model: ">= X86_Arch_80486"

      - opcode: 0x0a
        invalid:

      - opcode: 0x0b
        mnemonic: ud1
        cpu_model: ">= X86_Arch_80286"

      - opcode: 0x0c
        invalid:

      - opcode: 0x0d
        sub_opcodes:
          - invalid:

          - mnemonic: nop
            operand: [ Ev ]
            cpu_model: ">= X86_Arch_Pentium_pro"
            semantic: *nop

            operand: [ M ]
            reference: group_3DNOW1
            attr: [ amd ]

      - opcode: 0x0e
        sub_opcodes:
          - invalid:

          - mnemonic: femms
            attr: [ amd ]

      - opcode: 0x0f
        sub_opcodes:
          - invalid:

            reference: table_3DNOW1
            cpu_model: ">= X86_Arch_K6_2"

      - opcode: 0x10
        sub_opcodes:
          - mnemonic: umov
            operand: [ Eb, Gb ]
            cpu_model: "== X86_Arch_80386"

          - mnemonic: vmovups
            operand: [ Vx, Wx ]
            cpu_model: ">= X86_Arch_Sse"

          - mnemonic: vmovupd
            operand: [ Vx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse2"

          - mnemonic: vmovss
            operand: [ Vo, Mod ]
            prefix: 0xf3
            cpu_model: ">= X86_Arch_Sse"

          - mnemonic: vmovsd
            operand: [ Vo, Moq ]
            prefix: 0xf2
            cpu_model: ">= X86_Arch_Sse2"

      - opcode: 0x11
        sub_opcodes:
          - mnemonic: umov
            operand: [ Ev, Gv ]
            cpu_model: "== X86_Arch_80386"

          - mnemonic: vmovups
            operand: [ Wx, Vx ]
            cpu_model: ">= X86_Arch_Sse"

          - mnemonic: vmovupd
            operand: [ Wx, Vx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse2"

          - mnemonic: vmovss
            operand: [ Mo, Vod ]
            prefix: 0xf3
            cpu_model: ">= X86_Arch_Sse"

          - mnemonic: vmovsd
            operand: [ Mo, Voq ]
            prefix: 0xf2
            cpu_model: ">= X86_Arch_Sse2"

      - opcode: 0x12
        sub_opcodes:
          - mnemonic: umov
            operand: [ Gb, Ev ]
            cpu_model: "== X86_Arch_80386"

          - mnemonic: vmovlps
            operand: [ Vo, Ho, Moq ]
            cpu_model: ">= X86_Arch_Sse"

          - mnemonic: vmovlpd
            operand: [ Vo, Ho, Moq ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse2"

          - mnemonic: vmovsldup
            operand: [ Vx, Wx ]
            prefix: 0xf3
            cpu_model: ">= X86_Arch_Sse3"

          - mnemonic: vmovddup
            operand: [ Vo, Woq ]
            prefix: 0xf2
            cpu_model: ">= X86_Arch_Sse3"

      - opcode: 0x13
        sub_opcodes:
          - mnemonic: umov
            operand: [ Gv, Ev ]
            cpu_model: "== X86_Arch_80386"

          - mnemonic: vmovlps
            operand: [ Moq, Vo ]
            cpu_model: ">= X86_Arch_Sse"

          - mnemonic: vmovlpd
            operand: [ Moq, Vo ]
            cpu_model: ">= X86_Arch_Sse2"

      - opcode: 0x14
        sub_opcodes:
          - invalid:

          - mnemonic: vunpcklps
            operand: [ Vx, Hx, Wx ]
            cpu_model: ">= X86_Arch_Sse"

          - mnemonic: vunpcklpd
            operand: [ Vx, Hx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse2"

      - opcode: 0x15
        sub_opcodes:
          - invalid:

          - mnemonic: vunpckhps
            operand: [ Vx, Hx, Wx ]
            cpu_model: ">= X86_Arch_Sse"

          - mnemonic: vunpckhpd
            operand: [ Vx, Hx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse2"

      - opcode: 0x16
        sub_opcodes:
          - invalid:

          - mnemonic: vmovhps
            operand: [ Vo, Ho, Moq ]
            cpu_model: ">= X86_Arch_Sse"

          - mnemonic: vmovhpd
            operand: [ Vo, Ho, Moq ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse2"

          - mnemonic: vmovshdup
            operand: [ Vx, Wx ]
            prefix: 0xf3
            cpu_model: ">= X86_Arch_Sse3"

      - opcode: 0x17
        sub_opcodes:
          - invalid:

          - mnemonic: vmovhps
            operand: [ Moq, Vo ]
            cpu_model: ">= X86_Arch_Sse"

          - mnemonic: vmovhpd
            operand: [ Moq, Vo ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse2"

      - opcode: 0x18
        reference: group_16

      - opcode: 0x19
        reference: group_16

      - opcode: 0x1a
        reference: group_16

      - opcode: 0x1b
        reference: group_16

      - opcode: 0x1c
        reference: group_16

      - opcode: 0x1d
        reference: group_16

      - opcode: 0x1e
        reference: group_16

      - opcode: 0x1f
        reference: group_16

      - opcode: 0x20
        sub_opcodes:
          - invalid:

          - mnemonic: mov
            operand: [ Ry, Cy ]
            constraint: f64
            cpu_model: ">= X86_Arch_80386"

      - opcode: 0x21
        sub_opcodes:
          - invalid:

          - mnemonic: mov
            operand: [ Ry, Dy ]
            constraint: f64
            cpu_model: ">= X86_Arch_80386"

      - opcode: 0x22
        sub_opcodes:
          - invalid:

          - mnemonic: mov
            operand: [ Dy, Ry ]
            constraint: f64
            cpu_model: ">= X86_Arch_80386"

      - opcode: 0x23
        sub_opcodes:
          - invalid:

          - mnemonic: mov
            operand: [ Dy, Ry ]
            constraint: f64
            cpu_model: ">= X86_Arch_80386"

      - opcode: 0x24
        sub_opcodes:
          - invalid:

          - mnemonic: mov
            operand: [ Ry, Ty ]
            cpu_model: "== X86_Arch_80386"
            semantic: *mov

            reference: table_sse5a
            attr: [ amd ]

      - opcode: 0x25
        sub_opcodes:
          - invalid:

            reference: table_sse5a
            attr: [ amd ]

      - opcode: 0x26
        sub_opcodes:
          - invalid:

          - mnemonic: mov
            operand: [ Ty, Ry ]
            constraint: f64
            cpu_model: "== X86_Arch_80386"
            semantic: *mov

      - opcode: 0x27
        invalid:

      - opcode: 0x28
        sub_opcodes:
          - mnemonic: vmovaps
            operand: [ Vx, Wx ]
            cpu_model: ">= X86_Arch_Sse"

          - mnemonic: vmovapd
            operand: [ Vx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse2"

      - opcode: 0x29
        sub_opcodes:
          - mnemonic: vmovaps
            operand: [ Wx, Vx ]
            cpu_model: ">= X86_Arch_Sse"

          - mnemonic: vmovapd
            operand: [ Wx, Vx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse2"

      - opcode: 0x2a
        sub_opcodes:
          - mnemonic: cvtpi2ps
            operand: [ Vo, Mq ]
            cpu_model: ">= X86_Arch_Sse"

          - mnemonic: cvtpi2ps
            operand: [ Vo, Nq ]
            cpu_model: ">= X86_Arch_Sse"

          - mnemonic: cvtpi2pd
            operand: [ Vo, Mq ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse"

          - mnemonic: cvtpi2pd
            operand: [ Vo, Nq ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse"

          - mnemonic: vcvtsi2ss
            operand: [ Vo, Ho, Ey ]
            prefix: 0xf3
            cpu_model: ">= X86_Arch_Sse"

          - mnemonic: vcvtsi2sd
            operand: [ Vo, Ho, Ey ]
            prefix: 0xf2
            cpu_model: ">= X86_Arch_Sse2"

      - opcode: 0x2b
        sub_opcodes:
          - mnemonic: vmovntps
            operand: [ Mx, Vx ]
            cpu_model: ">= X86_Arch_Sse"

          - mnemonic: vmovntpd
            operand: [ Mx, Vx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse2"

          - mnemonic: movntss
            operand: [ Md, Vo ]
            prefix: 0xf3
            cpu_model: ">= X86_Arch_Sse4a"

          - mnemonic: movntsd
            operand: [ Mq, Vo ]
            prefix: 0xf2
            cpu_model: ">= X86_Arch_Sse4a"

      - opcode: 0x2c
        sub_opcodes:
          - mnemonic: cvttps2pi
            operand: [ Pq, Woq ]
            cpu_model: ">= X86_Arch_Sse"

          - mnemonic: cvttpd2pi
            operand: [ Pq, Wo ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse2_mmx"

          - mnemonic: vcvttss2si
            operand: [ Gy, Wod ]
            prefix: 0xf3
            cpu_model: ">= X86_Arch_Sse"

          - mnemonic: vcvttsd2si
            operand: [ Gy, Woq ]
            prefix: 0xf2
            cpu_model: ">= X86_Arch_Sse2"

      - opcode: 0x2d
        sub_opcodes:
          - mnemonic: cvtps2pi
            operand: [ Pq, Woq ]
            cpu_model: ">= X86_Arch_Sse"

          - mnemonic: cvtpd2pi
            operand: [ Pq, Wo ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse2_mmx"

          - mnemonic: vcvtss2si
            operand: [ Gy, Wod ]
            prefix: 0xf3
            cpu_model: ">= X86_Arch_Sse"

          - mnemonic: vcvtsd2si
            operand: [ Gy, Woq ]
            prefix: 0xf2
            cpu_model: ">= X86_Arch_Sse2"

      - opcode: 0x2e
        sub_opcodes:
          - mnemonic: vucomiss
            operand: [ Vo, Wod ]
            cpu_model: ">= X86_Arch_Sse"

          - mnemonic: vucomisd
            operand: [ Vo, Woq ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse2"

      - opcode: 0x2f
        sub_opcodes:
          - mnemonic: vcomiss
            operand: [ Vo, Wod ]
            cpu_model: ">= X86_Arch_Sse"

          - mnemonic: vcomisd
            operand: [ Vo, Woq ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse2"

      - opcode: 0x30
        mnemonic: wrmsr

      - opcode: 0x31
        mnemonic: rdtsc
        semantic: [ expr('read_timestamp') ]

      - opcode: 0x32
        mnemonic: rdmsr

      - opcode: 0x33
        mnemonic: rdpmc

      - opcode: 0x34
        mnemonic: sysenter
        attr: [ intel ]
        semantic: [ expr('syscall') ]

      - opcode: 0x35
        mnemonic: sysexit
        attr: [ intel ]

      - opcode: 0x36
        sub_opcodes:
          - invalid:

          - mnemonic: rdshr
            operand: [ Ed ]
            attr: [ cyrix ]

      - opcode: 0x37
        sub_opcodes:
          - mnemonic: getsec

          - mnemonic: wrshr
            operand: [ Ed ]
            attr: [ cyrix ]

      - opcode: 0x38
        sub_opcodes:
          - reference: table_3_38

          - mnemonic: smint
            attr: [ cyrix ]
            cpu_model: ">= X86_Arch_80486"

          - mnemonic: smint
            attr: [ cyrix ]
            cpu_model: ">= X86_Arch_Geode_lx"

      - opcode: 0x39
        mnemonic: dmint
        attr: [ cyrix ]
        cpu_model: ">= X86_Arch_Geode_lx"

      - opcode: 0x3a
        sub_opcodes:
          - reference: table_3_3A

          - mnemonic: bb0_reset
            attr: [ cyrix ]
            cpu_model: ">= X86_Arch_Cyrix_gx1"

          - mnemonic: rdm
            attr: [ cyrix ]
            cpu_model: ">= X86_Arch_Geode_lx"

      - opcode: 0x3b
        mnemonic: bb1_reset
        attr: [ cyrix ]
        cpu_model: ">= X86_Arch_Cyrix_gx1"

      - opcode: 0x3c
        mnemonic: cpu_write
        attr: [ cyrix ]
        cpu_model: ">= X86_Arch_Cyrix_gx1"

      - opcode: 0x3d
        mnemonic: cpu_read
        attr: [ cyrix ]
        cpu_model: ">= X86_Arch_Cyrix_gx1"

      - opcode: 0x3e
        invalid:

      - opcode: 0x3f
        mnemonic: altinst
        attr: [ cyrix ]
        cpu_model: ">= X86_Arch_Centaur_ais"

      - opcode: 0x40
        mnemonic: cmovo
        operand: [ Gv, Ev ]
        operation_type: ['cond']
        test_flags: [ of ]
        semantic: *cmovo

      - opcode: 0x41
        mnemonic: cmovno
        operand: [ Gv, Ev ]
        operation_type: ['cond']
        test_flags: [ of ]
        semantic: *cmovno

      - opcode: 0x42
        mnemonic: cmovb
        operand: [ Gv, Ev ]
        operation_type: ['cond']
        test_flags: [ cf ]
        semantic: *cmovc

      - opcode: 0x43
        mnemonic: cmovnb
        operand: [ Gv, Ev ]
        operation_type: ['cond']
        test_flags: [ cf ]
        semantic: *cmovnc

      - opcode: 0x44
        mnemonic: cmovz
        operand: [ Gv, Ev ]
        operation_type: ['cond']
        test_flags: [ zf ]
        semantic: *cmovz

      - opcode: 0x45
        mnemonic: cmovnz
        operand: [ Gv, Ev ]
        operation_type: ['cond']
        test_flags: [ zf ]
        semantic: *cmovnz

      - opcode: 0x46
        mnemonic: cmovbe
        operand: [ Gv, Ev ]
        operation_type: ['cond']
        test_flags: [ zf, cf ]
        semantic: *cmovbe

      - opcode: 0x47
        mnemonic: cmovnbe
        operand: [ Gv, Ev ]
        operation_type: ['cond']
        test_flags: [ zf, cf ]
        semantic: *cmova

      - opcode: 0x48
        mnemonic: cmovs
        operand: [ Gv, Ev ]
        operation_type: ['cond']
        test_flags: [ sf ]
        semantic: *cmovs

      - opcode: 0x49
        mnemonic: cmovns
        operand: [ Gv, Ev ]
        operation_type: ['cond']
        test_flags: [ sf ]
        semantic: *cmovns

      - opcode: 0x4a
        mnemonic: cmovp
        operand: [ Gv, Ev ]
        operation_type: ['cond']
        test_flags: [ pf ]
        semantic: *cmovp

      - opcode: 0x4b
        mnemonic: cmovnp
        operand: [ Gv, Ev ]
        operation_type: ['cond']
        test_flags: [ pf ]
        semantic: *cmovnp

      - opcode: 0x4c
        mnemonic: cmovl
        operand: [ Gv, Ev ]
        operation_type: ['cond']
        test_flags: [ of, sf ]
        semantic: *cmovl

      - opcode: 0x4d
        mnemonic: cmovnl
        operand: [ Gv, Ev ]
        operation_type: ['cond']
        test_flags: [ of, sf ]
        semantic: *cmovge

      - opcode: 0x4e
        mnemonic: cmovle
        operand: [ Gv, Ev ]
        operation_type: ['cond']
        test_flags: [ of, sf, zf ]
        semantic: *cmovle

      - opcode: 0x4f
        mnemonic: cmovnle
        operand: [ Gv, Ev ]
        operation_type: ['cond']
        test_flags: [ of, sf, zf ]
        semantic: *cmovg

      - opcode: 0x50
        sub_opcodes:
          - mnemonic: vmovmskps
            operand: [ Gy, Ux ]
            cpu_model: ">= X86_Arch_Sse"

          - mnemonic: vmovmskpd
            operand: [ Gy, Ux ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse2"

      - opcode: 0x51
        sub_opcodes:
          - mnemonic: vsqrtps
            operand: [ Vx, Wx ]
            cpu_model: ">= X86_Arch_Sse"

          - mnemonic: vsqrtpsd
            operand: [ Vx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse2"

          - mnemonic: vsqrtss
            operand: [ Vo, Ho, Wod ]
            prefix: 0xf3
            cpu_model: ">= X86_Arch_Sse"

          - mnemonic: vsqrtsd
            operand: [ Vo, Ho, Woq ]
            prefix: 0xf2
            cpu_model: ">= X86_Arch_Sse2"

      - opcode: 0x52
        sub_opcodes:
          - mnemonic: vrsqrtps
            operand: [ Vx, Wx ]
            cpu_model: ">= X86_Arch_Sse"

          - mnemonic: vrsqrtss
            operand: [ Vo, Ho, Wod ]
            prefix: 0xf3
            cpu_model: ">= X86_Arch_Sse"

      - opcode: 0x53
        sub_opcodes:
          - mnemonic: vrcpps
            operand: [ Vx, Wx ]
            cpu_model: ">= X86_Arch_Sse"

          - mnemonic: vrcpss
            operand: [ Vo, Ho, Wod ]
            prefix: 0xf3
            cpu_model: ">= X86_Arch_Sse"

      - opcode: 0x54
        sub_opcodes:
          - mnemonic: vandps
            operand: [ Vx, Hx, Wx ]
            cpu_model: ">= X86_Arch_Sse"

          - mnemonic: vandpd
            operand: [ Vx, Hx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse2"

      - opcode: 0x55
        sub_opcodes:
          - mnemonic: vandnps
            operand: [ Vx, Hx, Wx ]
            cpu_model: ">= X86_Arch_Sse"

          - mnemonic: vandnpd
            operand: [ Vx, Hx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse2"

      - opcode: 0x56
        sub_opcodes:
          - mnemonic: vorps
            operand: [ Vx, Hx, Wx ]
            cpu_model: ">= X86_Arch_Sse"

          - mnemonic: vorpd
            operand: [ Vx, Hx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse"

      - opcode: 0x57
        sub_opcodes:
          - mnemonic: vxorps
            operand: [ Vx, Hx, Wx ]
            cpu_model: ">= X86_Arch_Sse"

          - mnemonic: vxorpd
            operand: [ Vx, Hx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse2"

      - opcode: 0x58
        sub_opcodes:
          - mnemonic: vaddps
            operand: [ Vx, Hx, Wx ]
            cpu_model: ">= X86_Arch_Sse"

          - mnemonic: vaddpd
            operand: [ Vx, Hx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse2"

          - mnemonic: vaddss
            operand: [ Vo, Ho, Wod ]
            prefix: 0xf3
            cpu_model: ">= X86_Arch_Sse"

          - mnemonic: vaddsd
            operand: [ Vo, Ho, Woq ]
            prefix: 0xf2
            cpu_model: ">= X86_Arch_Sse2"

      - opcode: 0x59
        sub_opcodes:
          - mnemonic: vmulps
            operand: [ Vx, Hx, Wx ]
            cpu_model: ">= X86_Arch_Sse"

          - mnemonic: vmulpd
            operand: [ Vx, Hx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse2"

          - mnemonic: vmulss
            operand: [ Vo, Ho, Wod ]
            prefix: 0xf3
            cpu_model: ">= X86_Arch_Sse"

          - mnemonic: vmulsd
            operand: [ Vo, Ho, Woq ]
            prefix: 0xf2
            cpu_model: ">= X86_Arch_Sse2"

      - opcode: 0x5a
        sub_opcodes:
          - mnemonic: vcvtps2pd
            operand: [ Vx, Hx, Wx ]
            cpu_model: ">= X86_Arch_Sse"

          - mnemonic: vcvtpd2ps
            operand: [ Vx, Hx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse2"

          - mnemonic: vcvtss2sd
            operand: [ Vo, Ho, Wod ]
            prefix: 0xf3
            cpu_model: ">= X86_Arch_Sse2"

          - mnemonic: vcvtsd2ss
            operand: [ Vo, Ho, Woq ]
            prefix: 0xf2
            cpu_model: ">= X86_Arch_Sse2"

      - opcode: 0x5b
        sub_opcodes:
          - mnemonic: vcvtdq2ps
            operand: [ Vx, Wx ]
            cpu_model: ">= X86_Arch_Sse"

          - mnemonic: vcvtps2dq
            operand: [ Vx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse2"

          - mnemonic: vcvttps2dq
            operand: [ Vx, Wx ]
            prefix: 0xf3
            cpu_model: ">= X86_Arch_Sse2"

      - opcode: 0x5c
        sub_opcodes:
          - mnemonic: vsubps
            operand: [ Vx, Hx, Wx ]
            cpu_model: ">= X86_Arch_Sse"

          - mnemonic: vsubpd
            operand: [ Vx, Hx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse2"

          - mnemonic: vsubss
            operand: [ Vo, Ho, Wod ]
            prefix: 0xf3
            cpu_model: ">= X86_Arch_Sse"

          - mnemonic: vsubsd
            operand: [ Vo, Ho, Woq ]
            prefix: 0xf2
            cpu_model: ">= X86_Arch_Sse2"

      - opcode: 0x5d
        sub_opcodes:
          - mnemonic: vminps
            operand: [ Vx, Hx, Wx ]
            cpu_model: ">= X86_Arch_Sse"

          - mnemonic: vminpd
            operand: [ Vx, Hx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse2"

          - mnemonic: vminss
            operand: [ Vo, Ho, Wod ]
            prefix: 0xf3
            cpu_model: ">= X86_Arch_Sse"

          - mnemonic: vminsd
            operand: [ Vo, Ho, Woq ]
            prefix: 0xf2
            cpu_model: ">= X86_Arch_Sse2"

      - opcode: 0x5e
        sub_opcodes:
          - mnemonic: vdivps
            operand: [ Vx, Hx, Wx ]
            cpu_model: ">= X86_Arch_Sse"

          - mnemonic: vdivpd
            operand: [ Vx, Hx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse2"

          - mnemonic: vdivss
            operand: [ Vo, Ho, Wod ]
            prefix: 0xf3
            cpu_model: ">= X86_Arch_Sse"

          - mnemonic: vdivsd
            operand: [ Vo, Ho, Woq ]
            prefix: 0xf2
            cpu_model: ">= X86_Arch_Sse2"

      - opcode: 0x5f
        sub_opcodes:
          - mnemonic: vmaxps
            operand: [ Vx, Hx, Wx ]
            cpu_model: ">= X86_Arch_Sse"

          - mnemonic: vmaxpd
            operand: [ Vx, Hx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse2"

          - mnemonic: vmaxss
            operand: [ Vo, Ho, Wod ]
            prefix: 0xf3
            cpu_model: ">= X86_Arch_Sse"

          - mnemonic: vmaxsd
            operand: [ Vo, Ho, Woq ]
            prefix: 0xf2
            cpu_model: ">= X86_Arch_Sse2"

      - opcode: 0x60
        sub_opcodes:
          - mnemonic: punpcklbw
            operand: [ Pq, Qd ]
            cpu_model: ">= X86_Arch_Mmx"

          - mnemonic: vpupcklbw
            operand: [ Vx, Hx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse2"

      - opcode: 0x61
        sub_opcodes:
          - mnemonic: vpunpcklwd
            operand: [ Pq, Qd ]
            cpu_model: ">= X86_Arch_Mmx"

          - mnemonic: vpunpcklwd
            operand: [ Vx, Hx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse2"

      - opcode: 0x62
        sub_opcodes:
          - mnemonic: punpckldq
            operand: [ Pq, Qd ]
            cpu_model: ">= X86_Arch_Mmx"

          - mnemonic: vpupckldq
            operand: [ Vx, Hx, Wx ]
            cpu_model: ">= X86_Arch_Sse2"

      - opcode: 0x63
        sub_opcodes:
          - mnemonic: packsswb
            operand: [ Pq, Qq ]
            cpu_model: ">= X86_Arch_Mmx"

          - mnemonic: vpacksswb
            operand: [ Vx, Hx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse2"

      - opcode: 0x64
        sub_opcodes:
          - mnemonic: pcmpgtb
            operand: [ Pq, Qq ]
            cpu_model: ">= X86_Arch_Mmx"

          - mnemonic: vpcmpgtb
            operand: [ Vx, Hx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse2"

      - opcode: 0x65
        sub_opcodes:
          - mnemonic: pcmpgtw
            operand: [ Pq, Qq ]
            cpu_model: ">= X86_Arch_Mmx"

          - mnemonic: vpcmpgtw
            operand: [ Vx, Hx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse2"

      - opcode: 0x66
        sub_opcodes:
          - mnemonic: pcmpgtd
            operand: [ Pq, Qq ]
            cpu_model: ">= X86_Arch_Mmx"

          - mnemonic: vcmpgtd
            operand: [ Vx, Hx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse2"

      - opcode: 0x67
        sub_opcodes:
          - mnemonic: packuswb
            operand: [ Pq, Qq ]
            cpu_model: ">= X86_Arch_Mmx"

          - mnemonic: vpackuswb
            operand: [ Vx, Hx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse2"

      - opcode: 0x68
        sub_opcodes:
          - mnemonic: punpckhbw
            operand: [ Pq, Qq ]
            cpu_model: ">= X86_Arch_Mmx"

          - mnemonic: vpunpckhbw
            operand: [ Hx, Hx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse2"

      - opcode: 0x69
        sub_opcodes:
          - mnemonic: punpckhwd
            operand: [ Pq, Qq ]
            cpu_model: ">= X86_Arch_Mmx"

          - mnemonic: vpunpckhwd
            operand: [ Vx, Hx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse2"

      - opcode: 0x6a
        sub_opcodes:
          - mnemonic: punpckhdq
            operand: [ Pq, Qq ]
            cpu_model: ">= X86_Arch_Mmx"

          - mnemonic: vpunpckhdq
            operand: [ Vx, Hx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse2"

      - opcode: 0x6b
        sub_opcodes:
          - mnemonic: packssdw
            operand: [ Pq, Qq ]
            cpu_model: ">= X86_Arch_Mmx"

          - mnemonic: vpackssdw
            operand: [ Vx, Hx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse2"

      - opcode: 0x6c
        sub_opcodes:
          - invalid:

          - mnemonic: vpunpcklqdq
            operand: [ Vx, Hx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse2"

      - opcode: 0x6d
        sub_opcodes:
          - invalid:

          - mnemonic: vpunpckhqdq
            operand: [ Vx, Hx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse2"

      - opcode: 0x6e
        sub_opcodes:
          - mnemonic: movd
            operand: [ Pq, Ey ]
            cpu_model: ">= X86_Arch_Mmx"

          - mnemonic: vmovd
            operand: [ Vo, Ey ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse2"

      - opcode: 0x6f
        sub_opcodes:
          - mnemonic: movq
            operand: [ Pq, Qq ]
            cpu_model: ">= X86_Arch_Mmx"

          - mnemonic: vmodqa
            operand: [ Vx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse2"

          - mnemonic: vmovdqu
            operand: [ Vx, Wx ]
            prefix: 0xf3
            cpu_model: ">= X86_Arch_Sse"

      - opcode: 0x70
        sub_opcodes:
          - mnemonic: pshufw
            operand: [ Pq, Qq, Ib ]
            cpu_model: ">= X86_Arch_Mmx_sse"

          - mnemonic: vpshufd
            operand: [ Vx, Wx, Ib ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse2"

          - mnemonic: vpshufhw
            operand: [ Vx, Wx, Ib ]
            prefix: 0xf3
            cpu_model: ">= X86_Arch_Sse2"

          - mnemonic: vpshuflw
            operand: [ Vx, Wx, Ib ]
            prefix: 0xf2
            cpu_model: ">= X86_Arch_Sse2"

      - opcode: 0x71
        invalid:

      - opcode: 0x72
        invalid:

      - opcode: 0x73
        invalid:

      - opcode: 0x74
        sub_opcodes:
          - mnemonic: pcmpeqb
            operand: [ Pq, Qq ]
            cpu_model: ">= X86_Arch_Mmx"

          - mnemonic: vpcmpeqb
            operand: [ Vx, Hx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse2"

      - opcode: 0x75
        sub_opcodes:
          - mnemonic: pcmpeqw
            operand: [ Pq, Qq ]
            cpu_model: ">= X86_Arch_Mmx"

          - mnemonic: vpcmpeqw
            operand: [ Vx, Hx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse2"

      - opcode: 0x76
        sub_opcodes:
          - mnemonic: pcmpeqd
            operand: [ Pq, Qq ]
            cpu_model: ">= X86_Arch_Mmx"

          - mnemonic: vpcmpeqd
            operand: [ Vx, Hx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse2"

      - opcode: 0x77
        sub_opcodes:
          - mnemonic: emms
            cpu_model: ">= X86_Arch_Mmx"

          - mnemonic: vzeroupper
            cpu_model: ">= X86_Arch_Avx"

      - opcode: 0x78
        sub_opcodes:
          - mnemonic: vmread
            operand: [ Ey, Gy ]

          - mnemonic: extrq
            operand: [ Uo, Ib, Ib ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse4a"

      - opcode: 0x79
        sub_opcodes:
          - mnemonic: vmwrite
            operand: [ Gy, Ey ]

          - mnemonic: extrq
            operand: [ Vo, Uo ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse4a"

      - opcode: 0x7a
        reference: table_sse5a
        attr: [ amd ]

      - opcode: 0x7b
        reference: table_sse5a
        attr: [ amd ]

      - opcode: 0x7c
        sub_opcodes:
          - invalid:

          - mnemonic: vhaddpd
            operand: [ Vx, Hx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse3"

          - mnemonic: vhaddps
            operand: [ Vx, Hx, Wx ]
            prefix: 0xf2
            cpu_model: ">= X86_Arch_Sse3"

      - opcode: 0x7d
        sub_opcodes:
          - invalid:

          - mnemonic: vhsubpd
            operand: [ Vx, Hx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse3"

          - mnemonic: vhsubps
            operand: [ Vx, Hx, Wx ]
            prefix: 0xf2
            cpu_model: ">= X86_Arch_Sse3"

      - opcode: 0x7e
        sub_opcodes:
          - mnemonic: movd
            operand: [ Ey, Pq ]
            cpu_model: ">= X86_Arch_Mmx"

          - mnemonic: vmovd
            operand: [ Ey, Vo ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse2"

          - mnemonic: vmovq
            operand: [ Vo, Woq ]
            prefix: 0xf3
            cpu_model: ">= X86_Arch_Sse2"

      - opcode: 0x7f
        sub_opcodes:
          - mnemonic: movq
            operand: [ Qq, Pq ]
            cpu_model: ">= X86_Arch_Mmx"

          - mnemonic: vmovdqa
            operand: [ Wx, Vx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse2"

          - mnemonic: vmovdqu
            operand: [ Wx, Vx ]
            prefix: 0xf3
            cpu_model: ">= X86_Arch_Sse2"

      - opcode: 0x80
        mnemonic: jo
        operand: [ Jz ]
        constraint: df64
        operation_type: ['jmp', 'cond']
        test_flags: [ of ]
        cpu_model: ">= X86_Arch_80386"
        semantic: *jmpo

      - opcode: 0x81
        mnemonic: jno
        operand: [ Jz ]
        constraint: df64
        operation_type: ['jmp', 'cond']
        test_flags: [ of ]
        cpu_model: ">= X86_Arch_80386"
        semantic: *jmpno

      - opcode: 0x82
        mnemonic: jb
        operand: [ Jz ]
        constraint: df64
        operation_type: ['jmp', 'cond']
        test_flags: [ cf ]
        cpu_model: ">= X86_Arch_80386"
        semantic: *jmpc

      - opcode: 0x83
        mnemonic: jnb
        operand: [ Jz ]
        constraint: df64
        operation_type: ['jmp', 'cond']
        test_flags: [ cf ]
        cpu_model: ">= X86_Arch_80386"
        semantic: *jmpnc

      - opcode: 0x84
        mnemonic: jz
        operand: [ Jz ]
        constraint: df64
        operation_type: ['jmp', 'cond']
        test_flags: [ zf ]
        cpu_model: ">= X86_Arch_80386"
        semantic: *jmpz

      - opcode: 0x85
        mnemonic: jnz
        operand: [ Jz ]
        constraint: df64
        operation_type: ['jmp', 'cond']
        test_flags: [ zf ]
        cpu_model: ">= X86_Arch_80386"
        semantic: *jmpnz

      - opcode: 0x86
        mnemonic: jbe
        operand: [ Jz ]
        constraint: df64
        operation_type: ['jmp', 'cond']
        test_flags: [ zf, cf ]
        cpu_model: ">= X86_Arch_80386"
        semantic: *jmpbe

      - opcode: 0x87
        mnemonic: jnbe
        operand: [ Jz ]
        constraint: df64
        operation_type: ['jmp', 'cond']
        test_flags: [ zf, cf ]
        cpu_model: ">= X86_Arch_80386"
        semantic: *jmpa

      - opcode: 0x88
        mnemonic: js
        operand: [ Jz ]
        constraint: df64
        operation_type: ['jmp', 'cond']
        test_flags: [ sf ]
        cpu_model: ">= X86_Arch_80386"
        semantic: *jmps

      - opcode: 0x89
        mnemonic: jns
        operand: [ Jz ]
        constraint: df64
        operation_type: ['jmp', 'cond']
        test_flags: [ sf ]
        cpu_model: ">= X86_Arch_80386"
        semantic: *jmpns

      - opcode: 0x8a
        mnemonic: jp
        operand: [ Jz ]
        constraint: df64
        operation_type: ['jmp', 'cond']
        test_flags: [ pf ]
        cpu_model: ">= X86_Arch_80386"
        semantic: *jmpp

      - opcode: 0x8b
        mnemonic: jnp
        operand: [ Jz ]
        constraint: df64
        operation_type: ['jmp', 'cond']
        test_flags: [ pf ]
        cpu_model: ">= X86_Arch_80386"
        semantic: *jmpnp

      - opcode: 0x8c
        mnemonic: jl
        operand: [ Jz ]
        constraint: df64
        operation_type: ['jmp', 'cond']
        test_flags: [ of, sf ]
        cpu_model: ">= X86_Arch_80386"
        semantic: *jmpl

      - opcode: 0x8d
        mnemonic: jnl
        operand: [ Jz ]
        constraint: df64
        operation_type: ['jmp', 'cond']
        test_flags: [ of, sf ]
        cpu_model: ">= X86_Arch_80386"
        semantic: *jmpge

      - opcode: 0x8e
        mnemonic: jle
        operand: [ Jz ]
        constraint: df64
        operation_type: ['jmp', 'cond']
        test_flags: [ of, sf, zf ]
        cpu_model: ">= X86_Arch_80386"
        semantic: *jmple

      - opcode: 0x8f
        mnemonic: jnle
        operand: [ Jz ]
        constraint: df64
        operation_type: ['jmp', 'cond']
        test_flags: [ of, sf, zf ]
        cpu_model: ">= X86_Arch_80386"
        semantic: *jmpg

      - opcode: 0x90
        mnemonic: seto
        operand: [ Eb ]
        test_flags: [ of ]
        cpu_model: ">= X86_Arch_80386"
        semantic: *seto

      - opcode: 0x91
        mnemonic: setno
        operand: [ Eb ]
        test_flags: [ of ]
        cpu_model: ">= X86_Arch_80386"
        semantic: *setno

      - opcode: 0x92
        mnemonic: setb
        operand: [ Eb ]
        test_flags: [ cf ]
        cpu_model: ">= X86_Arch_80386"
        semantic: *setc

      - opcode: 0x93
        mnemonic: setnb
        operand: [ Eb ]
        test_flags: [ cf ]
        cpu_model: ">= X86_Arch_80386"
        semantic: *setnc

      - opcode: 0x94
        mnemonic: setz
        operand: [ Eb ]
        test_flags: [ zf ]
        cpu_model: ">= X86_Arch_80386"
        semantic: *setz

      - opcode: 0x95
        mnemonic: setnz
        operand: [ Eb ]
        test_flags: [ zf ]
        cpu_model: ">= X86_Arch_80386"
        semantic: *setnz

      - opcode: 0x96
        mnemonic: setbe
        operand: [ Eb ]
        test_flags: [ zf, cf ]
        cpu_model: ">= X86_Arch_80386"
        semantic: *setbe

      - opcode: 0x97
        mnemonic: setnbe
        operand: [ Eb ]
        test_flags: [ zf, cf ]
        cpu_model: ">= X86_Arch_80386"
        semantic: *seta

      - opcode: 0x98
        mnemonic: sets
        operand: [ Eb ]
        test_flags: [ sf ]
        cpu_model: ">= X86_Arch_80386"
        semantic: *sets

      - opcode: 0x99
        mnemonic: setns
        operand: [ Eb ]
        test_flags: [ sf ]
        cpu_model: ">= X86_Arch_80386"
        semantic: *setns

      - opcode: 0x9a
        mnemonic: setp
        operand: [ Eb ]
        test_flags: [ pf ]
        cpu_model: ">= X86_Arch_80386"
        semantic: *setp

      - opcode: 0x9b
        mnemonic: setnp
        operand: [ Eb ]
        test_flags: [ pf ]
        cpu_model: ">= X86_Arch_80386"
        semantic: *setnp

      - opcode: 0x9c
        mnemonic: setl
        operand: [ Eb ]
        test_flags: [ of, sf ]
        cpu_model: ">= X86_Arch_80386"
        semantic: *setl

      - opcode: 0x9d
        mnemonic: setnl
        operand: [ Eb ]
        test_flags: [ of, sf ]
        cpu_model: ">= X86_Arch_80386"
        semantic: *setge

      - opcode: 0x9e
        mnemonic: setle
        operand: [ Eb ]
        test_flags: [ of, sf, zf ]
        cpu_model: ">= X86_Arch_80386"
        semantic: *setle

      - opcode: 0x9f
        mnemonic: setnle
        operand: [ Eb ]
        test_flags: [ of, sf, zf ]
        cpu_model: ">= X86_Arch_80386"
        semantic: *setg

      - opcode: 0xa0
        mnemonic: push
        operand: [ FS ]
        constraint: df64
        cpu_model: ">= X86_Arch_80386"
        semantic: *push

      - opcode: 0xa1
        mnemonic: pop
        operand: [ FS ]
        constraint: df64
        cpu_model: ">= X86_Arch_80386"
        semantic: *pop

      - opcode: 0xa2
        mnemonic: cpuid

      - opcode: 0xa3
        mnemonic: bt
        operand: [ Ev, Gv ]
        cpu_model: ">= X86_Arch_80386"

      - opcode: 0xa4
        mnemonic: shld
        operand: [ Ev, Gv, Ib ]
        cpu_model: ">= X86_Arch_80386"

      - opcode: 0xa5
        mnemonic: shld
        operand: [ Ev, Gv, CL ]
        cpu_model: ">= X86_Arch_80386"

      - opcode: 0xa6
        sub_opcodes:
          - mnemonic: xbts
            cpu_model: "== X86_Arch_80386, == X86_Arch_80486"

          - mnemonic: montmul
            cpu_model: ">= X86_Arch_Centaur_mm"

          - mnemonic: xsha
            cpu_model: ">= X86_Arch_Centaur_he"

      - opcode: 0xa7
        sub_opcodes:
          - mnemonic: ibts
            cpu_model: "== X86_Arch_80386, == X86_Arch_80486"

          - mnemonic: xstore
            cpu_model: ">= X86_Arch_Centaur_rng"

          - mnemonic: xcrypt
            cpu_model: ">= X86_Arch_Centaur_ace"

      - opcode: 0xa8
        mnemonic: push
        operand: [ GS ]
        constraint: d64
        cpu_model: ">= X86_Arch_80386"
        semantic: *push

      - opcode: 0xa9
        mnemonic: pop
        operand: [ GS ]
        constraint: d64
        cpu_model: ">= X86_Arch_80386"
        semantic: *pop

      - opcode: 0xaa
        mnemonic: rsm
        cpu_model: ">= X86_Arch_80386sl"

      - opcode: 0xab
        mnemonic: bts
        operand: [ Ev, Gv ]
        cpu_model: ">= X86_Arch_80386"

      - opcode: 0xac
        mnemonic: shrd
        operand: [ Ev, Gv, Ib ]
        cpu_model: ">= X86_Arch_80386"

      - opcode: 0xad
        mnemonic: shrd
        operand: [ Ev, Gv, CL ]
        cpu_model: ">= X86_Arch_80386"

      - opcode: 0xae
        reference: group_15

      - opcode: 0xaf
        mnemonic: imul
        operand: [ Gv, Ev ]
        cpu_model: ">= X86_Arch_80386"
        semantic: *imul2

      - opcode: 0xb0
        mnemonic: cmpxchg
        operand: [ Eb, Gb ]
        cpu_model: ">= X86_Arch_80486"
        semantic: *cmpxchg

      - opcode: 0xb1
        mnemonic: cmpxchg
        operand: [ Ev, Gv ]
        cpu_model: ">= X86_Arch_80486"
        semantic: *cmpxchg

      - opcode: 0xb2
        mnemonic: lss
        operand: [ Gv, Mp ]
        cpu_model: ">= X86_Arch_80386"

      - opcode: 0xb3
        mnemonic: btr
        operand: [ Ev, Gv ]
        cpu_model: ">= X86_Arch_80386"

      - opcode: 0xb4
        mnemonic: lfs
        operand: [ Gv, Mp ]
        cpu_model: ">= X86_Arch_80386"

      - opcode: 0xb5
        mnemonic: lgs
        operand: [ Gv, Mp ]
        cpu_model: ">= X86_Arch_80386"

      - opcode: 0xb6
        mnemonic: movzx
        operand: [ Gv, Eb ]
        cpu_model: ">= X86_Arch_80386"
        semantic: *movzx

      - opcode: 0xb7
        mnemonic: movzx
        operand: [ Gv, Ew ]
        cpu_model: ">= X86_Arch_80386"
        semantic: *movzx

      - opcode: 0xb8
        sub_opcodes:
          - mnemonic: jmpe
            operand: [ Jz ]
            attr: [ ia64 ]

          - mnemonic: popcnt
            operand: [ Gv, Ev ]
            prefix: 0xf3

      - opcode: 0xb9
        reference: group_10
        cpu_model: ">= X86_Arch_80286"

      - opcode: 0xba
        reference: group_08
        cpu_model: ">= X86_Arch_80386"

      - opcode: 0xbb
        mnemonic: btc
        operand: [ Ev, Gv ]
        cpu_model: ">= X86_Arch_80386"

      - opcode: 0xbc
        sub_opcodes:
          - mnemonic: bsf
            operand: [ Gv, Ev ]
            cpu_model: ">= X86_Arch_80386"

          - mnemonic: tzcnt
            operand: [ Gv, Ev ]
            prefix: 0xf3

      - opcode: 0xbd
        sub_opcodes:
          - mnemonic: bsr
            operand: [ Gv, Ev ]
            cpu_model: ">= X86_Arch_80386"

          - mnemonic: lzcnt
            operand: [ Gv, Ev ]
            prefix: 0xf3

      - opcode: 0xbe
        mnemonic: movsx
        operand: [ Gv, Eb ]
        cpu_model: ">= X86_Arch_80386"
        semantic: *movsx

      - opcode: 0xbf
        mnemonic: movsx
        operand: [ Gv, Ew ]
        cpu_model: ">= X86_Arch_80386"
        semantic: *movsx

      - opcode: 0xc0
        mnemonic: xadd
        operand: [ Eb, Gb ]
        cpu_model: ">= X86_Arch_80486"

      - opcode: 0xc1
        mnemonic: xadd
        operand: [ Ev, Gv ]
        cpu_model: ">= X86_Arch_80486"

      - opcode: 0xc2
        invalid:

      - opcode: 0xc3
        mnemonic: movnti
        operand: [ My, Gy ]
        cpu_model: ">= X86_Arch_Sse2"

      - opcode: 0xc4
        sub_opcodes:
          - mnemonic: pinsrw
            operand: [ Pq, Mw, Ib ]
            cpu_model: ">= X86_Arch_Mmx_sse"

          - mnemonic: vpinsrw
            operand: [ Vo, Ho, Mw, Ib ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse2"

      - opcode: 0xc5
        sub_opcodes:
          - mnemonic: pextrw
            operand: [ Gy, Nq, Ib ]
            cpu_model: ">= X86_Arch_Mmx_sse"

          - mnemonic: vpextrw
            operand: [ Gy, Uo, Ib ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse2"

      - opcode: 0xc6
        sub_opcodes:
          - mnemonic: vshufps
            operand: [ Vx, Hx, Wx, Ib ]
            cpu_model: ">= X86_Arch_Sse"

          - mnemonic: vshufpd
            operand: [ Vx, Hx, Wx, Ib ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse2"

      - opcode: 0xc7
        reference: group_09

      - opcode: 0xc8
        sub_opcodes:
          - mnemonic: bswap
            operand: [ rAX ]
            cpu_model: ">= X86_Arch_80486"

          - mnemonic: bswap
            operand: [ r8 ]
            attr: [ rexb ]
            cpu_model: ">= X86_Arch_80486"

      - opcode: 0xc9
        sub_opcodes:
          - mnemonic: bswap
            operand: [ rCX ]
            cpu_model: ">= X86_Arch_80486"

          - mnemonic: bswap
            operand: [ r9 ]
            attr: [ rexb ]
            cpu_model: ">= X86_Arch_80486"

      - opcode: 0xca
        sub_opcodes:
          - mnemonic: bswap
            operand: [ rDX ]
            cpu_model: ">= X86_Arch_80486"

          - mnemonic: bswap
            operand: [ r10 ]
            attr: [ rexb ]
            cpu_model: ">= X86_Arch_80486"

      - opcode: 0xcb
        sub_opcodes:
          - mnemonic: bswap
            operand: [ rBX ]
            cpu_model: ">= X86_Arch_80486"

          - mnemonic: bswap
            operand: [ r11 ]
            attr: [ rexb ]
            cpu_model: ">= X86_Arch_80486"

      - opcode: 0xcc
        sub_opcodes:
          - mnemonic: bswap
            operand: [ rSP ]
            cpu_model: ">= X86_Arch_80486"

          - mnemonic: bswap
            operand: [ r12 ]
            attr: [ rexb ]
            cpu_model: ">= X86_Arch_80486"

      - opcode: 0xcd
        sub_opcodes:
          - mnemonic: bswap
            operand: [ rBP ]
            cpu_model: ">= X86_Arch_80486"

          - mnemonic: bswap
            operand: [ r13 ]
            attr: [ rexb ]
            cpu_model: ">= X86_Arch_80486"

      - opcode: 0xce
        sub_opcodes:
          - mnemonic: bswap
            operand: [ rSI ]
            cpu_model: ">= X86_Arch_80486"

          - mnemonic: bswap
            operand: [ r14 ]
            attr: [ rexb ]
            cpu_model: ">= X86_Arch_80486"

      - opcode: 0xcf
        sub_opcodes:
          - mnemonic: bswap
            operand: [ rDI ]
            cpu_model: ">= X86_Arch_80486"

          - mnemonic: bswap
            operand: [ r15 ]
            attr: [ rexb ]
            cpu_model: ">= X86_Arch_80486"

      - opcode: 0xd0
        sub_opcodes:
          - invalid:

          - mnemonic: vaddsubps
            operand: [ Vx, Hx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse3"

          - mnemonic: vaddsubps
            operand: [ Vx, Hx, Wx ]
            prefix: 0xf2
            cpu_model: ">= X86_Arch_Sse3"

      - opcode: 0xd1
        sub_opcodes:
          - mnemonic: psrlw
            operand: [ Pq, Qq ]
            cpu_model: ">= X86_Arch_Mmx"

          - mnemonic: vpsrlw
            operand: [ Vx, Hx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse2"

      - opcode: 0xd2
        sub_opcodes:
          - mnemonic: psrld
            operand: [ Pq, Qq ]
            cpu_model: ">= X86_Arch_Mmx"

          - mnemonic: vpsrld
            operand: [ Vx, Hx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse2"

      - opcode: 0xd3
        sub_opcodes:
          - mnemonic: psrlq
            operand: [ Pq, Qq ]
            cpu_model: ">= X86_Arch_Mmx"

          - mnemonic: vpsrld
            operand: [ Vx, Hx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse2"

      - opcode: 0xd4
        sub_opcodes:
          - mnemonic: paddq
            operand: [ Pq, Qq ]
            cpu_model: ">= X86_Arch_Mmx_sse2"

          - mnemonic: vpaddq
            operand: [ Vx, Hx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse2"

      - opcode: 0xd5
        sub_opcodes:
          - mnemonic: pmullw
            operand: [ Pq, Qq ]
            cpu_model: ">= X86_Arch_Mmx"

          - mnemonic: vpmullw
            operand: [ Vx, Hx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse2"

      - opcode: 0xd6
        sub_opcodes:
          - invalid:

          - mnemonic: vmovq
            operand: [ Woq, Vo ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse2"

          - mnemonic: movq2dq
            operand: [ Vo, Nq ]
            prefix: 0xf3
            cpu_model: ">= X86_Arch_Sse2_mmx"

          - mnemonic: movdq2q
            operand: [ Pq, Uq ]
            prefix: 0xf2
            cpu_model: ">= X86_Arch_Sse2_mmx"

      - opcode: 0xd7
        sub_opcodes:
          - mnemonic: pmovmskb
            operand: [ Gy, Nq ]
            cpu_model: ">= X86_Arch_Mmx_sse"

          - mnemonic: vpmovmskb
            operand: [ Gy, Ux ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse2"

      - opcode: 0xd8
        sub_opcodes:
          - mnemonic: psubusb
            operand: [ Pq, Qq ]
            cpu_model: ">= X86_Arch_Mmx"

          - mnemonic: vpsubusb
            operand: [ Vx, Hx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse2"

      - opcode: 0xd9
        sub_opcodes:
          - mnemonic: psubusw
            operand: [ Pq, Qq ]
            cpu_model: ">= X86_Arch_Mmx"

          - mnemonic: vpsubusw
            operand: [ Vx, Hx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse2"

      - opcode: 0xda
        sub_opcodes:
          - mnemonic: pminub
            operand: [ Pq, Qq ]
            cpu_model: ">= X86_Arch_Mmx"

          - mnemonic: vpminub
            operand: [ Vx, Hx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse2"

      - opcode: 0xdb
        sub_opcodes:
          - mnemonic: pand
            operand: [ Pq, Qq ]
            cpu_model: ">= X86_Arch_Mmx"

          - mnemonic: vpand
            operand: [ Vx, Hx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse2"

      - opcode: 0xdc
        sub_opcodes:
          - mnemonic: paddusb
            operand: [ Pq, Qq ]
            cpu_model: ">= X86_Arch_Mmx"

          - mnemonic: vpaddusb
            operand: [ Vx, Hx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse2"

      - opcode: 0xdd
        sub_opcodes:
          - mnemonic: paddusw
            operand: [ Pq, Qq ]
            cpu_model: ">= X86_Arch_Mmx"

          - mnemonic: vpaddusw
            operand: [ Vx, Hx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse2"

      - opcode: 0xde
        sub_opcodes:
          - mnemonic: pmaxub
            operand: [ Pq, Qq ]
            cpu_model: ">= X86_Arch_Mmx"

          - mnemonic: vpmaxub
            operand: [ Vx, Hx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse2"

      - opcode: 0xdf
        sub_opcodes:
          - mnemonic: pandn
            operand: [ Pq, Qq ]
            cpu_model: ">= X86_Arch_Mmx"

          - mnemonic: vpandn
            operand: [ Vx, Hx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse2"

      - opcode: 0xe0
        sub_opcodes:
          - mnemonic: pavgb
            operand: [ Pq, Qq ]
            cpu_model: ">= X86_Arch_Mmx_sse"

          - mnemonic: vpavgb
            operand: [ Vx, Hx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse2"

      - opcode: 0xe1
        sub_opcodes:
          - mnemonic: psraw
            operand: [ Pq, Qq ]
            cpu_model: ">= X86_Arch_Mmx"

          - mnemonic: vpsraw
            operand: [ Vx, Hx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse2"

      - opcode: 0xe2
        sub_opcodes:
          - mnemonic: psrad
            operand: [ Pq, Qq ]
            cpu_model: ">= X86_Arch_Mmx"

          - mnemonic: vpsrad
            operand: [ Vx, Hx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse2"

      - opcode: 0xe3
        sub_opcodes:
          - mnemonic: pavgw
            operand: [ Pq, Qq ]
            cpu_model: ">= X86_Arch_Mmx_sse"

          - mnemonic: vpavgw
            operand: [ Vx, Hx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse2"

      - opcode: 0xe4
        sub_opcodes:
          - mnemonic: pmulhuw
            operand: [ Pq, Qq ]
            cpu_model: ">= X86_Arch_Mmx_sse"

          - mnemonic: vpmulhuw
            operand: [ Vx, Hx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse2"

      - opcode: 0xe5
        sub_opcodes:
          - mnemonic: pmulhw
            operand: [ Pq, Qq ]
            cpu_model: ">= X86_Arch_Mmx"

          - mnemonic: vpmulhw
            operand: [ Vx, Hx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse2"

      - opcode: 0xe6
        sub_opcodes:
          - invalid:

          - mnemonic: vcvttpd2dq
            operand: [ Vo, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse2"

          - mnemonic: vcvtdq2pd
            operand: [ Vo, Woq ]
            prefix: 0xf3
            cpu_model: ">= X86_Arch_Sse2"

          - mnemonic: vcvtpd2dq
            operand: [ Vo, Wx ]
            prefix: 0xf2
            cpu_model: ">= X86_Arch_Sse2"

      - opcode: 0xe7
        sub_opcodes:
          - mnemonic: movntq
            operand: [ Mq, Pq ]
            cpu_model: ">= X86_Arch_Mmx_sse"

          - mnemonic: vmovntdq
            operand: [ Mx, Vx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse2"

      - opcode: 0xe8
        sub_opcodes:
          - mnemonic: psubsb
            operand: [ Pq, Qq ]
            cpu_model: ">= X86_Arch_Mmx"

          - mnemonic: vpsubsb
            operand: [ Vx, Hx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse2"

      - opcode: 0xe9
        sub_opcodes:
          - mnemonic: psubsw
            operand: [ Pq, Qq ]
            cpu_model: ">= X86_Arch_Mmx"

          - mnemonic: vpsubsw
            operand: [ Vx, Hx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse2"

      - opcode: 0xea
        sub_opcodes:
          - mnemonic: pminsw
            operand: [ Pq, Qq ]
            cpu_model: ">= X86_Arch_Mmx"

          - mnemonic: vpminsw
            operand: [ Vx, Hx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse2"

      - opcode: 0xeb
        sub_opcodes:
          - mnemonic: por
            operand: [ Pq, Qq ]
            cpu_model: ">= X86_Arch_Mmx"

          - mnemonic: vpor
            operand: [ Vx, Hx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse2"

      - opcode: 0xec
        sub_opcodes:
          - mnemonic: paddsb
            operand: [ Pq, Qq ]
            cpu_model: ">= X86_Arch_Mmx"

          - mnemonic: vpaddsb
            operand: [ Vx, Hx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse2"

      - opcode: 0xed
        sub_opcodes:
          - mnemonic: paddsw
            operand: [ Pq, Qq ]
            cpu_model: ">= X86_Arch_Mmx"

          - mnemonic: vpaddsw
            operand: [ Vx, Hx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse2"

      - opcode: 0xee
        sub_opcodes:
          - mnemonic: pmaxsw
            operand: [ Pq, Qq ]
            cpu_model: ">= X86_Arch_Mmx"

          - mnemonic: vpmaxsw
            operand: [ Vx, Hx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse2"

      - opcode: 0xef
        sub_opcodes:
          - mnemonic: pxor
            operand: [ Pq, Qq ]
            cpu_model: ">= X86_Arch_Mmx"

          - mnemonic: vpxor
            operand: [ Vx, Hx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse2"

      - opcode: 0xf0
        sub_opcodes:
          - invalid:

          - mnemonic: vlddqu
            operand: [ Vx, Mx ]
            prefix: 0xf2
            cpu_model: ">= X86_Arch_Sse3"

      - opcode: 0xf1
        sub_opcodes:
          - mnemonic: psllw
            operand: [ Pq, Qq ]
            cpu_model: ">= X86_Arch_Mmx"

          - mnemonic: vpsllw
            operand: [ Vx, Hx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse2"

      - opcode: 0xf2
        sub_opcodes:
          - mnemonic: pslld
            operand: [ Pq, Qq ]
            cpu_model: ">= X86_Arch_Mmx"

          - mnemonic: vsplld
            operand: [ Vx, Hx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse2"

      - opcode: 0xf3
        sub_opcodes:
          - mnemonic: psllq
            operand: [ Pq, Qq ]
            cpu_model: ">= X86_Arch_Mmx"

          - mnemonic: vspllq
            operand: [ Vx, Hx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse2"

      - opcode: 0xf4
        sub_opcodes:
          - mnemonic: pmuludq
            operand: [ Pq, Qq ]
            cpu_model: ">= X86_Arch_Mmx_sse2"

          - mnemonic: vpmuludq
            operand: [ Vx, Hx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse2"

      - opcode: 0xf5
        sub_opcodes:
          - mnemonic: pmaddwd
            operand: [ Pq, Qq ]
            cpu_model: ">= X86_Arch_Mmx"

          - mnemonic: vpmaddwd
            operand: [ Vx, Hx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse2"

      - opcode: 0xf6
        sub_opcodes:
          - mnemonic: psadbw
            operand: [ Pq, Qq ]
            cpu_model: ">= X86_Arch_Mmx_sse"

          - mnemonic: vpsadbw
            operand: [ Vx, Hx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse2"

      - opcode: 0xf7
        sub_opcodes:
          - mnemonic: maskmovq
            operand: [ Pq, Nq ]
            cpu_model: ">= X86_Arch_Mmx_sse"

          - mnemonic: vmaskmovdqu
            operand: [ Vo, Uo ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse2"

      - opcode: 0xf8
        sub_opcodes:
          - mnemonic: psubb
            operand: [ Pq, Qq ]
            cpu_model: ">= X86_Arch_Mmx"

          - mnemonic: vpsubb
            operand: [ Vx, Hx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse2"

      - opcode: 0xf9
        sub_opcodes:
          - mnemonic: psubw
            operand: [ Pq, Qq ]
            cpu_model: ">= X86_Arch_Mmx"

          - mnemonic: vpsubw
            operand: [ Vx, Hx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse2"

      - opcode: 0xfa
        sub_opcodes:
          - mnemonic: psubd
            operand: [ Pq, Qq ]
            cpu_model: ">= X86_Arch_Mmx"

          - mnemonic: vpsubd
            operand: [ Vx, Hx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse2"

      - opcode: 0xfb
        sub_opcodes:
          - mnemonic: psubq
            operand: [ Pq, Qq ]
            cpu_model: ">= X86_Arch_Mmx"

          - mnemonic: vpsubq
            operand: [ Vx, Hx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse2"

      - opcode: 0xfc
        sub_opcodes:
          - mnemonic: paddb
            operand: [ Pq, Qq ]
            cpu_model: ">= X86_Arch_Mmx"

          - mnemonic: vpaddb
            operand: [ Vx, Hx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse2"

      - opcode: 0xfd
        sub_opcodes:
          - mnemonic: paddw
            operand: [ Pq, Qq ]
            cpu_model: ">= X86_Arch_Mmx"

          - mnemonic: vpaddw
            operand: [ Vx, Hx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse2"

      - opcode: 0xfe
        sub_opcodes:
          - mnemonic: paddd
            operand: [ Pq, Qq ]
            cpu_model: ">= X86_Arch_Mmx"

          - mnemonic: vpaddd
            operand: [ Vx, Hx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse2"

      - opcode: 0xff
        sub_opcodes:
          - mnemonic: ud
            attr: [ amd ]

    table_3DNOW1:
      - opcode: 0x00
        invalid:

      - opcode: 0x01
        invalid:

      - opcode: 0x02
        invalid:

      - opcode: 0x03
        invalid:

      - opcode: 0x04
        invalid:

      - opcode: 0x05
        invalid:

      - opcode: 0x06
        invalid:

      - opcode: 0x07
        invalid:

      - opcode: 0x08
        invalid:

      - opcode: 0x09
        invalid:

      - opcode: 0x0a
        invalid:

      - opcode: 0x0b
        invalid:

      - opcode: 0x0c
        mnemonic: pi2fw
        operand: [ Pq, Qq ]
        attr: [ amd ]

      - opcode: 0x0d
        mnemonic: pi2fd
        operand: [ Pq, Qq ]
        attr: [ amd ]

      - opcode: 0x0e
        invalid:

      - opcode: 0x0f
        invalid:

      - opcode: 0x10
        invalid:

      - opcode: 0x11
        invalid:

      - opcode: 0x12
        invalid:

      - opcode: 0x13
        invalid:

      - opcode: 0x14
        invalid:

      - opcode: 0x15
        invalid:

      - opcode: 0x16
        invalid:

      - opcode: 0x17
        invalid:

      - opcode: 0x18
        invalid:

      - opcode: 0x19
        invalid:

      - opcode: 0x1a
        invalid:

      - opcode: 0x1b
        invalid:

      - opcode: 0x1c
        mnemonic: pf2iw
        operand: [ Pq, Qq ]
        attr: [ amd ]

      - opcode: 0x1d
        mnemonic: pd2id
        operand: [ Pq, Qq ]
        attr: [ amd ]

      - opcode: 0x1e
        invalid:

      - opcode: 0x1f
        invalid:

      - opcode: 0x20
        invalid:

      - opcode: 0x21
        invalid:

      - opcode: 0x22
        invalid:

      - opcode: 0x23
        invalid:

      - opcode: 0x24
        invalid:

      - opcode: 0x25
        invalid:

      - opcode: 0x26
        invalid:

      - opcode: 0x27
        invalid:

      - opcode: 0x28
        invalid:

      - opcode: 0x29
        invalid:

      - opcode: 0x2a
        invalid:

      - opcode: 0x2b
        invalid:

      - opcode: 0x2c
        invalid:

      - opcode: 0x2d
        invalid:

      - opcode: 0x2e
        invalid:

      - opcode: 0x2f
        invalid:

      - opcode: 0x30
        invalid:

      - opcode: 0x31
        invalid:

      - opcode: 0x32
        invalid:

      - opcode: 0x33
        invalid:

      - opcode: 0x34
        invalid:

      - opcode: 0x35
        invalid:

      - opcode: 0x36
        invalid:

      - opcode: 0x37
        invalid:

      - opcode: 0x38
        invalid:

      - opcode: 0x39
        invalid:

      - opcode: 0x3a
        invalid:

      - opcode: 0x3b
        invalid:

      - opcode: 0x3c
        invalid:

      - opcode: 0x3d
        invalid:

      - opcode: 0x3e
        invalid:

      - opcode: 0x3f
        invalid:

      - opcode: 0x40
        invalid:

      - opcode: 0x41
        invalid:

      - opcode: 0x42
        invalid:

      - opcode: 0x43
        invalid:

      - opcode: 0x44
        invalid:

      - opcode: 0x45
        invalid:

      - opcode: 0x46
        invalid:

      - opcode: 0x47
        invalid:

      - opcode: 0x48
        invalid:

      - opcode: 0x49
        invalid:

      - opcode: 0x4a
        invalid:

      - opcode: 0x4b
        invalid:

      - opcode: 0x4c
        invalid:

      - opcode: 0x4d
        invalid:

      - opcode: 0x4e
        invalid:

      - opcode: 0x4f
        invalid:

      - opcode: 0x50
        invalid:

      - opcode: 0x51
        invalid:

      - opcode: 0x52
        invalid:

      - opcode: 0x53
        invalid:

      - opcode: 0x54
        invalid:

      - opcode: 0x55
        invalid:

      - opcode: 0x56
        invalid:

      - opcode: 0x57
        invalid:

      - opcode: 0x58
        invalid:

      - opcode: 0x59
        invalid:

      - opcode: 0x5a
        invalid:

      - opcode: 0x5b
        invalid:

      - opcode: 0x5c
        invalid:

      - opcode: 0x5d
        invalid:

      - opcode: 0x5e
        invalid:

      - opcode: 0x5f
        invalid:

      - opcode: 0x60
        invalid:

      - opcode: 0x61
        invalid:

      - opcode: 0x62
        invalid:

      - opcode: 0x63
        invalid:

      - opcode: 0x64
        invalid:

      - opcode: 0x65
        invalid:

      - opcode: 0x66
        invalid:

      - opcode: 0x67
        invalid:

      - opcode: 0x68
        invalid:

      - opcode: 0x69
        invalid:

      - opcode: 0x6a
        invalid:

      - opcode: 0x6b
        invalid:

      - opcode: 0x6c
        invalid:

      - opcode: 0x6d
        invalid:

      - opcode: 0x6e
        invalid:

      - opcode: 0x6f
        invalid:

      - opcode: 0x70
        invalid:

      - opcode: 0x71
        invalid:

      - opcode: 0x72
        invalid:

      - opcode: 0x73
        invalid:

      - opcode: 0x74
        invalid:

      - opcode: 0x75
        invalid:

      - opcode: 0x76
        invalid:

      - opcode: 0x77
        invalid:

      - opcode: 0x78
        invalid:

      - opcode: 0x79
        invalid:

      - opcode: 0x7a
        invalid:

      - opcode: 0x7b
        invalid:

      - opcode: 0x7c
        invalid:

      - opcode: 0x7d
        invalid:

      - opcode: 0x7e
        invalid:

      - opcode: 0x7f
        invalid:

      - opcode: 0x80
        invalid:

      - opcode: 0x81
        invalid:

      - opcode: 0x82
        invalid:

      - opcode: 0x83
        invalid:

      - opcode: 0x84
        invalid:

      - opcode: 0x85
        invalid:

      - opcode: 0x86
        mnemonic: pfrcpv
        operand: [ Pq, Qq ]
        attr: [ cyrix ]
        cpu_model: ">= X86_Arch_Geode_lx"

      - opcode: 0x87
        mnemonic: pfrsqrtv
        operand: [ Pq, Qq ]
        attr: [ cyrix ]
        cpu_model: ">= X86_Arch_Geode_lx"

      - opcode: 0x88
        invalid:

      - opcode: 0x89
        invalid:

      - opcode: 0x8a
        mnemonic: pfnacc
        operand: [ Pq, Qq ]
        attr: [ amd ]

      - opcode: 0x8b
        invalid:

      - opcode: 0x8c
        invalid:

      - opcode: 0x8d
        invalid:

      - opcode: 0x8e
        mnemonic: pfpnacc
        operand: [ Pq, Qq ]
        attr: [ amd ]

      - opcode: 0x8f
        invalid:

      - opcode: 0x90
        mnemonic: pfcmge
        operand: [ Pq, Qq ]
        attr: [ amd ]

      - opcode: 0x91
        invalid:

      - opcode: 0x92
        invalid:

      - opcode: 0x93
        invalid:

      - opcode: 0x94
        mnemonic: pfmin
        operand: [ Pq, Qq ]
        attr: [ amd ]

      - opcode: 0x95
        invalid:

      - opcode: 0x96
        mnemonic: pfrcp
        operand: [ Pq, Qq ]
        attr: [ amd ]

      - opcode: 0x97
        mnemonic: pfrsqrt
        operand: [ Pq, Qq ]
        attr: [ amd ]

      - opcode: 0x98
        invalid:

      - opcode: 0x99
        invalid:

      - opcode: 0x9a
        mnemonic: pfsub
        operand: [ Pq, Qq ]
        attr: [ amd ]

      - opcode: 0x9b
        invalid:

      - opcode: 0x9c
        invalid:

      - opcode: 0x9d
        invalid:

      - opcode: 0x9e
        mnemonic: pfadd
        operand: [ Pq, Qq ]
        attr: [ amd ]

      - opcode: 0x9f
        invalid:

      - opcode: 0xa0
        mnemonic: pfcmpgt
        operand: [ Pq, Qq ]
        attr: [ amd ]

      - opcode: 0xa1
        invalid:

      - opcode: 0xa2
        invalid:

      - opcode: 0xa3
        invalid:

      - opcode: 0xa4
        mnemonic: pfmax
        operand: [ Pq, Qq ]
        attr: [ amd ]

      - opcode: 0xa5
        invalid:

      - opcode: 0xa6
        mnemonic: pfrcpit1
        operand: [ Pq, Qq ]
        attr: [ amd ]

      - opcode: 0xa7
        mnemonic: pfrsqit1
        operand: [ Pq, Qq ]
        attr: [ amd ]

      - opcode: 0xa8
        invalid:

      - opcode: 0xa9
        invalid:

      - opcode: 0xaa
        mnemonic: pfsubr
        operand: [ Pq, Qq ]
        attr: [ amd ]

      - opcode: 0xab
        invalid:

      - opcode: 0xac
        invalid:

      - opcode: 0xad
        invalid:

      - opcode: 0xae
        mnemonic: pfacc
        operand: [ Pq, Qq ]
        attr: [ amd ]

      - opcode: 0xaf
        invalid:

      - opcode: 0xb0
        mnemonic: pfcmpeq
        operand: [ Pq, Qq ]
        attr: [ amd ]

      - opcode: 0xb1
        invalid:

      - opcode: 0xb2
        invalid:

      - opcode: 0xb3
        invalid:

      - opcode: 0xb4
        mnemonic: pfmul
        operand: [ Pq, Qq ]
        attr: [ amd ]

      - opcode: 0xb5
        invalid:

      - opcode: 0xb6
        mnemonic: pfrcpit2
        operand: [ Pq, Qq ]
        attr: [ amd ]

      - opcode: 0xb7
        mnemonic: pmulhrw
        operand: [ Pq, Qq ]
        attr: [ amd ]

      - opcode: 0xb8
        invalid:

      - opcode: 0xb9
        invalid:

      - opcode: 0xba
        invalid:

      - opcode: 0xbb
        mnemonic: pswapd
        operand: [ Pq, Qq ]
        attr: [ amd ]

      - opcode: 0xbc
        invalid:

      - opcode: 0xbd
        invalid:

      - opcode: 0xbe
        invalid:

      - opcode: 0xbf
        mnemonic: pavgusb
        operand: [ Pq, Qq ]
        attr: [ amd ]

      - opcode: 0xc0
        invalid:

      - opcode: 0xc1
        invalid:

      - opcode: 0xc2
        invalid:

      - opcode: 0xc3
        invalid:

      - opcode: 0xc4
        invalid:

      - opcode: 0xc5
        invalid:

      - opcode: 0xc6
        invalid:

      - opcode: 0xc7
        invalid:

      - opcode: 0xc8
        invalid:

      - opcode: 0xc9
        invalid:

      - opcode: 0xca
        invalid:

      - opcode: 0xcb
        invalid:

      - opcode: 0xcc
        invalid:

      - opcode: 0xcd
        invalid:

      - opcode: 0xce
        invalid:

      - opcode: 0xcf
        invalid:

      - opcode: 0xd0
        invalid:

      - opcode: 0xd1
        invalid:

      - opcode: 0xd2
        invalid:

      - opcode: 0xd3
        invalid:

      - opcode: 0xd4
        invalid:

      - opcode: 0xd5
        invalid:

      - opcode: 0xd6
        invalid:

      - opcode: 0xd7
        invalid:

      - opcode: 0xd8
        invalid:

      - opcode: 0xd9
        invalid:

      - opcode: 0xda
        invalid:

      - opcode: 0xdb
        invalid:

      - opcode: 0xdc
        invalid:

      - opcode: 0xdd
        invalid:

      - opcode: 0xde
        invalid:

      - opcode: 0xdf
        invalid:

      - opcode: 0xe0
        invalid:

      - opcode: 0xe1
        invalid:

      - opcode: 0xe2
        invalid:

      - opcode: 0xe3
        invalid:

      - opcode: 0xe4
        invalid:

      - opcode: 0xe5
        invalid:

      - opcode: 0xe6
        invalid:

      - opcode: 0xe7
        invalid:

      - opcode: 0xe8
        invalid:

      - opcode: 0xe9
        invalid:

      - opcode: 0xea
        invalid:

      - opcode: 0xeb
        invalid:

      - opcode: 0xec
        invalid:

      - opcode: 0xed
        invalid:

      - opcode: 0xee
        invalid:

      - opcode: 0xef
        invalid:

      - opcode: 0xf0
        invalid:

      - opcode: 0xf1
        invalid:

      - opcode: 0xf2
        invalid:

      - opcode: 0xf3
        invalid:

      - opcode: 0xf4
        invalid:

      - opcode: 0xf5
        invalid:

      - opcode: 0xf6
        invalid:

      - opcode: 0xf7
        invalid:

      - opcode: 0xf8
        invalid:

      - opcode: 0xf9
        invalid:

      - opcode: 0xfa
        invalid:

      - opcode: 0xfb
        invalid:

      - opcode: 0xfc
        invalid:

      - opcode: 0xfd
        invalid:

      - opcode: 0xfe
        invalid:

      - opcode: 0xff
        invalid:

    table_3_38:
      - opcode: 0x00
        sub_opcodes:
          - mnemonic: pshufb
            operand: [ Pq, Qq ]
            cpu_model: ">= X86_Arch_Ssse3"

          - mnemonic: pshufb
            operand: [ Vx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Ssse3"

          - mnemonic: vpshufb
            operand: [ Vx, Hx, Wx ]
            attr: [ ny ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx"

          - mnemonic: vpshufb
            operand: [ Vx, Hx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx2"

      - opcode: 0x01
        sub_opcodes:
          - mnemonic: phaddw
            operand: [ Pq, Qq ]
            cpu_model: ">= X86_Arch_Ssse3"

          - mnemonic: phaddw
            operand: [ Vx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Ssse3"

          - mnemonic: vphaddw
            operand: [ Vx, Hx, Wx ]
            attr: [ ny ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx"

          - mnemonic: vphaddw
            operand: [ Vx, Hx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx2"

      - opcode: 0x02
        sub_opcodes:
          - mnemonic: phaddd
            operand: [ Pq, Qq ]
            cpu_model: ">= X86_Arch_Ssse3"

          - mnemonic: phaddd
            operand: [ Vx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Ssse3"

          - mnemonic: vphaddd
            operand: [ Vx, Hx, Wx ]
            attr: [ ny ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx"

          - mnemonic: vphaddd
            operand: [ Vx, Hx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx2"

      - opcode: 0x03
        sub_opcodes:
          - mnemonic: phaddsw
            operand: [ Pq, Qq ]
            cpu_model: ">= X86_Arch_Ssse3"

          - mnemonic: phaddsw
            operand: [ Vx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Ssse3"

          - mnemonic: vphaddsw
            operand: [ Vx, Hx, Wx ]
            attr: [ ny ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx"

          - mnemonic: vphaddsw
            operand: [ Vx, Hx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx2"

      - opcode: 0x04
        sub_opcodes:
          - mnemonic: pmaddubsw
            operand: [ Pq, Qq ]
            cpu_model: ">= X86_Arch_Ssse3"

          - mnemonic: pmaddubsw
            operand: [ Vx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Ssse3"

          - mnemonic: vpmaddubsw
            operand: [ Vx, Hx, Wx ]
            attr: [ ny ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx"

          - mnemonic: vpmaddubsw
            operand: [ Vx, Hx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx2"

      - opcode: 0x05
        sub_opcodes:
          - mnemonic: phsubw
            operand: [ Pq, Qq ]
            cpu_model: ">= X86_Arch_Ssse3"

          - mnemonic: phsubw
            operand: [ Vx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Ssse3"

          - mnemonic: vphsubw
            operand: [ Vx, Hx, Wx ]
            attr: [ ny ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx"

          - mnemonic: vphsubw
            operand: [ Vx, Hx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx2"

      - opcode: 0x06
        sub_opcodes:
          - mnemonic: phsubd
            operand: [ Pq, Qq ]
            cpu_model: ">= X86_Arch_Ssse3"

          - mnemonic: phsubd
            operand: [ Vx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Ssse3"

          - mnemonic: vphsubd
            operand: [ Vx, Hx, Wx ]
            attr: [ ny ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx"

          - mnemonic: vphsubd
            operand: [ Vx, Hx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx2"

      - opcode: 0x07
        sub_opcodes:
          - mnemonic: phsubsw
            operand: [ Pq, Qq ]
            cpu_model: ">= X86_Arch_Ssse3"

          - mnemonic: phsubsw
            operand: [ Vx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Ssse3"

          - mnemonic: vphsubsw
            operand: [ Vx, Hx, Wx ]
            attr: [ ny ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx"

          - mnemonic: vphsubsw
            operand: [ Vx, Hx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx2"

      - opcode: 0x08
        sub_opcodes:
          - mnemonic: psignb
            operand: [ Pq, Qq ]
            cpu_model: ">= X86_Arch_Ssse3"

          - mnemonic: psignb
            operand: [ Vx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Ssse3"

          - mnemonic: vpsignb
            operand: [ Vx, Hx, Wx ]
            attr: [ ny ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx"

          - mnemonic: vpsignb
            operand: [ Vx, Hx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx2"

      - opcode: 0x09
        sub_opcodes:
          - mnemonic: psignw
            operand: [ Pq, Qq ]
            cpu_model: ">= X86_Arch_Ssse3"

          - mnemonic: psignw
            operand: [ Vx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Ssse3"

          - mnemonic: vpsignw
            operand: [ Vx, Hx, Wx ]
            attr: [ ny ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx"

          - mnemonic: vpsignw
            operand: [ Vx, Hx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx2"

      - opcode: 0x0a
        sub_opcodes:
          - mnemonic: psignd
            operand: [ Pq, Qq ]
            cpu_model: ">= X86_Arch_Ssse3"

          - mnemonic: psignd
            operand: [ Vx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Ssse3"

          - mnemonic: vpsignd
            operand: [ Vx, Hx, Wx ]
            attr: [ ny ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx"

          - mnemonic: vpsignd
            operand: [ Vx, Hx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx2"

      - opcode: 0x0b
        sub_opcodes:
          - mnemonic: pmulhrsw
            operand: [ Pq, Qq ]
            cpu_model: ">= X86_Arch_Ssse3"

          - mnemonic: pmulhrsw
            operand: [ Vx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Ssse3"

          - mnemonic: vpmulhrsw
            operand: [ Vx, Hx, Wx ]
            attr: [ ny ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx"

          - mnemonic: vpmulhrsw
            operand: [ Vx, Hx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx2"

      - opcode: 0x0c
        mnemonic: vpermilps
        operand: [ Vx, Hx, Wx ]
        attr: [ w0 ]
        prefix: 0x66
        cpu_model: ">= X86_Arch_Avx"

      - opcode: 0x0d
        mnemonic: vpermilpd
        operand: [ Vx, Hx, Wx ]
        attr: [ w0 ]
        prefix: 0x66
        cpu_model: ">= X86_Arch_Avx"

      - opcode: 0x0e
        mnemonic: vtestps
        operand: [ Vx, Wx ]
        attr: [ nv, w0 ]
        prefix: 0x66
        cpu_model: ">= X86_Arch_Avx"

      - opcode: 0x0f
        mnemonic: vtestpd
        operand: [ Vx, Wx ]
        attr: [ nv, w0 ]
        prefix: 0x66
        cpu_model: ">= X86_Arch_Avx"

      - opcode: 0x10
        mnemonic: pblendvb
        operand: [ Vo, Wo ]
        prefix: 0x66
        cpu_model: ">= X86_Arch_Sse41"

      - opcode: 0x11
        invalid:

      - opcode: 0x12
        invalid:

      - opcode: 0x13
        sub_opcodes:
          - mnemonic: vcvtph2ps
            operand: [ Vo, Woq ]
            attr: [ vl0 ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_F16c"

          - mnemonic: vcvtph2ps
            operand: [ Vy, Woo ]
            attr: [ vl1 ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_F16c"

      - opcode: 0x14
        mnemonic: blendvps
        operand: [ Vo, Wo ]
        prefix: 0x66
        cpu_model: ">= X86_Arch_Sse41"

      - opcode: 0x15
        mnemonic: blendvpd
        operand: [ Vo, Wo ]
        prefix: 0x66
        cpu_model: ">= X86_Arch_Sse41"

      - opcode: 0x16
        mnemonic: vpermps
        operand: [ Vy, Hy, Wy ]
        prefix: 0x66
        cpu_model: ">= X86_Arch_Avx2"

      - opcode: 0x17
        sub_opcodes:
          - mnemonic: ptest
            operand: [ Vx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse41"

          - mnemonic: vptest
            operand: [ Vx, Wx ]
            attr: [ nv ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx"

      - opcode: 0x18
        sub_opcodes:
          - mnemonic: vbroadcastss
            operand: [ Vx, Mod ]
            attr: [ nc, w0 ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx"

          - mnemonic: vbroadcastss
            operand: [ Vx, Uo ]
            attr: [ nc, w0 ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx2"

      - opcode: 0x19
        sub_opcodes:
          - mnemonic: vbroadcastsd
            operand: [ Vy, Moq ]
            attr: [ nc, w0 ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx"

          - mnemonic: vbroadcastsd
            operand: [ Vy, Uo ]
            attr: [ nc, w0 ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx2"

      - opcode: 0x1a
        mnemonic: vbroadcastf128
        operand: [ Vy, Mo ]
        attr: [ nv, w0 ]
        prefix: 0x66
        cpu_model: ">= X86_Arch_Avx"

      - opcode: 0x1b
        invalid:

      - opcode: 0x1c
        sub_opcodes:
          - mnemonic: pabsb
            operand: [ Pq, Qq ]
            cpu_model: ">= X86_Arch_Ssse3"

          - mnemonic: pabsb
            operand: [ Vx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Ssse3"

          - mnemonic: vpabsb
            operand: [ Vx, Wx ]
            attr: [ ny ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx"

          - mnemonic: vpabsb
            operand: [ Vx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx2"

      - opcode: 0x1d
        sub_opcodes:
          - mnemonic: pabsw
            operand: [ Pq, Qq ]
            cpu_model: ">= X86_Arch_Ssse3"

          - mnemonic: pabsw
            operand: [ Vx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Ssse3"

          - mnemonic: vpabsw
            operand: [ Vx, Wx ]
            attr: [ ny ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx"

          - mnemonic: vpabsw
            operand: [ Vx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx2"

      - opcode: 0x1e
        sub_opcodes:
          - mnemonic: pabsd
            operand: [ Pq, Qq ]
            cpu_model: ">= X86_Arch_Ssse3"

          - mnemonic: pabsd
            operand: [ Vx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Ssse3"

          - mnemonic: vpabsd
            operand: [ Vx, Wx ]
            attr: [ ny ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx"

          - mnemonic: vpabsd
            operand: [ Vx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx2"

      - opcode: 0x1f
        invalid:

      - opcode: 0x20
        sub_opcodes:
          - mnemonic: pmovsxbw
            operand: [ Vo, Woq ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse41"

          - mnemonic: vpmovsxbw
            operand: [ Vo, Woq ]
            attr: [ ny, nv ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx"

          - mnemonic: vpmovsxbw
            operand: [ Vy, Woo ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx2"

      - opcode: 0x21
        sub_opcodes:
          - mnemonic: pmovsxbd
            operand: [ Vo, Wod ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse41"

          - mnemonic: vpmovsxbd
            operand: [ Vo, Wod ]
            attr: [ ny, nv ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx"

          - mnemonic: vpmovsxbd
            operand: [ Vy, Woq ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx2"

      - opcode: 0x22
        sub_opcodes:
          - mnemonic: pmovsxbq
            operand: [ Vo, Wow ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse41"

          - mnemonic: vpmovsxbq
            operand: [ Vo, Wow ]
            attr: [ ny, nv ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx"

          - mnemonic: vpmovsxbq
            operand: [ Vy, Wod ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx2"

      - opcode: 0x23
        sub_opcodes:
          - mnemonic: pmovsxwd
            operand: [ Vo, Woq ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse41"

          - mnemonic: vpmovsxwd
            operand: [ Vo, Woq ]
            attr: [ ny, nv ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx"

          - mnemonic: vpmovsxwd
            operand: [ Vy, Woo ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx2"

      - opcode: 0x24
        sub_opcodes:
          - mnemonic: pmovsxwq
            operand: [ Vo, Wod ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse41"

          - mnemonic: vpmovsxwq
            operand: [ Vo, Wod ]
            attr: [ ny, nv ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx"

          - mnemonic: vpmovsxwq
            operand: [ Vy, Woq ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx2"

      - opcode: 0x25
        sub_opcodes:
          - mnemonic: pmovsxdq
            operand: [ Vo, Wow ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse41"

          - mnemonic: vpmovsxdq
            operand: [ Vo, Wow ]
            attr: [ ny, nv ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx"

          - mnemonic: vpmovsxdq
            operand: [ Vy, Wod ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx2"

      - opcode: 0x26
        invalid:

      - opcode: 0x27
        invalid:

      - opcode: 0x28
        sub_opcodes:
          - mnemonic: pmuldq
            operand: [ Vx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse41"

          - mnemonic: vpmuldq
            operand: [ Vx, Hx, Wx ]
            attr: [ ny ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx"

          - mnemonic: vpmuldq
            operand: [ Vx, Hx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx2"

      - opcode: 0x29
        sub_opcodes:
          - mnemonic: pcmpeqq
            operand: [ Vx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse41"

          - mnemonic: vpcmpeqq
            operand: [ Vx, Hx, Wx ]
            attr: [ ny ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx"

          - mnemonic: vpcmpeqq
            operand: [ Vx, Hx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx2"

      - opcode: 0x2a
        sub_opcodes:
          - mnemonic: movntdqa
            operand: [ Vx, Mx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse41"

          - mnemonic: vmovntdqa
            operand: [ Vx, Mx ]
            attr: [ nv, ny ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx"

          - mnemonic: vmovntdqa
            operand: [ Vx, Mx ]
            attr: [ nv ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx2"

      - opcode: 0x2b
        sub_opcodes:
          - mnemonic: packusdw
            operand: [ Vx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse41"

          - mnemonic: vpackusdw
            operand: [ Vx, Hx, Wx ]
            attr: [ ny ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx"

          - mnemonic: vpackusdw
            operand: [ Vx, Hx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx2"

      - opcode: 0x2c
        mnemonic: vmaskmovps
        operand: [ Vx, Hx, Mx ]
        attr: [ w0 ]
        prefix: 0x66
        cpu_model: ">= X86_Arch_Avx"

      - opcode: 0x2d
        mnemonic: vmaskmovpd
        operand: [ Vx, Hx, Mx ]
        attr: [ w0 ]
        prefix: 0x66
        cpu_model: ">= X86_Arch_Avx"

      - opcode: 0x2e
        mnemonic: vmaskmovps
        operand: [ Mx, Hx, Vx ]
        attr: [ w0 ]
        prefix: 0x66
        cpu_model: ">= X86_Arch_Avx"

      - opcode: 0x2f
        mnemonic: vmaskmovpd
        operand: [ Mx, Hx, Vx ]
        attr: [ w0 ]
        prefix: 0x66
        cpu_model: ">= X86_Arch_Avx"

      - opcode: 0x30
        sub_opcodes:
          - mnemonic: pmovzxbw
            operand: [ Vo, Woq ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse41"

          - mnemonic: vpmovzxbw
            operand: [ Vo, Woq ]
            attr: [ ny, nv ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx"

          - mnemonic: vpmovzxbw
            operand: [ Vy, Woo ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx2"

      - opcode: 0x31
        sub_opcodes:
          - mnemonic: pmovzxbd
            operand: [ Vo, Wod ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse41"

          - mnemonic: vpmovzxbd
            operand: [ Vo, Wod ]
            attr: [ ny, nv ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx"

          - mnemonic: vpmovzxbd
            operand: [ Vy, Woq ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx2"

      - opcode: 0x32
        sub_opcodes:
          - mnemonic: pmovzxbq
            operand: [ Vo, Wow ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse41"

          - mnemonic: vpmovzxbq
            operand: [ Vo, Wow ]
            attr: [ ny, nv ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx"

          - mnemonic: vpmovzxbq
            operand: [ Vy, Wod ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx2"

      - opcode: 0x33
        sub_opcodes:
          - mnemonic: pmovzxwd
            operand: [ Vo, Woq ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse41"

          - mnemonic: vpmovzxwd
            operand: [ Vo, Woq ]
            attr: [ ny, nv ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx"

          - mnemonic: vpmovzxwd
            operand: [ Vy, Woo ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx2"

      - opcode: 0x34
        sub_opcodes:
          - mnemonic: pmovzxwq
            operand: [ Vo, Wod ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse41"

          - mnemonic: vpmovzxwq
            operand: [ Vo, Wod ]
            attr: [ ny, nv ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx"

          - mnemonic: vpmovzxwq
            operand: [ Vy, Woq ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx2"

      - opcode: 0x35
        sub_opcodes:
          - mnemonic: pmovzxdq
            operand: [ Vo, Woq ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse41"

          - mnemonic: vpmovzxdq
            operand: [ Vo, Woq ]
            attr: [ ny, nv ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx"

          - mnemonic: vpmovzxdq
            operand: [ Vy, Woo ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx2"

      - opcode: 0x36
        mnemonic: vpermd
        operand: [ Vy, Hy, Wy ]
        prefix: 0x66
        cpu_model: ">= X86_Arch_Avx2"

      - opcode: 0x37
        sub_opcodes:
          - mnemonic: pcmpgtq
            operand: [ Vx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse42"

          - mnemonic: vpcmpgtq
            operand: [ Vx, Hx, Wx ]
            attr: [ ny ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx"

      - opcode: 0x38
        sub_opcodes:
          - mnemonic: pminsb
            operand: [ Vx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse41"

          - mnemonic: vpminsb
            operand: [ Vx, Hx, Wx ]
            attr: [ ny ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx"

          - mnemonic: vpminsb
            operand: [ Vx, Hx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx2"

      - opcode: 0x39
        sub_opcodes:
          - mnemonic: pminsd
            operand: [ Vx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse41"

          - mnemonic: vpminsd
            operand: [ Vx, Hx, Wx ]
            attr: [ ny ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx"

          - mnemonic: vpminsd
            operand: [ Vx, Hx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx2"

      - opcode: 0x3a
        sub_opcodes:
          - mnemonic: pminuw
            operand: [ Vx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse41"

          - mnemonic: vpminuw
            operand: [ Vx, Hx, Wx ]
            attr: [ ny ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx"

          - mnemonic: vpminuw
            operand: [ Vx, Hx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx2"

      - opcode: 0x3b
        sub_opcodes:
          - mnemonic: pminud
            operand: [ Vx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse41"

          - mnemonic: vpminud
            operand: [ Vx, Hx, Wx ]
            attr: [ ny ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx"

          - mnemonic: vpminud
            operand: [ Vx, Hx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx2"

      - opcode: 0x3c
        sub_opcodes:
          - mnemonic: pmaxsb
            operand: [ Vx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse41"

          - mnemonic: vpmaxsb
            operand: [ Vx, Hx, Wx ]
            attr: [ ny ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx"

          - mnemonic: vpmaxsb
            operand: [ Vx, Hx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx2"

      - opcode: 0x3d
        sub_opcodes:
          - mnemonic: pmaxsd
            operand: [ Vx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse41"

          - mnemonic: vpmaxsd
            operand: [ Vx, Hx, Wx ]
            attr: [ ny ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx"

          - mnemonic: vpmaxsd
            operand: [ Vx, Hx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx2"

      - opcode: 0x3e
        sub_opcodes:
          - mnemonic: pmaxuw
            operand: [ Vx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse41"

          - mnemonic: vpmaxuw
            operand: [ Vx, Hx, Wx ]
            attr: [ ny ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx"

          - mnemonic: vpmaxuw
            operand: [ Vx, Hx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx2"

      - opcode: 0x3f
        sub_opcodes:
          - mnemonic: pmaxud
            operand: [ Vx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse41"

          - mnemonic: vpmaxud
            operand: [ Vx, Hx, Wx ]
            attr: [ ny ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx"

          - mnemonic: vpmaxud
            operand: [ Vx, Hx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx2"

      - opcode: 0x40
        sub_opcodes:
          - mnemonic: pmulld
            operand: [ Vx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse41"

          - mnemonic: vpmulld
            operand: [ Vx, Hx, Wx ]
            attr: [ ny ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx"

          - mnemonic: vpmulld
            operand: [ Vx, Hx, Wx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx2"

      - opcode: 0x41
        sub_opcodes:
          - mnemonic: phminposuw
            operand: [ Vo, Wo ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse41"

          - mnemonic: vphminposuw
            operand: [ Vo, Wo ]
            attr: [ ny, nv ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx"

      - opcode: 0x42
        invalid:

      - opcode: 0x43
        invalid:

      - opcode: 0x44
        invalid:

      - opcode: 0x45
        sub_opcodes:
          - mnemonic: vpsrlvd
            operand: [ Vx, Hx, Wx ]
            attr: [ w0 ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx2"

          - mnemonic: vpsrlvq
            operand: [ Vx, Hx, Wx ]
            attr: [ w1 ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx2"

      - opcode: 0x46
        mnemonic: vpsravd
        operand: [ Vx, Hx, Wx ]
        attr: [ w0 ]
        prefix: 0x66
        cpu_model: ">= X86_Arch_Avx2"

      - opcode: 0x47
        sub_opcodes:
          - mnemonic: vpsllvd
            operand: [ Vx, Hx, Wx ]
            attr: [ w0 ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx2"

          - mnemonic: vpsllvq
            operand: [ Vx, Hx, Wx ]
            attr: [ w0 ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx2"

      - opcode: 0x48
        invalid:

      - opcode: 0x49
        invalid:

      - opcode: 0x4a
        invalid:

      - opcode: 0x4b
        invalid:

      - opcode: 0x4c
        invalid:

      - opcode: 0x4d
        invalid:

      - opcode: 0x4e
        invalid:

      - opcode: 0x4f
        invalid:

      - opcode: 0x50
        invalid:

      - opcode: 0x51
        invalid:

      - opcode: 0x52
        invalid:

      - opcode: 0x53
        invalid:

      - opcode: 0x54
        invalid:

      - opcode: 0x55
        invalid:

      - opcode: 0x56
        invalid:

      - opcode: 0x57
        invalid:

      - opcode: 0x58
        mnemonic: vpbroadcastd
        operand: [ Vx, Mod ]
        attr: [ nv, w0 ]
        prefix: 0x66
        cpu_model: ">= X86_Arch_Avx2"

      - opcode: 0x59
        mnemonic: vpbroadcastq
        operand: [ Vx, Moq ]
        attr: [ nv, w0 ]
        prefix: 0x66
        cpu_model: ">= X86_Arch_Avx2"

      - opcode: 0x5a
        mnemonic: vbroadcasti128
        operand: [ Vy, Mo ]
        attr: [ nv, w0 ]
        prefix: 0x66
        cpu_model: ">= X86_Arch_Avx2"

      - opcode: 0x5b
        invalid:

      - opcode: 0x5c
        invalid:

      - opcode: 0x5d
        invalid:

      - opcode: 0x5e
        invalid:

      - opcode: 0x5f
        invalid:

      - opcode: 0x60
        invalid:

      - opcode: 0x61
        invalid:

      - opcode: 0x62
        invalid:

      - opcode: 0x63
        invalid:

      - opcode: 0x64
        invalid:

      - opcode: 0x65
        invalid:

      - opcode: 0x66
        invalid:

      - opcode: 0x67
        invalid:

      - opcode: 0x68
        invalid:

      - opcode: 0x69
        invalid:

      - opcode: 0x6a
        invalid:

      - opcode: 0x6b
        invalid:

      - opcode: 0x6c
        invalid:

      - opcode: 0x6d
        invalid:

      - opcode: 0x6e
        invalid:

      - opcode: 0x6f
        invalid:

      - opcode: 0x70
        invalid:

      - opcode: 0x71
        invalid:

      - opcode: 0x72
        invalid:

      - opcode: 0x73
        invalid:

      - opcode: 0x74
        invalid:

      - opcode: 0x75
        invalid:

      - opcode: 0x76
        invalid:

      - opcode: 0x77
        invalid:

      - opcode: 0x78
        mnemonic: vpbroadcastb
        operand: [ Vx, Mo, b ]
        attr: [ nv ]
        prefix: 0x66
        cpu_model: ">= X86_Arch_Avx2"

      - opcode: 0x79
        mnemonic: vpbroadcastw
        operand: [ Vx, Mo, w ]
        attr: [ nv ]
        prefix: 0x66
        cpu_model: ">= X86_Arch_Avx2"

      - opcode: 0x7a
        invalid:

      - opcode: 0x7b
        invalid:

      - opcode: 0x7c
        invalid:

      - opcode: 0x7d
        invalid:

      - opcode: 0x7e
        invalid:

      - opcode: 0x7f
        invalid:

      - opcode: 0x80
        mnemonic: invept
        operand: [ Gy, Mo ]
        prefix: 0x66
        cpu_model: ">= X86_Arch_Vmx"

      - opcode: 0x81
        mnemonic: invvpid
        operand: [ Gy, Mo ]
        prefix: 0x66
        cpu_model: ">= X86_Arch_Vmx"

      - opcode: 0x82
        mnemonic: invpcid
        operand: [ Gy, Mo ]
        prefix: 0x66
        cpu_model: ">= X86_Arch_Invpcid"

      - opcode: 0x83
        invalid:

      - opcode: 0x84
        invalid:

      - opcode: 0x85
        invalid:

      - opcode: 0x86
        invalid:

      - opcode: 0x87
        invalid:

      - opcode: 0x88
        invalid:

      - opcode: 0x89
        invalid:

      - opcode: 0x8a
        invalid:

      - opcode: 0x8b
        invalid:

      - opcode: 0x8c
        sub_opcodes:
          - mnemonic: vpmaskmovd
            operand: [ Vx, Hx, Mx ]
            attr: [ w0 ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx2"

          - mnemonic: vpmaskmovq
            operand: [ Vx, Hx, Mx ]
            attr: [ w1 ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx2"

      - opcode: 0x8d
        invalid:

      - opcode: 0x8e
        sub_opcodes:
          - mnemonic: vpmaskmovd
            operand: [ Mx, Hx, Vx ]
            attr: [ w0 ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx2"

          - mnemonic: vpmaskmovq
            operand: [ Mx, Hx, Vx ]
            attr: [ w1 ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx2"

      - opcode: 0x8f
        invalid:

      - opcode: 0x90
        sub_opcodes:
          - mnemonic: vpgatherdd
            operand: [ Vx, Md, x, Hx ]
            attr: [ w0 ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx2"

          - mnemonic: vpgatherdq
            operand: [ Vx, Mqo, Hx ]
            attr: [ w1 ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx2"

      - opcode: 0x91
        sub_opcodes:
          - mnemonic: vpgatherqd
            operand: [ Vo, Md, x, Ho ]
            attr: [ w0 ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx2"

          - mnemonic: vpgatherqq
            operand: [ Vx, Mq, x, Hx ]
            attr: [ w1 ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx2"

      - opcode: 0x92
        sub_opcodes:
          - mnemonic: vpgatherdps
            operand: [ Vx, Md, x, Hx ]
            attr: [ w0 ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx2"

          - mnemonic: vpgatherdpd
            operand: [ Vx, Mqo, Hx ]
            attr: [ w1 ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx2"

      - opcode: 0x93
        sub_opcodes:
          - mnemonic: vpgatherqps
            operand: [ Vo, Md, x, Ho ]
            attr: [ w0 ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx2"

          - mnemonic: vpgatherqpd
            operand: [ Vx, Mq, x, Hx ]
            attr: [ w1 ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx2"

      - opcode: 0x94
        invalid:

      - opcode: 0x95
        invalid:

      - opcode: 0x96
        sub_opcodes:
          - mnemonic: vfmaddsub132ps
            operand: [ Vx, Hx, Wx ]
            attr: [ w0 ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Fma"

          - mnemonic: vfmaddsub132pd
            operand: [ Vx, Hx, Wx ]
            attr: [ w1 ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Fma"

      - opcode: 0x97
        sub_opcodes:
          - mnemonic: vfmsubadd132ps
            operand: [ Vx, Hx, Wx ]
            attr: [ w0 ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Fma"

          - mnemonic: vfmsubadd132pd
            operand: [ Vx, Hx, Wx ]
            attr: [ w1 ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Fma"

      - opcode: 0x98
        sub_opcodes:
          - mnemonic: vfmadd132ps
            operand: [ Vx, Hx, Wx ]
            attr: [ w0 ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Fma"

          - mnemonic: vfmadd132pd
            operand: [ Vx, Hx, Wx ]
            attr: [ w1 ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Fma"

      - opcode: 0x99
        sub_opcodes:
          - mnemonic: vfmadd132ss
            operand: [ Vo, Ho, Wd ]
            attr: [ w0 ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Fma"

          - mnemonic: vfmadd132sd
            operand: [ Vo, Ho, Wq ]
            attr: [ w1 ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Fma"

      - opcode: 0x9a
        sub_opcodes:
          - mnemonic: vfmsub132ps
            operand: [ Vx, Hx, Wx ]
            attr: [ w0 ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Fma"

          - mnemonic: vfmsub132pd
            operand: [ Vx, Hx, Wx ]
            attr: [ w1 ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Fma"

      - opcode: 0x9b
        sub_opcodes:
          - mnemonic: vfmsub132ss
            operand: [ Vo, Ho, Wd ]
            attr: [ w0 ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Fma"

          - mnemonic: vfmsub132sd
            operand: [ Vo, Ho, Wq ]
            attr: [ w1 ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Fma"

      - opcode: 0x9c
        sub_opcodes:
          - mnemonic: vfnmadd132ps
            operand: [ Vx, Hx, Wx ]
            attr: [ w0 ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Fma"

          - mnemonic: vfnmadd132pd
            operand: [ Vx, Hx, Wx ]
            attr: [ w1 ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Fma"

      - opcode: 0x9d
        sub_opcodes:
          - mnemonic: vfnmadd132ss
            operand: [ Vo, Ho, Wd ]
            attr: [ w0 ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Fma"

          - mnemonic: vfnmadd132sd
            operand: [ Vo, Ho, Wq ]
            attr: [ w1 ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Fma"

      - opcode: 0x9e
        sub_opcodes:
          - mnemonic: vfnmsub132ps
            operand: [ Vx, Hx, Wx ]
            attr: [ w0 ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Fma"

          - mnemonic: vfnmsub132pd
            operand: [ Vx, Hx, Wx ]
            attr: [ w1 ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Fma"

      - opcode: 0x9f
        sub_opcodes:
          - mnemonic: vfnmsub132ss
            operand: [ Vo, Ho, Wd ]
            attr: [ w0 ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Fma"

          - mnemonic: vfnmsub132sd
            operand: [ Vo, Ho, Wq ]
            attr: [ w1 ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Fma"

      - opcode: 0xa0
        invalid:

      - opcode: 0xa1
        invalid:

      - opcode: 0xa2
        invalid:

      - opcode: 0xa3
        invalid:

      - opcode: 0xa4
        invalid:

      - opcode: 0xa5
        invalid:

      - opcode: 0xa6
        sub_opcodes:
          - mnemonic: vfmaddsub213ps
            operand: [ Vx, Hx, Wx ]
            attr: [ w0 ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Fma"

          - mnemonic: vfmaddsub213pd
            operand: [ Vx, Hx, Wx ]
            attr: [ w1 ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Fma"

      - opcode: 0xa7
        sub_opcodes:
          - mnemonic: vfmsubadd213ps
            operand: [ Vx, Hx, Wx ]
            attr: [ w0 ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Fma"

          - mnemonic: vfmsubadd213pd
            operand: [ Vx, Hx, Wx ]
            attr: [ w1 ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Fma"

      - opcode: 0xa8
        sub_opcodes:
          - mnemonic: vfmadd213ps
            operand: [ Vx, Hx, Wx ]
            attr: [ w0 ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Fma"

          - mnemonic: vfmadd213pd
            operand: [ Vx, Hx, Wx ]
            attr: [ w1 ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Fma"

      - opcode: 0xa9
        sub_opcodes:
          - mnemonic: vfmadd213ss
            operand: [ Vo, Ho, Wd ]
            attr: [ w0 ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Fma"

          - mnemonic: vfmadd213sd
            operand: [ Vo, Ho, Wq ]
            attr: [ w1 ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Fma"

      - opcode: 0xaa
        sub_opcodes:
          - mnemonic: vfmsub213ps
            operand: [ Vx, Hx, Wx ]
            attr: [ w0 ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Fma"

          - mnemonic: vfmsub213pd
            operand: [ Vx, Hx, Wx ]
            attr: [ w1 ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Fma"

      - opcode: 0xab
        sub_opcodes:
          - mnemonic: vfmsub213ss
            operand: [ Vo, Ho, Wd ]
            attr: [ w0 ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Fma"

          - mnemonic: vfmsub213sd
            operand: [ Vo, Ho, Wq ]
            attr: [ w1 ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Fma"

      - opcode: 0xac
        sub_opcodes:
          - mnemonic: vfnmadd213ps
            operand: [ Vx, Hx, Wx ]
            attr: [ w0 ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Fma"

          - mnemonic: vfnmadd213pd
            operand: [ Vx, Hx, Wx ]
            attr: [ w1 ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Fma"

      - opcode: 0xad
        sub_opcodes:
          - mnemonic: vfnmadd213ss
            operand: [ Vo, Ho, Wd ]
            attr: [ w0 ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Fma"

          - mnemonic: vfnmadd213sd
            operand: [ Vo, Ho, Wq ]
            attr: [ w1 ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Fma"

      - opcode: 0xae
        sub_opcodes:
          - mnemonic: vfnmsub213ps
            operand: [ Vx, Hx, Wx ]
            attr: [ w0 ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Fma"

          - mnemonic: vfnmsub213pd
            operand: [ Vx, Hx, Wx ]
            attr: [ w1 ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Fma"

      - opcode: 0xaf
        sub_opcodes:
          - mnemonic: vfnmsub213ss
            operand: [ Vo, Ho, Wd ]
            attr: [ w0 ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Fma"

          - mnemonic: vfnmsub213sd
            operand: [ Vo, Ho, Wq ]
            attr: [ w1 ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Fma"

      - opcode: 0xb0
        invalid:

      - opcode: 0xb1
        invalid:

      - opcode: 0xb2
        invalid:

      - opcode: 0xb3
        invalid:

      - opcode: 0xb4
        invalid:

      - opcode: 0xb5
        invalid:

      - opcode: 0xb6
        sub_opcodes:
          - mnemonic: vfmaddsub231ps
            operand: [ Vx, Hx, Wx ]
            attr: [ w0 ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Fma"

          - mnemonic: vfmaddsub231pd
            operand: [ Vx, Hx, Wx ]
            attr: [ w1 ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Fma"

      - opcode: 0xb7
        sub_opcodes:
          - mnemonic: vfmsubadd231ps
            operand: [ Vx, Hx, Wx ]
            attr: [ w0 ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Fma"

          - mnemonic: vfmsubadd231pd
            operand: [ Vx, Hx, Wx ]
            attr: [ w1 ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Fma"

      - opcode: 0xb8
        sub_opcodes:
          - mnemonic: vfmadd231ps
            operand: [ Vx, Hx, Wx ]
            attr: [ w0 ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Fma"

          - mnemonic: vfmadd231pd
            operand: [ Vx, Hx, Wx ]
            attr: [ w1 ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Fma"

      - opcode: 0xb9
        sub_opcodes:
          - mnemonic: vfmadd231ss
            operand: [ Vo, Ho, Wd ]
            attr: [ w0 ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Fma"

          - mnemonic: vfmadd231sd
            operand: [ Vo, Ho, Wq ]
            attr: [ w1 ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Fma"

      - opcode: 0xba
        sub_opcodes:
          - mnemonic: vfmsub231ps
            operand: [ Vx, Hx, Wx ]
            attr: [ w0 ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Fma"

          - mnemonic: vfmsub231pd
            operand: [ Vx, Hx, Wx ]
            attr: [ w1 ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Fma"

      - opcode: 0xbb
        sub_opcodes:
          - mnemonic: vfmsub231ss
            operand: [ Vo, Ho, Wd ]
            attr: [ w0 ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Fma"

          - mnemonic: vfmsub231sd
            operand: [ Vo, Ho, Wq ]
            attr: [ w1 ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Fma"

      - opcode: 0xbc
        sub_opcodes:
          - mnemonic: vfnmadd231ps
            operand: [ Vx, Hx, Wx ]
            attr: [ w0 ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Fma"

          - mnemonic: vfnmadd231pd
            operand: [ Vx, Hx, Wx ]
            attr: [ w1 ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Fma"

      - opcode: 0xbd
        sub_opcodes:
          - mnemonic: vfnmadd231ss
            operand: [ Vo, Ho, Wd ]
            attr: [ w0 ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Fma"

          - mnemonic: vfnmadd231sd
            operand: [ Vo, Ho, Wq ]
            attr: [ w1 ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Fma"

      - opcode: 0xbe
        sub_opcodes:
          - mnemonic: vfnmsub231ps
            operand: [ Vx, Hx, Wx ]
            attr: [ w0 ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Fma"

          - mnemonic: vfnmsub231pd
            operand: [ Vx, Hx, Wx ]
            attr: [ w1 ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Fma"

      - opcode: 0xbf
        sub_opcodes:
          - mnemonic: vfnmsub231ss
            operand: [ Vo, Ho, Wd ]
            attr: [ w0 ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Fma"

          - mnemonic: vfnmsub231sd
            operand: [ Vo, Ho, Wq ]
            attr: [ w1 ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Fma"

      - opcode: 0xc0
        invalid:

      - opcode: 0xc1
        invalid:

      - opcode: 0xc2
        invalid:

      - opcode: 0xc3
        invalid:

      - opcode: 0xc4
        invalid:

      - opcode: 0xc5
        invalid:

      - opcode: 0xc6
        invalid:

      - opcode: 0xc7
        invalid:

      - opcode: 0xc8
        invalid:

      - opcode: 0xc9
        invalid:

      - opcode: 0xca
        invalid:

      - opcode: 0xcb
        invalid:

      - opcode: 0xcc
        invalid:

      - opcode: 0xcd
        invalid:

      - opcode: 0xce
        invalid:

      - opcode: 0xcf
        invalid:

      - opcode: 0xd0
        invalid:

      - opcode: 0xd1
        invalid:

      - opcode: 0xd2
        invalid:

      - opcode: 0xd3
        invalid:

      - opcode: 0xd4
        invalid:

      - opcode: 0xd5
        invalid:

      - opcode: 0xd6
        invalid:

      - opcode: 0xd7
        invalid:

      - opcode: 0xd8
        invalid:

      - opcode: 0xd9
        invalid:

      - opcode: 0xda
        invalid:

      - opcode: 0xdb
        sub_opcodes:
          - mnemonic: aesimc
            operand: [ Vo, Wo ]
            attr: [ nv, ny ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Aes"

          - mnemonic: vaesimc
            operand: [ Vo, Wo ]
            attr: [ nv, ny ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx"

      - opcode: 0xdc
        sub_opcodes:
          - mnemonic: aesenc
            operand: [ Vo, Wo ]
            attr: [ nv, ny ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Aes"

          - mnemonic: vaesenc
            operand: [ Vo, Ho, Wo ]
            attr: [ ny ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx"

      - opcode: 0xdd
        sub_opcodes:
          - mnemonic: aesenclast
            operand: [ Vo, Wo ]
            attr: [ nv, ny ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Aes"

          - mnemonic: vaesenclast
            operand: [ Vo, Ho, Wo ]
            attr: [ ny ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx"

      - opcode: 0xde
        sub_opcodes:
          - mnemonic: aesdec
            operand: [ Vo, Wo ]
            attr: [ nv, ny ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Aes"

          - mnemonic: vaesdec
            operand: [ Vo, Ho, Wo ]
            attr: [ ny ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx"

      - opcode: 0xdf
        sub_opcodes:
          - mnemonic: aesdeclast
            operand: [ Vo, Wo ]
            attr: [ nv, ny ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Aes"

          - mnemonic: vaesdeclast
            operand: [ Vo, Ho, Wo ]
            attr: [ ny ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx"

      - opcode: 0xe0
        invalid:

      - opcode: 0xe1
        invalid:

      - opcode: 0xe2
        invalid:

      - opcode: 0xe3
        invalid:

      - opcode: 0xe4
        invalid:

      - opcode: 0xe5
        invalid:

      - opcode: 0xe6
        invalid:

      - opcode: 0xe7
        invalid:

      - opcode: 0xe8
        invalid:

      - opcode: 0xe9
        invalid:

      - opcode: 0xea
        invalid:

      - opcode: 0xeb
        invalid:

      - opcode: 0xec
        invalid:

      - opcode: 0xed
        invalid:

      - opcode: 0xee
        invalid:

      - opcode: 0xef
        invalid:

      - opcode: 0xf0
        sub_opcodes:
          - mnemonic: movbe
            operand: [ Gv, Mv ]
            cpu_model: ">= X86_Arch_Movbe"

          - mnemonic: movbe
            operand: [ Gv, Mv ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Movbe"

          - mnemonic: crc32
            operand: [ Gy, Eb ]
            prefix: 0xf2
            cpu_model: ">= X86_Arch_Sse42"

          - mnemonic: crc32
            operand: [ Gy, Eb ]
            prefix: [ 0x66, 0xf2 ]
            cpu_model: ">= X86_Arch_Sse42"

      - opcode: 0xf1
        sub_opcodes:
          - mnemonic: movbe
            operand: [ Mv, Gv ]
            cpu_model: ">= X86_Arch_Movbe"

          - mnemonic: movbe
            operand: [ Mv, Gv ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Movbe"

          - mnemonic: crc32
            operand: [ Gy, Ev ]
            prefix: 0xf2
            cpu_model: ">= X86_Arch_Sse42"

          - mnemonic: crc32
            operand: [ Gy, Ev ]
            prefix: [ 0x66, 0xf2 ]
            cpu_model: ">= X86_Arch_Sse42"

      - opcode: 0xf2
        mnemonic: andn
        operand: [ Gy, By, Ey ]
        cpu_model: ">= X86_Arch_Bmi"

      # LATER: This part is not done
      - opcode: 0xf3
        sub_opcodes:
          - reference: group_17

          - reference: group_17
            prefix: 0x66

          - reference: group_17
            prefix: 0xf3

          - reference: group_17
            prefix: 0xf2

          - reference: group_17
            prefix: [ 0x66, 0xf2 ]

      - opcode: 0xf4
        invalid:

      - opcode: 0xf5
        sub_opcodes:
          - mnemonic: bzhi
            operand: [ Gy, Ey, By ]
            cpu_model: ">= X86_Arch_Bmi2"

          - mnemonic: pext
            operand: [ Gy, By, Ey ]
            prefix: 0xf3
            cpu_model: ">= X86_Arch_Bmi2"

          - mnemonic: pdep
            operand: [ Gy, By, Ey ]
            prefix: 0xf2
            cpu_model: ">= X86_Arch_Bmi2"

      - opcode: 0xf6
        mnemonic: mulx
        operand: [ Gy, Ey, By ]
        prefix: 0xf2
        cpu_model: ">= X86_Arch_Bmi2"

      - opcode: 0xf7
        sub_opcodes:
          - mnemonic: bextr
            operand: [ Gy, Ey, By ]
            cpu_model: ">= X86_Arch_Bmi"

          - mnemonic: shlx
            operand: [ Gy, Ey, By ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Bmi2"

          - mnemonic: sarx
            operand: [ Gy, Ey, By ]
            prefix: 0xf3
            cpu_model: ">= X86_Arch_Bmi2"

          - mnemonic: shrx
            operand: [ Gy, Ey, By ]
            prefix: 0xf2
            cpu_model: ">= X86_Arch_Bmi2"

      - opcode: 0xf8
        invalid:

      - opcode: 0xf9
        invalid:

      - opcode: 0xfa
        invalid:

      - opcode: 0xfb
        invalid:

      - opcode: 0xfc
        invalid:

      - opcode: 0xfd
        invalid:

      - opcode: 0xfe
        invalid:

      - opcode: 0xff
        invalid:

    table_3_3A:
      - opcode: 0x00
        mnemonic: vpermq
        operand: [ Vy, Wy, Ib ]
        prefix: 0x66
        cpu_model: ">= X86_Arch_Avx2"

      - opcode: 0x01
        mnemonic: vpermd
        operand: [ Vy, Wy, Ib ]
        prefix: 0x66
        cpu_model: ">= X86_Arch_Avx2"

      - opcode: 0x02
        mnemonic: vpblendd
        operand: [ Vx, Hx, Wx, Ib ]
        prefix: 0x66
        cpu_model: ">= X86_Arch_Avx2"

      - opcode: 0x03
        invalid:

      - opcode: 0x04
        mnemonic: vpermilps
        operand: [ Vx, Wx, Ib ]
        prefix: 0x66
        cpu_model: ">= X86_Arch_Avx"

      - opcode: 0x05
        mnemonic: vpermilpd
        operand: [ Vx, Wx, Ib ]
        prefix: 0x66
        cpu_model: ">= X86_Arch_Avx"

      - opcode: 0x06
        mnemonic: vperm2f128
        operand: [ Vy, Hy, Wy, Ib ]
        prefix: 0x66
        cpu_model: ">= X86_Arch_Avx"

      - opcode: 0x07
        invalid:

      - opcode: 0x08
        sub_opcodes:
          - mnemonic: roundps
            operand: [ Vx, Wx, Ib ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse41"

          - mnemonic: vroundps
            operand: [ Vx, Wx, Ib ]
            attr: [ nv ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx"

      - opcode: 0x09
        sub_opcodes:
          - mnemonic: roundpd
            operand: [ Vx, Wx, Ib ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse41"

          - mnemonic: vroundpd
            operand: [ Vx, Wx, Ib ]
            attr: [ nv ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx"

      - opcode: 0x0a
        sub_opcodes:
          - mnemonic: roundss
            operand: [ Vo, Woq, Ib ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse41"

          - mnemonic: vroundss
            operand: [ Vo, Ho, Woq, Ib ]
            attr: [ ny ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx"

      - opcode: 0x0b
        sub_opcodes:
          - mnemonic: roundsd
            operand: [ Vo, Woq, Ib ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse41"

          - mnemonic: vroundsd
            operand: [ Vo, Ho, Woq, Ib ]
            attr: [ ny ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx"

      - opcode: 0x0c
        sub_opcodes:
          - mnemonic: blendps
            operand: [ Vx, Wx, Ib ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse41"

          - mnemonic: vblendps
            operand: [ Vx, Hx, Wx, Ib ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx"

      - opcode: 0x0d
        sub_opcodes:
          - mnemonic: blendpd
            operand: [ Vx, Wx, Ib ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse41"

          - mnemonic: vblendpd
            operand: [ Vx, Hx, Wx, Ib ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx"

      - opcode: 0x0e
        sub_opcodes:
          - mnemonic: blendw
            operand: [ Vx, Wx, Ib ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse41"

          - mnemonic: vblendw
            operand: [ Vx, Hx, Wx, Ib ]
            attr: [ ny ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx"

          - mnemonic: vblendw
            operand: [ Vx, Hx, Wx, Ib ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx2"

      - opcode: 0x0f
        sub_opcodes:
          - mnemonic: palignr
            operand: [ Pq, Qq, Ib ]
            cpu_model: ">= X86_Arch_Ssse3"

          - mnemonic: palignr
            operand: [ Vx, Wx, Ib ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Ssse3"

          - mnemonic: vpalignr
            operand: [ Vx, Hx, Wx, Ib ]
            attr: [ ny ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx"

          - mnemonic: vpalignr
            operand: [ Vx, Hx, Wx, Ib ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx2"

      - opcode: 0x10
        invalid:

      - opcode: 0x11
        invalid:

      - opcode: 0x12
        invalid:

      - opcode: 0x13
        invalid:

      - opcode: 0x14
        sub_opcodes:
          - mnemonic: pextrb
            operand: [ Eyb, Vo, Ib ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse41"

          - mnemonic: vpextrb
            operand: [ Wob, Vo, Ib ]
            attr: [ ny, nv ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx"

      - opcode: 0x15
        sub_opcodes:
          - mnemonic: pextrw
            operand: [ Eyw, Vo, Ib ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse41"

          - mnemonic: vpextrw
            operand: [ Wow, Vo, Ib ]
            attr: [ ny, nv ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx"

      - opcode: 0x16
        sub_opcodes:
          - mnemonic: pextrd
            operand: [ Ey, Vo, Ib ]
            constraint: f64
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse41"

          - mnemonic: vpextrd
            operand: [ Ey, Vo, Ib ]
            constraint: f64
            attr: [ ny, nv ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx"

      - opcode: 0x17
        sub_opcodes:
          - mnemonic: extractps
            operand: [ Ey, Vo, Ib ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse41"

          - mnemonic: vextractps
            operand: [ Ey, Vo, Ib ]
            attr: [ ny, nv ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx"

      - opcode: 0x18
        mnemonic: vinsertf128
        operand: [ Vy, Hy, Wo, Ib ]
        prefix: 0x66
        cpu_model: ">= X86_Arch_Avx"

      - opcode: 0x19
        mnemonic: vextractf128
        operand: [ Wo, Vy, Ib ]
        prefix: 0x66
        cpu_model: ">= X86_Arch_Avx"

      - opcode: 0x1a
        invalid:

      - opcode: 0x1b
        invalid:

      - opcode: 0x1c
        invalid:

      - opcode: 0x1d
        mnemonic: vcvtps2ph
        operand: [ Woqo, Vx, Ib ]
        prefix: 0x66
        cpu_model: ">= X86_Arch_F16c"

      - opcode: 0x1e
        invalid:

      - opcode: 0x1f
        invalid:

      - opcode: 0x20
        sub_opcodes:
          - mnemonic: pinsrb
            operand: [ Vo, Edb, Ib ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse41"

          - mnemonic: vpinsrb
            operand: [ Vo, Ho, Edb, Ib ]
            attr: [ ny ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx"

      - opcode: 0x21
        sub_opcodes:
          - mnemonic: insertps
            operand: [ Vo, Uod, Ib ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse41"

          - mnemonic: vinsertps
            operand: [ Vo, Ho, Uod, Ib ]
            attr: [ ny ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx"

      - opcode: 0x22
        sub_opcodes:
          - mnemonic: pinsrd
            operand: [ Vo, Ey, Ib ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse41"

          - mnemonic: vpinsrd
            operand: [ Vo, Ho, Ey, Ib ]
            attr: [ ny ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx"

      - opcode: 0x23
        invalid:

      - opcode: 0x24
        invalid:

      - opcode: 0x25
        invalid:

      - opcode: 0x26
        invalid:

      - opcode: 0x27
        invalid:

      - opcode: 0x28
        invalid:

      - opcode: 0x29
        invalid:

      - opcode: 0x2a
        invalid:

      - opcode: 0x2b
        invalid:

      - opcode: 0x2c
        invalid:

      - opcode: 0x2d
        invalid:

      - opcode: 0x2e
        invalid:

      - opcode: 0x2f
        invalid:

      - opcode: 0x30
        invalid:

      - opcode: 0x31
        invalid:

      - opcode: 0x32
        invalid:

      - opcode: 0x33
        invalid:

      - opcode: 0x34
        invalid:

      - opcode: 0x35
        invalid:

      - opcode: 0x36
        invalid:

      - opcode: 0x37
        invalid:

      - opcode: 0x38
        mnemonic: vinserti128
        operand: [ Vy, Hy, Wo, Ib ]
        prefix: 0x66
        cpu_model: ">= X86_Arch_Avx2"

      - opcode: 0x39
        mnemonic: vextracti128
        operand: [ Wo, Vy, Ib ]
        attr: [ nv ]
        prefix: 0x66
        cpu_model: ">= X86_Arch_Avx2"

      - opcode: 0x3a
        invalid:

      - opcode: 0x3b
        invalid:

      - opcode: 0x3c
        invalid:

      - opcode: 0x3d
        invalid:

      - opcode: 0x3e
        invalid:

      - opcode: 0x3f
        invalid:

      - opcode: 0x40
        sub_opcodes:
          - mnemonic: dpps
            operand: [ Vx, Wx, Ib ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse41"

          - mnemonic: vdpps
            operand: [ Vx, Hx, Wx, Ib ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx"

      - opcode: 0x41
        sub_opcodes:
          - mnemonic: dppd
            operand: [ Vo, Wo, Ib ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse41"

          - mnemonic: vdppd
            operand: [ Vo, Ho, Wo, Ib ]
            attr: [ ny ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx"

      - opcode: 0x42
        sub_opcodes:
          - mnemonic: mpsadbw
            operand: [ Vx, Wx, Ib ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse41"

          - mnemonic: vmpsadbw
            operand: [ Vx, Hx, Wx, Ib ]
            attr: [ ny ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx"

          - mnemonic: vmpsadbw
            operand: [ Vx, Hx, Wx, Ib ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx2"

      - opcode: 0x43
        invalid:

      - opcode: 0x44
        sub_opcodes:
          - mnemonic: pclmulqdq
            operand: [ Vo, Wo, Ib ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Clmul"

          - mnemonic: vpclmulqdq
            operand: [ Vo, Ho, Wo, Ib ]
            attr: [ ny ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx"

      - opcode: 0x45
        invalid:

      - opcode: 0x46
        mnemonic: vperm2i128
        operand: [ Vy, Hy, Wy, Ib ]
        prefix: 0x66
        cpu_model: ">= X86_Arch_Avx2"

      - opcode: 0x47
        invalid:

      - opcode: 0x48
        invalid:

      - opcode: 0x49
        invalid:

      - opcode: 0x4a
        mnemonic: vblendvps
        operand: [ Vx, Hx, Wx, Lx ]
        prefix: 0x66
        cpu_model: ">= X86_Arch_Avx"

      - opcode: 0x4b
        mnemonic: vblendvpd
        operand: [ Vx, Hx, Wx, Lx ]
        prefix: 0x66
        cpu_model: ">= X86_Arch_Avx"

      - opcode: 0x4c
        sub_opcodes:
          - mnemonic: vpblendvp
            operand: [ Vx, Hx, Wx, Lx ]
            attr: [ ny ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx"

          - mnemonic: vpblendvp
            operand: [ Vx, Hx, Wx, Lx ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx2"

      - opcode: 0x4d
        invalid:

      - opcode: 0x4e
        invalid:

      - opcode: 0x4f
        invalid:

      - opcode: 0x50
        invalid:

      - opcode: 0x51
        invalid:

      - opcode: 0x52
        invalid:

      - opcode: 0x53
        invalid:

      - opcode: 0x54
        invalid:

      - opcode: 0x55
        invalid:

      - opcode: 0x56
        invalid:

      - opcode: 0x57
        invalid:

      - opcode: 0x58
        invalid:

      - opcode: 0x59
        invalid:

      - opcode: 0x5a
        invalid:

      - opcode: 0x5b
        invalid:

      - opcode: 0x5c
        invalid:

      - opcode: 0x5d
        invalid:

      - opcode: 0x5e
        invalid:

      - opcode: 0x5f
        invalid:

      - opcode: 0x60
        sub_opcodes:
          - mnemonic: pcmpestrm
            operand: [ Vo, Wo, Ib ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse42"

          - mnemonic: vpcmpestrm
            operand: [ Vo, Wo, Ib ]
            attr: [ ny, nv ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx"

      - opcode: 0x61
        sub_opcodes:
          - mnemonic: pcmpestri
            operand: [ Vo, Wo, Ib ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse42"

          - mnemonic: vpcmpestri
            operand: [ Vo, Wo, Ib ]
            attr: [ ny, nv ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx"

      - opcode: 0x62
        sub_opcodes:
          - mnemonic: pcmpistrm
            operand: [ Vo, Wo, Ib ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse42"

          - mnemonic: vpcmpistrm
            operand: [ Vo, Wo, Ib ]
            attr: [ ny, nv ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx"

      - opcode: 0x63
        sub_opcodes:
          - mnemonic: pcmpistri
            operand: [ Vo, Wo, Ib ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Sse42"

          - mnemonic: vpcmpistri
            operand: [ Vo, Wo, Ib ]
            attr: [ ny, nv ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx"

      - opcode: 0x64
        invalid:

      - opcode: 0x65
        invalid:

      - opcode: 0x66
        invalid:

      - opcode: 0x67
        invalid:

      - opcode: 0x68
        invalid:

      - opcode: 0x69
        invalid:

      - opcode: 0x6a
        invalid:

      - opcode: 0x6b
        invalid:

      - opcode: 0x6c
        invalid:

      - opcode: 0x6d
        invalid:

      - opcode: 0x6e
        invalid:

      - opcode: 0x6f
        invalid:

      - opcode: 0x70
        invalid:

      - opcode: 0x71
        invalid:

      - opcode: 0x72
        invalid:

      - opcode: 0x73
        invalid:

      - opcode: 0x74
        invalid:

      - opcode: 0x75
        invalid:

      - opcode: 0x76
        invalid:

      - opcode: 0x77
        invalid:

      - opcode: 0x78
        invalid:

      - opcode: 0x79
        invalid:

      - opcode: 0x7a
        invalid:

      - opcode: 0x7b
        invalid:

      - opcode: 0x7c
        invalid:

      - opcode: 0x7d
        invalid:

      - opcode: 0x7e
        invalid:

      - opcode: 0x7f
        invalid:

      - opcode: 0x80
        invalid:

      - opcode: 0x81
        invalid:

      - opcode: 0x82
        invalid:

      - opcode: 0x83
        invalid:

      - opcode: 0x84
        invalid:

      - opcode: 0x85
        invalid:

      - opcode: 0x86
        invalid:

      - opcode: 0x87
        invalid:

      - opcode: 0x88
        invalid:

      - opcode: 0x89
        invalid:

      - opcode: 0x8a
        invalid:

      - opcode: 0x8b
        invalid:

      - opcode: 0x8c
        invalid:

      - opcode: 0x8d
        invalid:

      - opcode: 0x8e
        invalid:

      - opcode: 0x8f
        invalid:

      - opcode: 0x90
        invalid:

      - opcode: 0x91
        invalid:

      - opcode: 0x92
        invalid:

      - opcode: 0x93
        invalid:

      - opcode: 0x94
        invalid:

      - opcode: 0x95
        invalid:

      - opcode: 0x96
        invalid:

      - opcode: 0x97
        invalid:

      - opcode: 0x98
        invalid:

      - opcode: 0x99
        invalid:

      - opcode: 0x9a
        invalid:

      - opcode: 0x9b
        invalid:

      - opcode: 0x9c
        invalid:

      - opcode: 0x9d
        invalid:

      - opcode: 0x9e
        invalid:

      - opcode: 0x9f
        invalid:

      - opcode: 0xa0
        invalid:

      - opcode: 0xa1
        invalid:

      - opcode: 0xa2
        invalid:

      - opcode: 0xa3
        invalid:

      - opcode: 0xa4
        invalid:

      - opcode: 0xa5
        invalid:

      - opcode: 0xa6
        invalid:

      - opcode: 0xa7
        invalid:

      - opcode: 0xa8
        invalid:

      - opcode: 0xa9
        invalid:

      - opcode: 0xaa
        invalid:

      - opcode: 0xab
        invalid:

      - opcode: 0xac
        invalid:

      - opcode: 0xad
        invalid:

      - opcode: 0xae
        invalid:

      - opcode: 0xaf
        invalid:

      - opcode: 0xb0
        invalid:

      - opcode: 0xb1
        invalid:

      - opcode: 0xb2
        invalid:

      - opcode: 0xb3
        invalid:

      - opcode: 0xb4
        invalid:

      - opcode: 0xb5
        invalid:

      - opcode: 0xb6
        invalid:

      - opcode: 0xb7
        invalid:

      - opcode: 0xb8
        invalid:

      - opcode: 0xb9
        invalid:

      - opcode: 0xba
        invalid:

      - opcode: 0xbb
        invalid:

      - opcode: 0xbc
        invalid:

      - opcode: 0xbd
        invalid:

      - opcode: 0xbe
        invalid:

      - opcode: 0xbf
        invalid:

      - opcode: 0xc0
        invalid:

      - opcode: 0xc1
        invalid:

      - opcode: 0xc2
        invalid:

      - opcode: 0xc3
        invalid:

      - opcode: 0xc4
        invalid:

      - opcode: 0xc5
        invalid:

      - opcode: 0xc6
        invalid:

      - opcode: 0xc7
        invalid:

      - opcode: 0xc8
        invalid:

      - opcode: 0xc9
        invalid:

      - opcode: 0xca
        invalid:

      - opcode: 0xcb
        invalid:

      - opcode: 0xcc
        invalid:

      - opcode: 0xcd
        invalid:

      - opcode: 0xce
        invalid:

      - opcode: 0xcf
        invalid:

      - opcode: 0xd0
        invalid:

      - opcode: 0xd1
        invalid:

      - opcode: 0xd2
        invalid:

      - opcode: 0xd3
        invalid:

      - opcode: 0xd4
        invalid:

      - opcode: 0xd5
        invalid:

      - opcode: 0xd6
        invalid:

      - opcode: 0xd7
        invalid:

      - opcode: 0xd8
        invalid:

      - opcode: 0xd9
        invalid:

      - opcode: 0xda
        invalid:

      - opcode: 0xdb
        invalid:

      - opcode: 0xdc
        invalid:

      - opcode: 0xdd
        invalid:

      - opcode: 0xde
        invalid:

      - opcode: 0xdf
        sub_opcodes:
          - mnemonic: aeskeygenassist
            operand: [ Vo, Wo, Ib ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Aes"

          - mnemonic: vaeskeygenassist
            operand: [ Vo, Wo, Ib ]
            attr: [ ny, nc ]
            prefix: 0x66
            cpu_model: ">= X86_Arch_Avx"

      - opcode: 0xe0
        invalid:

      - opcode: 0xe1
        invalid:

      - opcode: 0xe2
        invalid:

      - opcode: 0xe3
        invalid:

      - opcode: 0xe4
        invalid:

      - opcode: 0xe5
        invalid:

      - opcode: 0xe6
        invalid:

      - opcode: 0xe7
        invalid:

      - opcode: 0xe8
        invalid:

      - opcode: 0xe9
        invalid:

      - opcode: 0xea
        invalid:

      - opcode: 0xeb
        invalid:

      - opcode: 0xec
        invalid:

      - opcode: 0xed
        invalid:

      - opcode: 0xee
        invalid:

      - opcode: 0xef
        invalid:

      - opcode: 0xf0
        mnemonic: rorx
        operand: [ By, Ey, Ib ]
        attr: [ ny, nv ]
        prefix: 0xf2
        cpu_model: ">= X86_Arch_Bmi2"

      - opcode: 0xf1
        invalid:

      - opcode: 0xf2
        invalid:

      - opcode: 0xf3
        invalid:

      - opcode: 0xf4
        invalid:

      - opcode: 0xf5
        invalid:

      - opcode: 0xf6
        invalid:

      - opcode: 0xf7
        invalid:

      - opcode: 0xf8
        invalid:

      - opcode: 0xf9
        invalid:

      - opcode: 0xfa
        invalid:

      - opcode: 0xfb
        invalid:

      - opcode: 0xfc
        invalid:

      - opcode: 0xfd
        invalid:

      - opcode: 0xfe
        invalid:

      - opcode: 0xff
        invalid:

    table_FP1:
      - opcode: 0x00
        mnemonic: fadd
        operand: [ ST0, ST0 ]

      - opcode: 0x01
        mnemonic: fadd
        operand: [ ST0, ST1 ]

      - opcode: 0x02
        mnemonic: fadd
        operand: [ ST0, ST2 ]

      - opcode: 0x03
        mnemonic: fadd
        operand: [ ST0, ST3 ]

      - opcode: 0x04
        mnemonic: fadd
        operand: [ ST0, ST4 ]

      - opcode: 0x05
        mnemonic: fadd
        operand: [ ST0, ST5 ]

      - opcode: 0x06
        mnemonic: fadd
        operand: [ ST0, ST6 ]

      - opcode: 0x07
        mnemonic: fadd
        operand: [ ST0, ST7 ]

      - opcode: 0x08
        mnemonic: fmul
        operand: [ ST0, ST0 ]

      - opcode: 0x09
        mnemonic: fmul
        operand: [ ST0, ST1 ]

      - opcode: 0x0a
        mnemonic: fmul
        operand: [ ST0, ST2 ]

      - opcode: 0x0b
        mnemonic: fmul
        operand: [ ST0, ST3 ]

      - opcode: 0x0c
        mnemonic: fmul
        operand: [ ST0, ST4 ]

      - opcode: 0x0d
        mnemonic: fmul
        operand: [ ST0, ST5 ]

      - opcode: 0x0e
        mnemonic: fmul
        operand: [ ST0, ST6 ]

      - opcode: 0x0f
        mnemonic: fmul
        operand: [ ST0, ST7 ]

      - opcode: 0x10
        mnemonic: fcom
        operand: [ ST0, ST0 ]

      - opcode: 0x11
        mnemonic: fcom
        operand: [ ST0, ST1 ]

      - opcode: 0x12
        mnemonic: fcom
        operand: [ ST0, ST2 ]

      - opcode: 0x13
        mnemonic: fcom
        operand: [ ST0, ST3 ]

      - opcode: 0x14
        mnemonic: fcom
        operand: [ ST0, ST4 ]

      - opcode: 0x15
        mnemonic: fcom
        operand: [ ST0, ST5 ]

      - opcode: 0x16
        mnemonic: fcom
        operand: [ ST0, ST6 ]

      - opcode: 0x17
        mnemonic: fcom
        operand: [ ST0, ST7 ]

      - opcode: 0x18
        mnemonic: fcomp
        operand: [ ST0, ST0 ]

      - opcode: 0x19
        mnemonic: fcomp
        operand: [ ST0, ST1 ]

      - opcode: 0x1a
        mnemonic: fcomp
        operand: [ ST0, ST2 ]

      - opcode: 0x1b
        mnemonic: fcomp
        operand: [ ST0, ST3 ]

      - opcode: 0x1c
        mnemonic: fcomp
        operand: [ ST0, ST4 ]

      - opcode: 0x1d
        mnemonic: fcomp
        operand: [ ST0, ST5 ]

      - opcode: 0x1e
        mnemonic: fcomp
        operand: [ ST0, ST6 ]

      - opcode: 0x1f
        mnemonic: fcomp
        operand: [ ST0, ST7 ]

      - opcode: 0x20
        mnemonic: fsub
        operand: [ ST0, ST0 ]

      - opcode: 0x21
        mnemonic: fsub
        operand: [ ST0, ST1 ]

      - opcode: 0x22
        mnemonic: fsub
        operand: [ ST0, ST2 ]

      - opcode: 0x23
        mnemonic: fsub
        operand: [ ST0, ST3 ]

      - opcode: 0x24
        mnemonic: fsub
        operand: [ ST0, ST4 ]

      - opcode: 0x25
        mnemonic: fsub
        operand: [ ST0, ST5 ]

      - opcode: 0x26
        mnemonic: fsub
        operand: [ ST0, ST6 ]

      - opcode: 0x27
        mnemonic: fsub
        operand: [ ST0, ST7 ]

      - opcode: 0x28
        mnemonic: fsubr
        operand: [ ST0, ST0 ]

      - opcode: 0x29
        mnemonic: fsubr
        operand: [ ST0, ST1 ]

      - opcode: 0x2a
        mnemonic: fsubr
        operand: [ ST0, ST2 ]

      - opcode: 0x2b
        mnemonic: fsubr
        operand: [ ST0, ST3 ]

      - opcode: 0x2c
        mnemonic: fsubr
        operand: [ ST0, ST4 ]

      - opcode: 0x2d
        mnemonic: fsubr
        operand: [ ST0, ST5 ]

      - opcode: 0x2e
        mnemonic: fsubr
        operand: [ ST0, ST6 ]

      - opcode: 0x2f
        mnemonic: fsubr
        operand: [ ST0, ST7 ]

      - opcode: 0x30
        mnemonic: fdiv
        operand: [ ST0, ST0 ]

      - opcode: 0x31
        mnemonic: fdiv
        operand: [ ST0, ST1 ]

      - opcode: 0x32
        mnemonic: fdiv
        operand: [ ST0, ST2 ]

      - opcode: 0x33
        mnemonic: fdiv
        operand: [ ST0, ST3 ]

      - opcode: 0x34
        mnemonic: fdiv
        operand: [ ST0, ST4 ]

      - opcode: 0x35
        mnemonic: fdiv
        operand: [ ST0, ST5 ]

      - opcode: 0x36
        mnemonic: fdiv
        operand: [ ST0, ST6 ]

      - opcode: 0x37
        mnemonic: fdiv
        operand: [ ST0, ST7 ]

      - opcode: 0x38
        mnemonic: fdivr
        operand: [ ST0, ST0 ]

      - opcode: 0x39
        mnemonic: fdivr
        operand: [ ST0, ST1 ]

      - opcode: 0x3a
        mnemonic: fdivr
        operand: [ ST0, ST2 ]

      - opcode: 0x3b
        mnemonic: fdivr
        operand: [ ST0, ST3 ]

      - opcode: 0x3c
        mnemonic: fdivr
        operand: [ ST0, ST4 ]

      - opcode: 0x3d
        mnemonic: fdivr
        operand: [ ST0, ST5 ]

      - opcode: 0x3e
        mnemonic: fdivr
        operand: [ ST0, ST6 ]

      - opcode: 0x3f
        mnemonic: fdivr
        operand: [ ST0, ST7 ]

    table_FP2:
      - opcode: 0x00
        mnemonic: fld
        operand: [ ST0, ST0 ]

      - opcode: 0x01
        mnemonic: fld
        operand: [ ST0, ST1 ]

      - opcode: 0x02
        mnemonic: fld
        operand: [ ST0, ST2 ]

      - opcode: 0x03
        mnemonic: fld
        operand: [ ST0, ST3 ]

      - opcode: 0x04
        mnemonic: fld
        operand: [ ST0, ST4 ]

      - opcode: 0x05
        mnemonic: fld
        operand: [ ST0, ST5 ]

      - opcode: 0x06
        mnemonic: fld
        operand: [ ST0, ST6 ]

      - opcode: 0x07
        mnemonic: fld
        operand: [ ST0, ST7 ]

      - opcode: 0x08
        mnemonic: fxch
        operand: [ ST0, ST0 ]

      - opcode: 0x09
        mnemonic: fxch
        operand: [ ST0, ST1 ]

      - opcode: 0x0a
        mnemonic: fxch
        operand: [ ST0, ST2 ]

      - opcode: 0x0b
        mnemonic: fxch
        operand: [ ST0, ST3 ]

      - opcode: 0x0c
        mnemonic: fxch
        operand: [ ST0, ST4 ]

      - opcode: 0x0d
        mnemonic: fxch
        operand: [ ST0, ST5 ]

      - opcode: 0x0e
        mnemonic: fxch
        operand: [ ST0, ST6 ]

      - opcode: 0x0f
        mnemonic: fxch
        operand: [ ST0, ST7 ]

      - opcode: 0x10
        mnemonic: fnop

      - opcode: 0x11
        invalid:

      - opcode: 0x12
        invalid:

      - opcode: 0x13
        invalid:

      - opcode: 0x14
        invalid:

      - opcode: 0x15
        invalid:

      - opcode: 0x16
        invalid:

      - opcode: 0x17
        invalid:

      - opcode: 0x18
        mnemonic: fstp
        operand: [ ST0 ]

      - opcode: 0x19
        mnemonic: fstp
        operand: [ ST1 ]

      - opcode: 0x1a
        mnemonic: fstp
        operand: [ ST2 ]

      - opcode: 0x1b
        mnemonic: fstp
        operand: [ ST3 ]

      - opcode: 0x1c
        mnemonic: fstp
        operand: [ ST4 ]

      - opcode: 0x1d
        mnemonic: fstp
        operand: [ ST5 ]

      - opcode: 0x1e
        mnemonic: fstp
        operand: [ ST6 ]

      - opcode: 0x1f
        mnemonic: fstp
        operand: [ ST7 ]

      - opcode: 0x20
        mnemonic: fchs

      - opcode: 0x21
        mnemonic: fabs

      - opcode: 0x22
        invalid:

      - opcode: 0x23
        invalid:

      - opcode: 0x24
        mnemonic: ftst

      - opcode: 0x25
        mnemonic: fxam

      - opcode: 0x26
        sub_opcodes:
          - invalid:

          - mnemonic: ftstp
            attr: [ cyrix ]

      - opcode: 0x27
        invalid:

      - opcode: 0x28
        mnemonic: fld1

      - opcode: 0x29
        mnemonic: fldl2t

      - opcode: 0x2a
        mnemonic: fldl2e

      - opcode: 0x2b
        mnemonic: fldpi

      - opcode: 0x2c
        mnemonic: fldlg2

      - opcode: 0x2d
        mnemonic: fldln2

      - opcode: 0x2e
        mnemonic: fldz

      - opcode: 0x2f
        invalid:

      - opcode: 0x30
        mnemonic: f2xm1

      - opcode: 0x31
        mnemonic: fyl2x

      - opcode: 0x32
        mnemonic: fptan

      - opcode: 0x33
        mnemonic: fpatan

      - opcode: 0x34
        mnemonic: fxtract

      - opcode: 0x35
        mnemonic: fprem1
        cpu_model: ">= X86_Arch_80387"

      - opcode: 0x36
        mnemonic: fdecstp

      - opcode: 0x37
        mnemonic: fincstp

      - opcode: 0x38
        mnemonic: fprem

      - opcode: 0x39
        mnemonic: fyl2xp1

      - opcode: 0x3a
        mnemonic: fsqrt

      - opcode: 0x3b
        mnemonic: fsincos
        cpu_model: ">= X86_Arch_80387"

      - opcode: 0x3c
        mnemonic: frndint

      - opcode: 0x3d
        mnemonic: fscale

      - opcode: 0x3e
        mnemonic: fsin
        cpu_model: ">= X86_Arch_80387"

      - opcode: 0x3f
        mnemonic: fcos
        cpu_model: ">= X86_Arch_80387"

    table_FP3:
      - opcode: 0x00
        mnemonic: fcmovb
        operand: [ ST0, ST0 ]

      - opcode: 0x01
        mnemonic: fcmovb
        operand: [ ST0, ST1 ]

      - opcode: 0x02
        mnemonic: fcmovb
        operand: [ ST0, ST2 ]

      - opcode: 0x03
        mnemonic: fcmovb
        operand: [ ST0, ST3 ]

      - opcode: 0x04
        mnemonic: fcmovb
        operand: [ ST0, ST4 ]

      - opcode: 0x05
        mnemonic: fcmovb
        operand: [ ST0, ST5 ]

      - opcode: 0x06
        mnemonic: fcmovb
        operand: [ ST0, ST6 ]

      - opcode: 0x07
        mnemonic: fcmovb
        operand: [ ST0, ST7 ]

      - opcode: 0x08
        mnemonic: fcmove
        operand: [ ST0, ST0 ]

      - opcode: 0x09
        mnemonic: fcmove
        operand: [ ST0, ST1 ]

      - opcode: 0x0a
        mnemonic: fcmove
        operand: [ ST0, ST2 ]

      - opcode: 0x0b
        mnemonic: fcmove
        operand: [ ST0, ST3 ]

      - opcode: 0x0c
        mnemonic: fcmove
        operand: [ ST0, ST4 ]

      - opcode: 0x0d
        mnemonic: fcmove
        operand: [ ST0, ST5 ]

      - opcode: 0x0e
        mnemonic: fcmove
        operand: [ ST0, ST6 ]

      - opcode: 0x0f
        mnemonic: fcmove
        operand: [ ST0, ST7 ]

      - opcode: 0x10
        mnemonic: fcmovbe
        operand: [ ST0, ST0 ]

      - opcode: 0x11
        mnemonic: fcmovbe
        operand: [ ST0, ST1 ]

      - opcode: 0x12
        mnemonic: fcmovbe
        operand: [ ST0, ST2 ]

      - opcode: 0x13
        mnemonic: fcmovbe
        operand: [ ST0, ST3 ]

      - opcode: 0x14
        mnemonic: fcmovbe
        operand: [ ST0, ST4 ]

      - opcode: 0x15
        mnemonic: fcmovbe
        operand: [ ST0, ST5 ]

      - opcode: 0x16
        mnemonic: fcmovbe
        operand: [ ST0, ST6 ]

      - opcode: 0x17
        mnemonic: fcmovbe
        operand: [ ST0, ST7 ]

      - opcode: 0x18
        mnemonic: fcmovu
        operand: [ ST0, ST0 ]

      - opcode: 0x19
        mnemonic: fcmovu
        operand: [ ST0, ST1 ]

      - opcode: 0x1a
        mnemonic: fcmovu
        operand: [ ST0, ST2 ]

      - opcode: 0x1b
        mnemonic: fcmovu
        operand: [ ST0, ST3 ]

      - opcode: 0x1c
        mnemonic: fcmovu
        operand: [ ST0, ST4 ]

      - opcode: 0x1d
        mnemonic: fcmovu
        operand: [ ST0, ST5 ]

      - opcode: 0x1e
        mnemonic: fcmovu
        operand: [ ST0, ST6 ]

      - opcode: 0x1f
        mnemonic: fcmovu
        operand: [ ST0, ST7 ]

      - opcode: 0x20
        invalid:

      - opcode: 0x21
        invalid:

      - opcode: 0x22
        invalid:

      - opcode: 0x23
        invalid:

      - opcode: 0x24
        invalid:

      - opcode: 0x25
        invalid:

      - opcode: 0x26
        invalid:

      - opcode: 0x27
        invalid:

      - opcode: 0x28
        invalid:

      - opcode: 0x29
        mnemonic: fucompp
        cpu_model: ">= X86_Arch_80387"

      - opcode: 0x2a
        invalid:

      - opcode: 0x2b
        invalid:

      - opcode: 0x2c
        invalid:

      - opcode: 0x2d
        invalid:

      - opcode: 0x2e
        invalid:

      - opcode: 0x2f
        invalid:

      - opcode: 0x30
        invalid:

      - opcode: 0x31
        invalid:

      - opcode: 0x32
        invalid:

      - opcode: 0x33
        invalid:

      - opcode: 0x34
        invalid:

      - opcode: 0x35
        invalid:

      - opcode: 0x36
        invalid:

      - opcode: 0x37
        invalid:

      - opcode: 0x38
        invalid:

      - opcode: 0x39
        invalid:

      - opcode: 0x3a
        invalid:

      - opcode: 0x3b
        invalid:

      - opcode: 0x3c
        invalid:

      - opcode: 0x3d
        invalid:

      - opcode: 0x3e
        invalid:

      - opcode: 0x3f
        invalid:

    table_FP4:
      - opcode: 0x00
        mnemonic: fcmovnb
        operand: [ ST0, ST0 ]

      - opcode: 0x01
        mnemonic: fcmovnb
        operand: [ ST0, ST1 ]

      - opcode: 0x02
        mnemonic: fcmovnb
        operand: [ ST0, ST2 ]

      - opcode: 0x03
        mnemonic: fcmovnb
        operand: [ ST0, ST3 ]

      - opcode: 0x04
        mnemonic: fcmovnb
        operand: [ ST0, ST4 ]

      - opcode: 0x05
        mnemonic: fcmovnb
        operand: [ ST0, ST5 ]

      - opcode: 0x06
        mnemonic: fcmovnb
        operand: [ ST0, ST6 ]

      - opcode: 0x07
        mnemonic: fcmovnb
        operand: [ ST0, ST7 ]

      - opcode: 0x08
        mnemonic: fcmovne
        operand: [ ST0, ST0 ]

      - opcode: 0x09
        mnemonic: fcmovne
        operand: [ ST0, ST1 ]

      - opcode: 0x0a
        mnemonic: fcmovne
        operand: [ ST0, ST2 ]

      - opcode: 0x0b
        mnemonic: fcmovne
        operand: [ ST0, ST3 ]

      - opcode: 0x0c
        mnemonic: fcmovne
        operand: [ ST0, ST4 ]

      - opcode: 0x0d
        mnemonic: fcmovne
        operand: [ ST0, ST5 ]

      - opcode: 0x0e
        mnemonic: fcmovne
        operand: [ ST0, ST6 ]

      - opcode: 0x0f
        mnemonic: fcmovne
        operand: [ ST0, ST7 ]

      - opcode: 0x10
        mnemonic: fcmovnbe
        operand: [ ST0, ST0 ]

      - opcode: 0x11
        mnemonic: fcmovnbe
        operand: [ ST0, ST1 ]

      - opcode: 0x12
        mnemonic: fcmovnbe
        operand: [ ST0, ST2 ]

      - opcode: 0x13
        mnemonic: fcmovnbe
        operand: [ ST0, ST3 ]

      - opcode: 0x14
        mnemonic: fcmovnbe
        operand: [ ST0, ST4 ]

      - opcode: 0x15
        mnemonic: fcmovnbe
        operand: [ ST0, ST5 ]

      - opcode: 0x16
        mnemonic: fcmovnbe
        operand: [ ST0, ST6 ]

      - opcode: 0x17
        mnemonic: fcmovnbe
        operand: [ ST0, ST7 ]

      - opcode: 0x18
        mnemonic: fcmovnu
        operand: [ ST0, ST0 ]

      - opcode: 0x19
        mnemonic: fcmovnu
        operand: [ ST0, ST1 ]

      - opcode: 0x1a
        mnemonic: fcmovnu
        operand: [ ST0, ST2 ]

      - opcode: 0x1b
        mnemonic: fcmovnu
        operand: [ ST0, ST3 ]

      - opcode: 0x1c
        mnemonic: fcmovnu
        operand: [ ST0, ST4 ]

      - opcode: 0x1d
        mnemonic: fcmovnu
        operand: [ ST0, ST5 ]

      - opcode: 0x1e
        mnemonic: fcmovnu
        operand: [ ST0, ST6 ]

      - opcode: 0x1f
        mnemonic: fcmovnu
        operand: [ ST0, ST7 ]

      - opcode: 0x20
        sub_opcodes:
          - invalid:

          - mnemonic: fneni
            cpu_model: "== X86_Arch_8087"

      - opcode: 0x21
        sub_opcodes:
          - invalid:

          - mnemonic: fndisi
            cpu_model: "== X86_Arch_8087"

      - opcode: 0x22
        mnemonic: fnclex

      - opcode: 0x23
        mnemonic: fninit
        # FIXME:
        # FNINIT/FINIT:
        #  FPUControlWord<--037FH;
        #  FPUStatusWord<--0;
        #  FPUTagWord<--FFFFH;
        #  FPUDataPointer<--0;
        #  FPUInstructionPointer<--0;
        #  FPULastInstructionOpcode<--0;
        semantic: [ program.id = program.id ]

      - opcode: 0x24
        sub_opcodes:
          - invalid:

          - mnemonic: fnsetpm
            cpu_model: "== X86_Arch_80287"

      - opcode: 0x25
        sub_opcodes:
          - invalid:

          - mnemonic: frstpm
            cpu_model: "== X86_Arch_80287xl"

      - opcode: 0x26
        invalid:

      - opcode: 0x27
        invalid:

      - opcode: 0x28
        sub_opcodes:
          - mnemonic: fucomi
            operand: [ ST0, ST0 ]

          - mnemonic: fsbp0
            attr: [ iit ]

      - opcode: 0x29
        mnemonic: fucomi
        operand: [ ST0, ST1 ]

      - opcode: 0x2a
        sub_opcodes:
          - mnemonic: fucomi
            operand: [ ST0, ST2 ]

          - mnemonic: fsbp2
            attr: [ iit ]

      - opcode: 0x2b
        sub_opcodes:
          - mnemonic: fucomi
            operand: [ ST0, ST3 ]

          - mnemonic: fsbp1
            attr: [ iit ]

      - opcode: 0x2c
        mnemonic: fucomi
        operand: [ ST0, ST4 ]

      - opcode: 0x2d
        mnemonic: fucomi
        operand: [ ST0, ST5 ]

      - opcode: 0x2e
        mnemonic: fucomi
        operand: [ ST0, ST6 ]

      - opcode: 0x2f
        mnemonic: fucomi
        operand: [ ST0, ST7 ]

      - opcode: 0x30
        mnemonic: fcomi
        operand: [ ST0, ST0 ]

      - opcode: 0x31
        sub_opcodes:
          - mnemonic: fcomi
            operand: [ ST0, ST1 ]

          - mnemonic: f4x4
            attr: [ iit ]

      - opcode: 0x32
        mnemonic: fcomi
        operand: [ ST0, ST2 ]

      - opcode: 0x33
        mnemonic: fcomi
        operand: [ ST0, ST3 ]

      - opcode: 0x34
        mnemonic: fcomi
        operand: [ ST0, ST4 ]

      - opcode: 0x35
        mnemonic: fcomi
        operand: [ ST0, ST5 ]

      - opcode: 0x36
        mnemonic: fcomi
        operand: [ ST0, ST6 ]

      - opcode: 0x37
        mnemonic: fcomi
        operand: [ ST0, ST7 ]

      - opcode: 0x38
        sub_opcodes:
          - invalid:

          - mnemonic: frint2
            attr: [ cyrix ]

      - opcode: 0x39
        invalid:

      - opcode: 0x3a
        invalid:

      - opcode: 0x3b
        invalid:

      - opcode: 0x3c
        invalid:

      - opcode: 0x3d
        invalid:

      - opcode: 0x3e
        invalid:

      - opcode: 0x3f
        invalid:

    table_FP5:
      - opcode: 0x00
        mnemonic: fadd
        operand: [ ST0, ST0 ]

      - opcode: 0x01
        mnemonic: fadd
        operand: [ ST1, ST0 ]

      - opcode: 0x02
        mnemonic: fadd
        operand: [ ST2, ST0 ]

      - opcode: 0x03
        mnemonic: fadd
        operand: [ ST3, ST0 ]

      - opcode: 0x04
        mnemonic: fadd
        operand: [ ST4, ST0 ]

      - opcode: 0x05
        mnemonic: fadd
        operand: [ ST5, ST0 ]

      - opcode: 0x06
        mnemonic: fadd
        operand: [ ST6, ST0 ]

      - opcode: 0x07
        mnemonic: fadd
        operand: [ ST7, ST0 ]

      - opcode: 0x08
        mnemonic: fmul
        operand: [ ST0, ST0 ]

      - opcode: 0x09
        mnemonic: fmul
        operand: [ ST1, ST0 ]

      - opcode: 0x0a
        mnemonic: fmul
        operand: [ ST2, ST0 ]

      - opcode: 0x0b
        mnemonic: fmul
        operand: [ ST3, ST0 ]

      - opcode: 0x0c
        mnemonic: fmul
        operand: [ ST4, ST0 ]

      - opcode: 0x0d
        mnemonic: fmul
        operand: [ ST5, ST0 ]

      - opcode: 0x0e
        mnemonic: fmul
        operand: [ ST6, ST0 ]

      - opcode: 0x0f
        mnemonic: fmul
        operand: [ ST7, ST0 ]

      - opcode: 0x10
        mnemonic: fcom
        operand: [ ST0 ]

      - opcode: 0x11
        mnemonic: fcom
        operand: [ ST1 ]

      - opcode: 0x12
        mnemonic: fcom
        operand: [ ST2 ]

      - opcode: 0x13
        mnemonic: fcom
        operand: [ ST3 ]

      - opcode: 0x14
        mnemonic: fcom
        operand: [ ST4 ]

      - opcode: 0x15
        mnemonic: fcom
        operand: [ ST5 ]

      - opcode: 0x16
        mnemonic: fcom
        operand: [ ST6 ]

      - opcode: 0x17
        mnemonic: fcom
        operand: [ ST7 ]

      - opcode: 0x18
        mnemonic: fcomp
        operand: [ ST0 ]

      - opcode: 0x19
        mnemonic: fcomp
        operand: [ ST1 ]

      - opcode: 0x1a
        mnemonic: fcomp
        operand: [ ST2 ]

      - opcode: 0x1b
        mnemonic: fcomp
        operand: [ ST3 ]

      - opcode: 0x1c
        mnemonic: fcomp
        operand: [ ST4 ]

      - opcode: 0x1d
        mnemonic: fcomp
        operand: [ ST5 ]

      - opcode: 0x1e
        mnemonic: fcomp
        operand: [ ST6 ]

      - opcode: 0x1f
        mnemonic: fcomp
        operand: [ ST7 ]

      - opcode: 0x20
        mnemonic: fsubr
        operand: [ ST0, ST0 ]

      - opcode: 0x21
        mnemonic: fsubr
        operand: [ ST1, ST0 ]

      - opcode: 0x22
        mnemonic: fsubr
        operand: [ ST2, ST0 ]

      - opcode: 0x23
        mnemonic: fsubr
        operand: [ ST3, ST0 ]

      - opcode: 0x24
        mnemonic: fsubr
        operand: [ ST4, ST0 ]

      - opcode: 0x25
        mnemonic: fsubr
        operand: [ ST5, ST0 ]

      - opcode: 0x26
        mnemonic: fsubr
        operand: [ ST6, ST0 ]

      - opcode: 0x27
        mnemonic: fsubr
        operand: [ ST7, ST0 ]

      - opcode: 0x28
        mnemonic: fsub
        operand: [ ST0, ST0 ]

      - opcode: 0x29
        mnemonic: fsub
        operand: [ ST1, ST0 ]

      - opcode: 0x2a
        mnemonic: fsub
        operand: [ ST2, ST0 ]

      - opcode: 0x2b
        mnemonic: fsub
        operand: [ ST3, ST0 ]

      - opcode: 0x2c
        mnemonic: fsub
        operand: [ ST4, ST0 ]

      - opcode: 0x2d
        mnemonic: fsub
        operand: [ ST5, ST0 ]

      - opcode: 0x2e
        mnemonic: fsub
        operand: [ ST6, ST0 ]

      - opcode: 0x2f
        mnemonic: fsub
        operand: [ ST7, ST0 ]

      - opcode: 0x30
        mnemonic: fdivr
        operand: [ ST0, ST0 ]

      - opcode: 0x31
        mnemonic: fdivr
        operand: [ ST1, ST0 ]

      - opcode: 0x32
        mnemonic: fdivr
        operand: [ ST2, ST0 ]

      - opcode: 0x33
        mnemonic: fdivr
        operand: [ ST3, ST0 ]

      - opcode: 0x34
        mnemonic: fdivr
        operand: [ ST4, ST0 ]

      - opcode: 0x35
        mnemonic: fdivr
        operand: [ ST5, ST0 ]

      - opcode: 0x36
        mnemonic: fdivr
        operand: [ ST6, ST0 ]

      - opcode: 0x37
        mnemonic: fdivr
        operand: [ ST7, ST0 ]

      - opcode: 0x38
        mnemonic: fdiv
        operand: [ ST0, ST0 ]

      - opcode: 0x39
        mnemonic: fdiv
        operand: [ ST1, ST0 ]

      - opcode: 0x3a
        mnemonic: fdiv
        operand: [ ST2, ST0 ]

      - opcode: 0x3b
        mnemonic: fdiv
        operand: [ ST3, ST0 ]

      - opcode: 0x3c
        mnemonic: fdiv
        operand: [ ST4, ST0 ]

      - opcode: 0x3d
        mnemonic: fdiv
        operand: [ ST5, ST0 ]

      - opcode: 0x3e
        mnemonic: fdiv
        operand: [ ST6, ST0 ]

      - opcode: 0x3f
        mnemonic: fdiv
        operand: [ ST7, ST0 ]

    table_FP6:
      - opcode: 0x00
        mnemonic: ffree
        operand: [ ST0 ]

      - opcode: 0x01
        mnemonic: ffree
        operand: [ ST1 ]

      - opcode: 0x02
        mnemonic: ffree
        operand: [ ST2 ]

      - opcode: 0x03
        mnemonic: ffree
        operand: [ ST3 ]

      - opcode: 0x04
        mnemonic: ffree
        operand: [ ST4 ]

      - opcode: 0x05
        mnemonic: ffree
        operand: [ ST5 ]

      - opcode: 0x06
        mnemonic: ffree
        operand: [ ST6 ]

      - opcode: 0x07
        mnemonic: ffree
        operand: [ ST7 ]

      - opcode: 0x08
        mnemonic: fxch
        operand: [ ST0 ]

      - opcode: 0x09
        mnemonic: fxch
        operand: [ ST1 ]

      - opcode: 0x0a
        mnemonic: fxch
        operand: [ ST2 ]

      - opcode: 0x0b
        mnemonic: fxch
        operand: [ ST3 ]

      - opcode: 0x0c
        mnemonic: fxch
        operand: [ ST4 ]

      - opcode: 0x0d
        mnemonic: fxch
        operand: [ ST5 ]

      - opcode: 0x0e
        mnemonic: fxch
        operand: [ ST6 ]

      - opcode: 0x0f
        mnemonic: fxch
        operand: [ ST7 ]

      - opcode: 0x10
        mnemonic: fst
        operand: [ ST0 ]

      - opcode: 0x11
        mnemonic: fst
        operand: [ ST1 ]

      - opcode: 0x12
        mnemonic: fst
        operand: [ ST2 ]

      - opcode: 0x13
        mnemonic: fst
        operand: [ ST3 ]

      - opcode: 0x14
        mnemonic: fst
        operand: [ ST4 ]

      - opcode: 0x15
        mnemonic: fst
        operand: [ ST5 ]

      - opcode: 0x16
        mnemonic: fst
        operand: [ ST6 ]

      - opcode: 0x17
        mnemonic: fst
        operand: [ ST7 ]

      - opcode: 0x18
        mnemonic: fstp
        operand: [ ST0 ]

      - opcode: 0x19
        mnemonic: fstp
        operand: [ ST1 ]

      - opcode: 0x1a
        mnemonic: fstp
        operand: [ ST2 ]

      - opcode: 0x1b
        mnemonic: fstp
        operand: [ ST3 ]

      - opcode: 0x1c
        mnemonic: fstp
        operand: [ ST4 ]

      - opcode: 0x1d
        mnemonic: fstp
        operand: [ ST5 ]

      - opcode: 0x1e
        mnemonic: fstp
        operand: [ ST6 ]

      - opcode: 0x1f
        mnemonic: fstp
        operand: [ ST7 ]

      - opcode: 0x20
        mnemonic: fucom
        operand: [ ST0, ST0 ]
        cpu_model: ">= X86_Arch_80387"

      - opcode: 0x21
        mnemonic: fucom
        operand: [ ST1, ST0 ]
        cpu_model: ">= X86_Arch_80387"

      - opcode: 0x22
        mnemonic: fucom
        operand: [ ST2, ST0 ]
        cpu_model: ">= X86_Arch_80387"

      - opcode: 0x23
        mnemonic: fucom
        operand: [ ST3, ST0 ]
        cpu_model: ">= X86_Arch_80387"

      - opcode: 0x24
        mnemonic: fucom
        operand: [ ST4, ST0 ]
        cpu_model: ">= X86_Arch_80387"

      - opcode: 0x25
        mnemonic: fucom
        operand: [ ST5, ST0 ]
        cpu_model: ">= X86_Arch_80387"

      - opcode: 0x26
        mnemonic: fucom
        operand: [ ST6, ST0 ]
        cpu_model: ">= X86_Arch_80387"

      - opcode: 0x27
        mnemonic: fucom
        operand: [ ST7, ST0 ]
        cpu_model: ">= X86_Arch_80387"

      - opcode: 0x28
        mnemonic: fucomp
        operand: [ ST0 ]
        cpu_model: ">= X86_Arch_80387"

      - opcode: 0x29
        mnemonic: fucomp
        operand: [ ST1 ]
        cpu_model: ">= X86_Arch_80387"

      - opcode: 0x2a
        mnemonic: fucomp
        operand: [ ST2 ]
        cpu_model: ">= X86_Arch_80387"

      - opcode: 0x2b
        mnemonic: fucomp
        operand: [ ST3 ]
        cpu_model: ">= X86_Arch_80387"

      - opcode: 0x2c
        mnemonic: fucomp
        operand: [ ST4 ]
        cpu_model: ">= X86_Arch_80387"

      - opcode: 0x2d
        mnemonic: fucomp
        operand: [ ST5 ]
        cpu_model: ">= X86_Arch_80387"

      - opcode: 0x2e
        mnemonic: fucomp
        operand: [ ST6 ]
        cpu_model: ">= X86_Arch_80387"

      - opcode: 0x2f
        mnemonic: fucomp
        operand: [ ST7 ]
        cpu_model: ">= X86_Arch_80387"

      - opcode: 0x30
        invalid:

      - opcode: 0x31
        invalid:

      - opcode: 0x32
        invalid:

      - opcode: 0x33
        invalid:

      - opcode: 0x34
        invalid:

      - opcode: 0x35
        invalid:

      - opcode: 0x36
        invalid:

      - opcode: 0x37
        invalid:

      - opcode: 0x38
        invalid:

      - opcode: 0x39
        invalid:

      - opcode: 0x3a
        invalid:

      - opcode: 0x3b
        invalid:

      - opcode: 0x3c
        sub_opcodes:
          - invalid:

          - mnemonic: frichop
            attr: [ cyrix ]

      - opcode: 0x3d
        invalid:

      - opcode: 0x3e
        invalid:

      - opcode: 0x3f
        invalid:

    table_FP7:
      - opcode: 0x00
        mnemonic: faddp
        operand: [ ST0, ST0 ]

      - opcode: 0x01
        mnemonic: faddp
        operand: [ ST1, ST0 ]

      - opcode: 0x02
        mnemonic: faddp
        operand: [ ST2, ST0 ]

      - opcode: 0x03
        mnemonic: faddp
        operand: [ ST3, ST0 ]

      - opcode: 0x04
        mnemonic: faddp
        operand: [ ST4, ST0 ]

      - opcode: 0x05
        mnemonic: faddp
        operand: [ ST5, ST0 ]

      - opcode: 0x06
        mnemonic: faddp
        operand: [ ST6, ST0 ]

      - opcode: 0x07
        mnemonic: faddp
        operand: [ ST7, ST0 ]

      - opcode: 0x08
        mnemonic: fmulp
        operand: [ ST0, ST0 ]

      - opcode: 0x09
        mnemonic: fmulp
        operand: [ ST1, ST0 ]

      - opcode: 0x0a
        mnemonic: fmulp
        operand: [ ST2, ST0 ]

      - opcode: 0x0b
        mnemonic: fmulp
        operand: [ ST3, ST0 ]

      - opcode: 0x0c
        mnemonic: fmulp
        operand: [ ST4, ST0 ]

      - opcode: 0x0d
        mnemonic: fmulp
        operand: [ ST5, ST0 ]

      - opcode: 0x0e
        mnemonic: fmulp
        operand: [ ST6, ST0 ]

      - opcode: 0x0f
        mnemonic: fmulp
        operand: [ ST7, ST0 ]

      - opcode: 0x10
        mnemonic: fcomp
        operand: [ ST0 ]

      - opcode: 0x11
        mnemonic: fcomp
        operand: [ ST1 ]

      - opcode: 0x12
        mnemonic: fcomp
        operand: [ ST2 ]

      - opcode: 0x13
        mnemonic: fcomp
        operand: [ ST3 ]

      - opcode: 0x14
        mnemonic: fcomp
        operand: [ ST4 ]

      - opcode: 0x15
        mnemonic: fcomp
        operand: [ ST5 ]

      - opcode: 0x16
        mnemonic: fcomp
        operand: [ ST6 ]

      - opcode: 0x17
        mnemonic: fcomp
        operand: [ ST7 ]

      - opcode: 0x18
        invalid:

      - opcode: 0x19
        mnemonic: fcompp

      - opcode: 0x1a
        invalid:

      - opcode: 0x1b
        invalid:

      - opcode: 0x1c
        invalid:

      - opcode: 0x1d
        invalid:

      - opcode: 0x1e
        invalid:

      - opcode: 0x1f
        invalid:

      - opcode: 0x20
        mnemonic: fsubrp
        operand: [ ST0, ST0 ]

      - opcode: 0x21
        mnemonic: fsubrp
        operand: [ ST1, ST0 ]

      - opcode: 0x22
        mnemonic: fsubrp
        operand: [ ST2, ST0 ]

      - opcode: 0x23
        mnemonic: fsubrp
        operand: [ ST3, ST0 ]

      - opcode: 0x24
        mnemonic: fsubrp
        operand: [ ST4, ST0 ]

      - opcode: 0x25
        mnemonic: fsubrp
        operand: [ ST5, ST0 ]

      - opcode: 0x26
        mnemonic: fsubrp
        operand: [ ST6, ST0 ]

      - opcode: 0x27
        mnemonic: fsubrp
        operand: [ ST7, ST0 ]

      - opcode: 0x28
        mnemonic: fsubp
        operand: [ ST0, ST0 ]

      - opcode: 0x29
        mnemonic: fsubp
        operand: [ ST1, ST0 ]

      - opcode: 0x2a
        mnemonic: fsubp
        operand: [ ST2, ST0 ]

      - opcode: 0x2b
        mnemonic: fsubp
        operand: [ ST3, ST0 ]

      - opcode: 0x2c
        mnemonic: fsubp
        operand: [ ST4, ST0 ]

      - opcode: 0x2d
        mnemonic: fsubp
        operand: [ ST5, ST0 ]

      - opcode: 0x2e
        mnemonic: fsubp
        operand: [ ST6, ST0 ]

      - opcode: 0x2f
        mnemonic: fsubp
        operand: [ ST7, ST0 ]

      - opcode: 0x30
        mnemonic: fdivrp
        operand: [ ST0, ST0 ]

      - opcode: 0x31
        mnemonic: fdivrp
        operand: [ ST1, ST0 ]

      - opcode: 0x32
        mnemonic: fdivrp
        operand: [ ST2, ST0 ]

      - opcode: 0x33
        mnemonic: fdivrp
        operand: [ ST3, ST0 ]

      - opcode: 0x34
        mnemonic: fdivrp
        operand: [ ST4, ST0 ]

      - opcode: 0x35
        mnemonic: fdivrp
        operand: [ ST5, ST0 ]

      - opcode: 0x36
        mnemonic: fdivrp
        operand: [ ST6, ST0 ]

      - opcode: 0x37
        mnemonic: fdivrp
        operand: [ ST7, ST0 ]

      - opcode: 0x38
        mnemonic: fdivp
        operand: [ ST0, ST0 ]

      - opcode: 0x39
        mnemonic: fdivp
        operand: [ ST1, ST0 ]

      - opcode: 0x3a
        mnemonic: fdivp
        operand: [ ST2, ST0 ]

      - opcode: 0x3b
        mnemonic: fdivp
        operand: [ ST3, ST0 ]

      - opcode: 0x3c
        mnemonic: fdivp
        operand: [ ST4, ST0 ]

      - opcode: 0x3d
        mnemonic: fdivp
        operand: [ ST5, ST0 ]

      - opcode: 0x3e
        mnemonic: fdivp
        operand: [ ST6, ST0 ]

      - opcode: 0x3f
        mnemonic: fdivp
        operand: [ ST7, ST0 ]

    table_FP8:
      - opcode: 0x00
        mnemonic: ffreep
        operand: [ ST0 ]

      - opcode: 0x01
        mnemonic: ffreep
        operand: [ ST1 ]

      - opcode: 0x02
        mnemonic: ffreep
        operand: [ ST2 ]

      - opcode: 0x03
        mnemonic: ffreep
        operand: [ ST3 ]

      - opcode: 0x04
        mnemonic: ffreep
        operand: [ ST4 ]

      - opcode: 0x05
        mnemonic: ffreep
        operand: [ ST5 ]

      - opcode: 0x06
        mnemonic: ffreep
        operand: [ ST6 ]

      - opcode: 0x07
        mnemonic: ffreep
        operand: [ ST7 ]

      - opcode: 0x08
        mnemonic: fxch
        operand: [ ST0 ]

      - opcode: 0x09
        mnemonic: fxch
        operand: [ ST1 ]

      - opcode: 0x0a
        mnemonic: fxch
        operand: [ ST2 ]

      - opcode: 0x0b
        mnemonic: fxch
        operand: [ ST3 ]

      - opcode: 0x0c
        mnemonic: fxch
        operand: [ ST4 ]

      - opcode: 0x0d
        mnemonic: fxch
        operand: [ ST5 ]

      - opcode: 0x0e
        mnemonic: fxch
        operand: [ ST6 ]

      - opcode: 0x0f
        mnemonic: fxch
        operand: [ ST7 ]

      - opcode: 0x10
        mnemonic: fstp
        operand: [ ST0 ]

      - opcode: 0x11
        mnemonic: fstp
        operand: [ ST1 ]

      - opcode: 0x12
        mnemonic: fstp
        operand: [ ST2 ]

      - opcode: 0x13
        mnemonic: fstp
        operand: [ ST3 ]

      - opcode: 0x14
        mnemonic: fstp
        operand: [ ST4 ]

      - opcode: 0x15
        mnemonic: fstp
        operand: [ ST5 ]

      - opcode: 0x16
        mnemonic: fstp
        operand: [ ST6 ]

      - opcode: 0x17
        mnemonic: fstp
        operand: [ ST7 ]

      - opcode: 0x18
        mnemonic: fstp
        operand: [ ST0 ]

      - opcode: 0x19
        mnemonic: fstp
        operand: [ ST1 ]

      - opcode: 0x1a
        mnemonic: fstp
        operand: [ ST2 ]

      - opcode: 0x1b
        mnemonic: fstp
        operand: [ ST3 ]

      - opcode: 0x1c
        mnemonic: fstp
        operand: [ ST4 ]

      - opcode: 0x1d
        mnemonic: fstp
        operand: [ ST5 ]

      - opcode: 0x1e
        mnemonic: fstp
        operand: [ ST6 ]

      - opcode: 0x1f
        mnemonic: fstp
        operand: [ ST7 ]

      - opcode: 0x20
        mnemonic: fnstsw
        operand: [ AX ]
        cpu_model: ">= X86_Arch_80287"

      - opcode: 0x21
        sub_opcodes:
          - invalid:

          - mnemonic: fstdw
            operand: [ AX ]
            cpu_model: "== X86_Arch_80387sl"

      - opcode: 0x22
        sub_opcodes:
          - invalid:

          - mnemonic: fstsg
            operand: [ AX ]
            cpu_model: "== X86_Arch_80387sl"

      - opcode: 0x23
        invalid:

      - opcode: 0x24
        invalid:

      - opcode: 0x25
        invalid:

      - opcode: 0x26
        invalid:

      - opcode: 0x27
        invalid:

      - opcode: 0x28
        mnemonic: fucomip
        operand: [ ST0, ST0 ]

      - opcode: 0x29
        mnemonic: fucomip
        operand: [ ST0, ST1 ]

      - opcode: 0x2a
        mnemonic: fucomip
        operand: [ ST0, ST2 ]

      - opcode: 0x2b
        mnemonic: fucomip
        operand: [ ST0, ST3 ]

      - opcode: 0x2c
        mnemonic: fucomip
        operand: [ ST0, ST4 ]

      - opcode: 0x2d
        mnemonic: fucomip
        operand: [ ST0, ST5 ]

      - opcode: 0x2e
        mnemonic: fucomip
        operand: [ ST0, ST6 ]

      - opcode: 0x2f
        mnemonic: fucomip
        operand: [ ST0, ST7 ]

      - opcode: 0x30
        mnemonic: fcomip
        operand: [ ST0, ST0 ]

      - opcode: 0x31
        mnemonic: fcomip
        operand: [ ST0, ST1 ]

      - opcode: 0x32
        mnemonic: fcomip
        operand: [ ST0, ST2 ]

      - opcode: 0x33
        mnemonic: fcomip
        operand: [ ST0, ST3 ]

      - opcode: 0x34
        mnemonic: fcomip
        operand: [ ST0, ST4 ]

      - opcode: 0x35
        mnemonic: fcomip
        operand: [ ST0, ST5 ]

      - opcode: 0x36
        mnemonic: fcomip
        operand: [ ST0, ST6 ]

      - opcode: 0x37
        mnemonic: fcomip
        operand: [ ST0, ST7 ]

      - opcode: 0x38
        invalid:

      - opcode: 0x39
        invalid:

      - opcode: 0x3a
        invalid:

      - opcode: 0x3b
        invalid:

      - opcode: 0x3c
        sub_opcodes:
          - invalid:

          - mnemonic: frinear
            attr: [ cyrix ]

      - opcode: 0x3d
        invalid:

      - opcode: 0x3e
        invalid:

      - opcode: 0x3f
        invalid:

    table_sse5a:
      - opcode: 0x00
        invalid:

      - opcode: 0x01
        invalid:

      - opcode: 0x02
        invalid:

      - opcode: 0x03
        invalid:

      - opcode: 0x04
        invalid:

      - opcode: 0x05
        invalid:

      - opcode: 0x06
        invalid:

      - opcode: 0x07
        invalid:

      - opcode: 0x08
        invalid:

      - opcode: 0x09
        invalid:

      - opcode: 0x0a
        invalid:

      - opcode: 0x0b
        invalid:

      - opcode: 0x0c
        invalid:

      - opcode: 0x0d
        invalid:

      - opcode: 0x0e
        invalid:

      - opcode: 0x0f
        invalid:

      - opcode: 0x10
        invalid:

      - opcode: 0x11
        invalid:

      - opcode: 0x12
        invalid:

      - opcode: 0x13
        invalid:

      - opcode: 0x14
        invalid:

      - opcode: 0x15
        invalid:

      - opcode: 0x16
        invalid:

      - opcode: 0x17
        invalid:

      - opcode: 0x18
        invalid:

      - opcode: 0x19
        invalid:

      - opcode: 0x1a
        invalid:

      - opcode: 0x1b
        invalid:

      - opcode: 0x1c
        invalid:

      - opcode: 0x1d
        invalid:

      - opcode: 0x1e
        invalid:

      - opcode: 0x1f
        invalid:

      - opcode: 0x20
        invalid:

      - opcode: 0x21
        invalid:

      - opcode: 0x22
        invalid:

      - opcode: 0x23
        invalid:

      - opcode: 0x24
        invalid:

      - opcode: 0x25
        invalid:

      - opcode: 0x26
        invalid:

      - opcode: 0x27
        invalid:

      - opcode: 0x28
        invalid:

      - opcode: 0x29
        invalid:

      - opcode: 0x2a
        invalid:

      - opcode: 0x2b
        invalid:

      - opcode: 0x2c
        invalid:

      - opcode: 0x2d
        invalid:

      - opcode: 0x2e
        invalid:

      - opcode: 0x2f
        invalid:

      - opcode: 0x30
        invalid:

      - opcode: 0x31
        invalid:

      - opcode: 0x32
        invalid:

      - opcode: 0x33
        invalid:

      - opcode: 0x34
        invalid:

      - opcode: 0x35
        invalid:

      - opcode: 0x36
        invalid:

      - opcode: 0x37
        invalid:

      - opcode: 0x38
        invalid:

      - opcode: 0x39
        invalid:

      - opcode: 0x3a
        invalid:

      - opcode: 0x3b
        invalid:

      - opcode: 0x3c
        invalid:

      - opcode: 0x3d
        invalid:

      - opcode: 0x3e
        invalid:

      - opcode: 0x3f
        invalid:

      - opcode: 0x40
        invalid:

      - opcode: 0x41
        invalid:

      - opcode: 0x42
        invalid:

      - opcode: 0x43
        invalid:

      - opcode: 0x44
        invalid:

      - opcode: 0x45
        invalid:

      - opcode: 0x46
        invalid:

      - opcode: 0x47
        invalid:

      - opcode: 0x48
        invalid:

      - opcode: 0x49
        invalid:

      - opcode: 0x4a
        invalid:

      - opcode: 0x4b
        invalid:

      - opcode: 0x4c
        invalid:

      - opcode: 0x4d
        invalid:

      - opcode: 0x4e
        invalid:

      - opcode: 0x4f
        invalid:

      - opcode: 0x50
        invalid:

      - opcode: 0x51
        invalid:

      - opcode: 0x52
        invalid:

      - opcode: 0x53
        invalid:

      - opcode: 0x54
        invalid:

      - opcode: 0x55
        invalid:

      - opcode: 0x56
        invalid:

      - opcode: 0x57
        invalid:

      - opcode: 0x58
        invalid:

      - opcode: 0x59
        invalid:

      - opcode: 0x5a
        invalid:

      - opcode: 0x5b
        invalid:

      - opcode: 0x5c
        invalid:

      - opcode: 0x5d
        invalid:

      - opcode: 0x5e
        invalid:

      - opcode: 0x5f
        invalid:

      - opcode: 0x60
        invalid:

      - opcode: 0x61
        invalid:

      - opcode: 0x62
        invalid:

      - opcode: 0x63
        invalid:

      - opcode: 0x64
        invalid:

      - opcode: 0x65
        invalid:

      - opcode: 0x66
        invalid:

      - opcode: 0x67
        invalid:

      - opcode: 0x68
        invalid:

      - opcode: 0x69
        invalid:

      - opcode: 0x6a
        invalid:

      - opcode: 0x6b
        invalid:

      - opcode: 0x6c
        invalid:

      - opcode: 0x6d
        invalid:

      - opcode: 0x6e
        invalid:

      - opcode: 0x6f
        invalid:

      - opcode: 0x70
        invalid:

      - opcode: 0x71
        invalid:

      - opcode: 0x72
        invalid:

      - opcode: 0x73
        invalid:

      - opcode: 0x74
        invalid:

      - opcode: 0x75
        invalid:

      - opcode: 0x76
        invalid:

      - opcode: 0x77
        invalid:

      - opcode: 0x78
        invalid:

      - opcode: 0x79
        invalid:

      - opcode: 0x7a
        invalid:

      - opcode: 0x7b
        invalid:

      - opcode: 0x7c
        invalid:

      - opcode: 0x7d
        invalid:

      - opcode: 0x7e
        invalid:

      - opcode: 0x7f
        invalid:

      - opcode: 0x80
        invalid:

      - opcode: 0x81
        invalid:

      - opcode: 0x82
        invalid:

      - opcode: 0x83
        invalid:

      - opcode: 0x84
        invalid:

      - opcode: 0x85
        invalid:

      - opcode: 0x86
        invalid:

      - opcode: 0x87
        invalid:

      - opcode: 0x88
        invalid:

      - opcode: 0x89
        invalid:

      - opcode: 0x8a
        invalid:

      - opcode: 0x8b
        invalid:

      - opcode: 0x8c
        invalid:

      - opcode: 0x8d
        invalid:

      - opcode: 0x8e
        invalid:

      - opcode: 0x8f
        invalid:

      - opcode: 0x90
        invalid:

      - opcode: 0x91
        invalid:

      - opcode: 0x92
        invalid:

      - opcode: 0x93
        invalid:

      - opcode: 0x94
        invalid:

      - opcode: 0x95
        invalid:

      - opcode: 0x96
        invalid:

      - opcode: 0x97
        invalid:

      - opcode: 0x98
        invalid:

      - opcode: 0x99
        invalid:

      - opcode: 0x9a
        invalid:

      - opcode: 0x9b
        invalid:

      - opcode: 0x9c
        invalid:

      - opcode: 0x9d
        invalid:

      - opcode: 0x9e
        invalid:

      - opcode: 0x9f
        invalid:

      - opcode: 0xa0
        invalid:

      - opcode: 0xa1
        invalid:

      - opcode: 0xa2
        invalid:

      - opcode: 0xa3
        invalid:

      - opcode: 0xa4
        invalid:

      - opcode: 0xa5
        invalid:

      - opcode: 0xa6
        invalid:

      - opcode: 0xa7
        invalid:

      - opcode: 0xa8
        invalid:

      - opcode: 0xa9
        invalid:

      - opcode: 0xaa
        invalid:

      - opcode: 0xab
        invalid:

      - opcode: 0xac
        invalid:

      - opcode: 0xad
        invalid:

      - opcode: 0xae
        invalid:

      - opcode: 0xaf
        invalid:

      - opcode: 0xb0
        invalid:

      - opcode: 0xb1
        invalid:

      - opcode: 0xb2
        invalid:

      - opcode: 0xb3
        invalid:

      - opcode: 0xb4
        invalid:

      - opcode: 0xb5
        invalid:

      - opcode: 0xb6
        invalid:

      - opcode: 0xb7
        invalid:

      - opcode: 0xb8
        invalid:

      - opcode: 0xb9
        invalid:

      - opcode: 0xba
        invalid:

      - opcode: 0xbb
        invalid:

      - opcode: 0xbc
        invalid:

      - opcode: 0xbd
        invalid:

      - opcode: 0xbe
        invalid:

      - opcode: 0xbf
        invalid:

      - opcode: 0xc0
        invalid:

      - opcode: 0xc1
        invalid:

      - opcode: 0xc2
        invalid:

      - opcode: 0xc3
        invalid:

      - opcode: 0xc4
        invalid:

      - opcode: 0xc5
        invalid:

      - opcode: 0xc6
        invalid:

      - opcode: 0xc7
        invalid:

      - opcode: 0xc8
        invalid:

      - opcode: 0xc9
        invalid:

      - opcode: 0xca
        invalid:

      - opcode: 0xcb
        invalid:

      - opcode: 0xcc
        invalid:

      - opcode: 0xcd
        invalid:

      - opcode: 0xce
        invalid:

      - opcode: 0xcf
        invalid:

      - opcode: 0xd0
        invalid:

      - opcode: 0xd1
        invalid:

      - opcode: 0xd2
        invalid:

      - opcode: 0xd3
        invalid:

      - opcode: 0xd4
        invalid:

      - opcode: 0xd5
        invalid:

      - opcode: 0xd6
        invalid:

      - opcode: 0xd7
        invalid:

      - opcode: 0xd8
        invalid:

      - opcode: 0xd9
        invalid:

      - opcode: 0xda
        invalid:

      - opcode: 0xdb
        invalid:

      - opcode: 0xdc
        invalid:

      - opcode: 0xdd
        invalid:

      - opcode: 0xde
        invalid:

      - opcode: 0xdf
        invalid:

      - opcode: 0xe0
        invalid:

      - opcode: 0xe1
        invalid:

      - opcode: 0xe2
        invalid:

      - opcode: 0xe3
        invalid:

      - opcode: 0xe4
        invalid:

      - opcode: 0xe5
        invalid:

      - opcode: 0xe6
        invalid:

      - opcode: 0xe7
        invalid:

      - opcode: 0xe8
        invalid:

      - opcode: 0xe9
        invalid:

      - opcode: 0xea
        invalid:

      - opcode: 0xeb
        invalid:

      - opcode: 0xec
        invalid:

      - opcode: 0xed
        invalid:

      - opcode: 0xee
        invalid:

      - opcode: 0xef
        invalid:

      - opcode: 0xf0
        invalid:

      - opcode: 0xf1
        invalid:

      - opcode: 0xf2
        invalid:

      - opcode: 0xf3
        invalid:

      - opcode: 0xf4
        invalid:

      - opcode: 0xf5
        invalid:

      - opcode: 0xf6
        invalid:

      - opcode: 0xf7
        invalid:

      - opcode: 0xf8
        invalid:

      - opcode: 0xf9
        invalid:

      - opcode: 0xfa
        invalid:

      - opcode: 0xfb
        invalid:

      - opcode: 0xfc
        invalid:

      - opcode: 0xfd
        invalid:

      - opcode: 0xfe
        invalid:

      - opcode: 0xff
        invalid:

  group:
    group_01:
    - opcode: 0x00
      mnemonic: add
      update_flags: [ cf, pf, af, zf, sf, of ]
      semantic: *add

    - opcode: 0x01
      mnemonic: or
      update_flags: [ cf, pf, af, zf, sf, of ]
      clear_flags: [ af, of, cf ]
      semantic: *or


    - opcode: 0x02
      mnemonic: adc
      test_flags: [ cf ]
      update_flags: [ cf, pf, af, zf, sf, of ]
      semantic: *adc

    - opcode: 0x03
      mnemonic: sbb
      test_flags: [ cf ]
      update_flags: [ cf, pf, af, zf, sf, of ]
      semantic: *sbb

    - opcode: 0x04
      mnemonic: and
      update_flags: [ cf, pf, af, zf, sf, of ]
      clear_flags: [ af, of, cf ]
      semantic: *and

    - opcode: 0x05
      mnemonic: sub
      update_flags: [ cf, pf, af, zf, sf, of ]
      semantic: *sub

    - opcode: 0x06
      mnemonic: xor
      update_flags: [ cf, pf, af, zf, sf, of ]
      clear_flags: [ af, of, cf ]
      semantic: *xor

    - opcode: 0x07
      mnemonic: cmp
      update_flags: [ cf, pf, af, zf, sf, of ]
      semantic: *cmp

    group_01A:
    - opcode: 0x00
      mnemonic: pop
      operand: [ Ev ]
      constraint: d64
      semantic: *pop

    - opcode: 0x01
      mnemonic: Xop
      constraint: pfx1

    - opcode: 0x02
      invalid:

    - opcode: 0x03
      invalid:

    - opcode: 0x04
      invalid:

    - opcode: 0x05
      invalid:

    - opcode: 0x06
      invalid:

    - opcode: 0x07
      invalid:

    group_02:
    - opcode: 0x00
      mnemonic: rol
      semantic: *rol

    - opcode: 0x01
      mnemonic: ror
      semantic: *ror

    - opcode: 0x02
      mnemonic: rcl

    - opcode: 0x03
      mnemonic: rcr

    - opcode: 0x04
      mnemonic: shl
      semantic: [ op0.val = op0.val << op1.val ]

    - opcode: 0x05
      mnemonic: shr
      semantic: [ op0.val = op0.val >> op1.val ]

    - opcode: 0x06
      mnemonic: sal
      semantic: *sal

    - opcode: 0x07
      mnemonic: sar
      semantic: *sar

    group_03A:
    - opcode: 0x00
      mnemonic: test
      operand: [ Eb, Ib ]
      update_flags: [ of, sf, zf, pf, cf ]
      clear_flags: [ af ]
      semantic: *test

    - opcode: 0x01
      mnemonic: test
      operand: [ Eb, Ib ]
      update_flags: [ of, sf, zf, pf, cf ]
      clear_flags: [ af ]
      semantic: *test

    - opcode: 0x02
      mnemonic: not
      operand: [ Eb ]
      semantic: *not

    - opcode: 0x03
      mnemonic: neg
      operand: [ Eb ]

    - opcode: 0x04
      mnemonic: mul
      operand: [ Eb ]

    - opcode: 0x05
      mnemonic: imul
      operand: [ Eb ]
      semantic: *imul1

    - opcode: 0x06
      mnemonic: div
      operand: [ Eb ]

    - opcode: 0x07
      mnemonic: idiv
      operand: [ Eb ]

    group_03B:
    - opcode: 0x00
      mnemonic: test
      operand: [ Ev, Iz ]
      update_flags: [ of, sf, zf, pf, cf ]
      clear_flags: [ af ]
      semantic: *test

    - opcode: 0x01
      mnemonic: test
      operand: [ Ev, Iz ]
      update_flags: [ of, sf, zf, pf, cf ]
      clear_flags: [ af ]
      semantic: *test

    - opcode: 0x02
      mnemonic: not
      operand: [ Ev ]
      semantic: *not

    - opcode: 0x03
      mnemonic: neg
      operand: [ Ev ]

    - opcode: 0x04
      mnemonic: mul
      operand: [ Ev ]

    - opcode: 0x05
      mnemonic: imul
      operand: [ Ev ]
      semantic: *imul1

    - opcode: 0x06
      mnemonic: div
      operand: [ Ev ]

    - opcode: 0x07
      mnemonic: idiv
      operand: [ Ev ]

    group_04:
    - opcode: 0x00
      mnemonic: inc
      operand: [ Eb ]
      semantic: *inc

    - opcode: 0x01
      mnemonic: dec
      operand: [ Eb ]
      semantic: *dec

    - opcode: 0x02
      invalid:

    - opcode: 0x03
      invalid:

    - opcode: 0x04
      invalid:

    - opcode: 0x05
      invalid:

    - opcode: 0x06
      invalid:

    - opcode: 0x07
      invalid:

    group_05:
    - opcode: 0x00
      mnemonic: inc
      operand: [ Ev ]
      semantic: *inc

    - opcode: 0x01
      mnemonic: dec
      operand: [ Ev ]
      semantic: *dec

    - opcode: 0x02
      mnemonic: call
      operand: [ Ev ]
      constraint: df64
      operation_type: ['call']
      semantic: *call

    - opcode: 0x03
      mnemonic: call
      operand: [ Mp ]
      operation_type: ['call']

    - opcode: 0x04
      mnemonic: jmp
      operand: [ Ev ]
      constraint: df64
      operation_type: ['jmp']
      semantic: *jmp

    - opcode: 0x05
      mnemonic: jmp
      operand: [ Mp ]
      operation_type: ['jmp']
      semantic: *jmp

    - opcode: 0x06
      mnemonic: push
      operand: [ Ev ]
      constraint: d64
      semantic: *push

    - opcode: 0x07
      invalid:

    group_06:
    - opcode: 0x00
      sub_opcodes:
        - mnemonic: sldt
          operand: [ Mw ]

        - mnemonic: sldt
          operand: [ Rv ]
          attr: [ na16 ]

    - opcode: 0x01
      sub_opcodes:
        - mnemonic: str
          operand: [ Mw ]

        - mnemonic: str
          operand: [ Rv ]
          attr: [ na16 ]

    - opcode: 0x02
      sub_opcodes:
        - mnemonic: lldt
          operand: [ Mw ]

        - mnemonic: lldt
          operand: [ Rv ]
          attr: [ na16 ]

    - opcode: 0x03
      sub_opcodes:
        - mnemonic: ltr
          operand: [ Mw ]

        - mnemonic: ltr
          operand: [ Rv ]
          attr: [ na16 ]

    - opcode: 0x04
      sub_opcodes:
        - mnemonic: verr
          operand: [ Mw ]

        - mnemonic: verr
          operand: [ Rv ]
          attr: [ na16 ]

    - opcode: 0x05
      sub_opcodes:
        - mnemonic: verw
          operand: [ Mw ]

        - mnemonic: verw
          operand: [ Rv ]
          attr: [ na16 ]

    - opcode: 0x06
      mnemonic: jmpe
      operand: [ Ev ]
      attr: [ ia64 ]

    - opcode: 0x07
      invalid:

    group_07:
    - opcode: 0x00
      sub_opcodes:
        - mnemonic: sgdt
          operand: [ Mp ]
          constraint: f64

        - mnemonic: vmcall
          suffix: 0xc1

        - mnemonic: vmlaunch
          suffix: 0xc2

        - mnemonic: vmresume
          suffix: 0xc3

        - mnemonic: vmxoff
          suffix: 0xc4

    - opcode: 0x01
      sub_opcodes:
        - mnemonic: sidt
          operand: [ Mp ]
          constraint: f64

        - mnemonic: monitor
          suffix: 0xc8

        - mnemonic: mwait
          suffix: 0xc9

    - opcode: 0x02
      sub_opcodes:
        - mnemonic: lgdt
          operand: [ Mp ]
          constraint: f64

        - mnemonic: xgetbv
          suffix: 0xd0

        - mnemonic: xsetbv
          suffix: 0xd1

    - opcode: 0x03
      sub_opcodes:
        - mnemonic: lidt
          operand: [ Mp ]
          constraint: f64

        - mnemonic: vmrun
          suffix: 0xd8

        - mnemonic: vmmcall
          suffix: 0xd9

        - mnemonic: vmload
          suffix: 0xda

        - mnemonic: vmsave
          suffix: 0xdb

        - mnemonic: stgi
          suffix: 0xdc

        - mnemonic: clgi
          suffix: 0xdd

        - mnemonic: skinit
          suffix: 0xde

        - mnemonic: invlpga
          suffix: 0xdf

    - opcode: 0x04
      sub_opcodes:
        - mnemonic: smsw
          operand: [ Mw ]

        - mnemonic: smsw
          operand: [ Rv ]
          attr: [ na16 ]

    - opcode: 0x05
      invalid:

    - opcode: 0x06
      sub_opcodes:
        - mnemonic: lmsw
          operand: [ Mw ]

        - mnemonic: lmsw
          operand: [ Rv ]
          attr: [ na16 ]

    - opcode: 0x07
      sub_opcodes:
        - mnemonic: invlpg
          operand: [ M ]

        - mnemonic: swapgs
          suffix: 0xf8

        - mnemonic: rdtscp
          suffix: 0xf9

    group_08:
    - opcode: 0x00
      invalid:

    - opcode: 0x01
      invalid:

    - opcode: 0x02
      invalid:

    - opcode: 0x03
      invalid:

    - opcode: 0x04
      mnemonic: bt
      operand: [ Ev, Ib ]

    - opcode: 0x05
      mnemonic: bts
      operand: [ Ev, Ib ]

    - opcode: 0x06
      mnemonic: btr
      operand: [ Ev, Ib ]

    - opcode: 0x07
      mnemonic: btc
      operand: [ Ev, Ib ]

    group_09:
    - opcode: 0x00
      invalid:

    - opcode: 0x01
      sub_opcodes:
        - mnemonic: cmpxchg8b
          operand: [ Mq ]
          semantic: *cmpxchg

        - mnemonic: cmpxchg16b
          operand: [ Mo ]
          attr: [ m64 ]
          semantic: *cmpxchg

    - opcode: 0x02
      invalid:

    - opcode: 0x03
      invalid:

    - opcode: 0x04
      invalid:

    - opcode: 0x05
      invalid:

    - opcode: 0x06
      sub_opcodes:
        - mnemonic: vmptrld
          operand: [ Mq ]

        - mnemonic: vmclear
          operand: [ Mq ]
          prefix: 0x66

        - mnemonic: vmxon
          prefix: 0xf3

    - opcode: 0x07
      mnemonic: vmptrst
      operand: [ Mq ]

    group_10:
    - opcode: 0x00
      mnemonic: ud2

    - opcode: 0x01
      mnemonic: ud2

    - opcode: 0x02
      mnemonic: ud2

    - opcode: 0x03
      mnemonic: ud2

    - opcode: 0x04
      mnemonic: ud2

    - opcode: 0x05
      mnemonic: ud2

    - opcode: 0x06
      mnemonic: ud2

    - opcode: 0x07
      mnemonic: ud2

    group_11:
    - opcode: 0x00
      mnemonic: mov
      semantic: *mov

    - opcode: 0x01
      invalid:

    - opcode: 0x02
      invalid:

    - opcode: 0x03
      invalid:

    - opcode: 0x04
      invalid:

    - opcode: 0x05
      invalid:

    - opcode: 0x06
      invalid:

    - opcode: 0x07
      invalid:

    group_12:
    - opcode: 0x00
      invalid:

    - opcode: 0x01
      invalid:

    - opcode: 0x02
      sub_opcodes:
        - mnemonic: psrlw
          operand: [ Nq, Ib ]

        - mnemonic: psrlw
          operand: [ Ux, Ib ]
          prefix: 0x66

        - mnemonic: vpsrlw
          operand: [ Hx, Ux, Ib ]
          attr: [ vex ]
          prefix: 0x66

    - opcode: 0x03
      invalid:

    - opcode: 0x04
      sub_opcodes:
        - mnemonic: psraw
          operand: [ Nq, Ib ]

        - mnemonic: psraw
          operand: [ Ux, Ib ]
          prefix: 0x66

        - mnemonic: vpwraw
          operand: [ Hx, Ux, Ib ]
          attr: [ vex ]
          prefix: 0x66

    - opcode: 0x05
      invalid:

    - opcode: 0x06
      sub_opcodes:
        - mnemonic: psllw
          operand: [ Nq, Ib ]

        - mnemonic: psllw
          operand: [ Ux, Ib ]
          prefix: 0x66

        - mnemonic: vpwraw
          operand: [ Hx, Ux, Ib ]
          attr: [ vex ]
          prefix: 0x66

    - opcode: 0x07
      invalid:

    group_13:
    - opcode: 0x00
      invalid:

    - opcode: 0x01
      invalid:

    - opcode: 0x02
      sub_opcodes:
        - mnemonic: psrld
          operand: [ Nq, Ib ]

        - mnemonic: psrld
          operand: [ Ux, Ib ]
          prefix: 0x66

        - mnemonic: vpsrld
          operand: [ Hx, Ux, Ib ]
          attr: [ vex ]
          prefix: 0x66

    - opcode: 0x03
      invalid:

    - opcode: 0x04
      sub_opcodes:
        - mnemonic: psrad
          operand: [ Nq, Ib ]

        - mnemonic: psrad
          operand: [ Ux, Ib ]
          prefix: 0x66

        - mnemonic: vpdrad
          operand: [ Hx, Ux, Ib ]
          attr: [ vex ]
          prefix: 0x66

    - opcode: 0x05
      invalid:

    - opcode: 0x06
      sub_opcodes:
        - mnemonic: pslld
          operand: [ Nq, Ib ]

        - mnemonic: pslld
          operand: [ Ux, Ib ]
          prefix: 0x66

        - mnemonic: vpdrad
          operand: [ Hx, Ux, Ib ]
          attr: [ vex ]
          prefix: 0x66

    - opcode: 0x07
      invalid:

    group_14:
    - opcode: 0x00
      invalid:

    - opcode: 0x01
      invalid:

    - opcode: 0x02
      sub_opcodes:
        - mnemonic: psrlq
          operand: [ Nq, Ib ]

        - mnemonic: psrlq
          operand: [ Ux, Ib ]
          prefix: 0x66

        - mnemonic: vpsrlq
          operand: [ Hx, Ux, Ib ]
          attr: [ vex ]
          prefix: 0x66

    - opcode: 0x03
      sub_opcodes:
        - invalid:

        - mnemonic: vpsrldq
          operand: [ Ux, Ib ]
          prefix: 0x66

        - mnemonic: vpsrldq
          operand: [ Hx, Ux, Ib ]
          attr: [ vex ]
          prefix: 0x66

    - opcode: 0x04
      invalid:

    - opcode: 0x05
      invalid:

    - opcode: 0x06
      sub_opcodes:
        - mnemonic: psllq
          operand: [ Nq, Ib ]

        - mnemonic: vpsllq
          operand: [ Ux, Ib ]
          prefix: 0x66

        - mnemonic: vpsllq
          operand: [ Hx, Ux, Ib ]
          attr: [ vex ]
          prefix: 0x66

    - opcode: 0x07
      sub_opcodes:
        - invalid:

        - mnemonic: vpslldq
          operand: [ Ux, Ib ]
          prefix: 0x66

        - mnemonic: vpslldq
          operand: [ Hx, Ux, Ib ]
          attr: [ vex ]
          prefix: 0x66

    group_15:
    - opcode: 0x00
      sub_opcodes:
        - mnemonic: fxsave
          operand: [ M ]

        - mnemonic: rdfsbase
          operand: [ Ry ]
          prefix: 0xf3

    - opcode: 0x01
      sub_opcodes:
        - mnemonic: fxrstor
          operand: [ M ]

        - mnemonic: rdgsbase
          operand: [ Ry ]
          prefix: 0xf3

    - opcode: 0x02
      sub_opcodes:
        - mnemonic: vldmxcsr
          operand: [ Md ]

        - mnemonic: wrfsbase
          operand: [ Ry ]
          prefix: 0xf3

    - opcode: 0x03
      sub_opcodes:
        - mnemonic: vstmxcsr
          operand: [ Md ]

        - mnemonic: wrgsbase
          operand: [ Ry ]
          prefix: 0xf3

    - opcode: 0x04
      mnemonic: xsave
      operand: [ M ]

    - opcode: 0x05
      sub_opcodes:
        - mnemonic: xrstor
          operand: [ M ]

        - mnemonic: lfence
          suffix: 0xe8

    - opcode: 0x06
      sub_opcodes:
        - mnemonic: xsaveopt
          operand: [ M ]

        - mnemonic: mfence
          suffix: 0xf0

    - opcode: 0x07
      sub_opcodes:
        - mnemonic: clflush
          operand: [ M ]

        - mnemonic: sfence
          suffix: 0xf8

    group_16:
    - opcode: 0x00
      mnemonic: hint_nop
      operand: [ Ev ]
      semantic: *nop

    - opcode: 0x01
      mnemonic: hint_nop
      operand: [ Ev ]
      semantic: *nop

    - opcode: 0x02
      mnemonic: hint_nop
      operand: [ Ev ]
      semantic: *nop

    - opcode: 0x03
      mnemonic: hint_nop
      operand: [ Ev ]
      semantic: *nop

    - opcode: 0x04
      mnemonic: hint_nop
      operand: [ Ev ]
      semantic: *nop

    - opcode: 0x05
      mnemonic: hint_nop
      operand: [ Ev ]
      semantic: *nop

    - opcode: 0x06
      mnemonic: hint_nop
      operand: [ Ev ]
      semantic: *nop

    - opcode: 0x07
      mnemonic: hint_nop
      operand: [ Ev ]
      semantic: *nop

    group_17:
    - opcode: 0x00
      invalid:

    - opcode: 0x01
      mnemonic: blsr
      operand: [ By, Ey ]
      cpu_model: ">= X86_Arch_Bmi"

    - opcode: 0x02
      mnemonic: blsmsk
      operand: [ By, Ey ]
      cpu_model: ">= X86_Arch_Bmi"

    - opcode: 0x03
      mnemonic: blsi
      operand: [ By, Ey ]
      cpu_model: ">= X86_Arch_Bmi"

    - opcode: 0x04
      invalid:

    - opcode: 0x05
      invalid:

    - opcode: 0x06
      invalid:

    - opcode: 0x07
      invalid:

    group_1A:
    - opcode: 0x00
      mnemonic: pop
      operand: [ Ev ]
      constraint: d64
      semantic: *pop

    - opcode: 0x01
      mnemonic: Xop
      constraint: pfx1

    - opcode: 0x02
      invalid:

    - opcode: 0x03
      invalid:

    - opcode: 0x04
      invalid:

    - opcode: 0x05
      invalid:

    - opcode: 0x06
      invalid:

    group_3DNOW1:
    - opcode: 0x00
      mnemonic: prefetch

    - opcode: 0x01
      mnemonic: prefetchw

    - opcode: 0x02
      mnemonic: prefetch

    - opcode: 0x03
      mnemonic: prefetch

    - opcode: 0x04
      mnemonic: prefetch

    - opcode: 0x05
      mnemonic: prefetch

    - opcode: 0x06
      mnemonic: prefetch

    - opcode: 0x07
      mnemonic: prefetch

    group_FP1:
    - opcode: 0x00
      mnemonic: fadd

    - opcode: 0x01
      mnemonic: fmul

    - opcode: 0x02
      mnemonic: fcom

    - opcode: 0x03
      mnemonic: fcomp

    - opcode: 0x04
      mnemonic: fsub

    - opcode: 0x05
      mnemonic: fsubr

    - opcode: 0x06
      mnemonic: fdiv

    - opcode: 0x07
      mnemonic: fdivr

    group_FP2:
    - opcode: 0x00
      mnemonic: fld
      operand: [ m32fp ]

    - opcode: 0x01
      invalid:

    - opcode: 0x02
      mnemonic: fst
      operand: [ m32fp ]

    - opcode: 0x03
      mnemonic: fstp
      operand: [ m32fp ]

    - opcode: 0x04
      mnemonic: fldenv
      operand: [ M ]

    - opcode: 0x05
      mnemonic: fldcw
      operand: [ Mw ]

    - opcode: 0x06
      mnemonic: fnstenv
      operand: [ M ]

    - opcode: 0x07
      mnemonic: fnstcw
      operand: [ Mw ]

    group_FP3:
    - opcode: 0x00
      mnemonic: fiadd

    - opcode: 0x01
      mnemonic: fimul

    - opcode: 0x02
      mnemonic: ficom

    - opcode: 0x03
      mnemonic: ficomp

    - opcode: 0x04
      mnemonic: fisub

    - opcode: 0x05
      mnemonic: fisubr

    - opcode: 0x06
      mnemonic: fidiv

    - opcode: 0x07
      mnemonic: fidivr

    group_FP4:
    - opcode: 0x00
      mnemonic: fild
      operand: [ m32int ]

    - opcode: 0x01
      mnemonic: fisttp
      operand: [ m32int ]

    - opcode: 0x02
      mnemonic: fist
      operand: [ m32int ]

    - opcode: 0x03
      mnemonic: fistp
      operand: [ m32int ]

    - opcode: 0x04
      invalid:

    - opcode: 0x05
      mnemonic: fld
      operand: [ m80fp ]

    - opcode: 0x06
      invalid:

    - opcode: 0x07
      mnemonic: fstp
      operand: [ m80fp ]

    group_FP5:
    - opcode: 0x00
      mnemonic: fld
      operand: [ m64fp ]

    - opcode: 0x01
      mnemonic: fisttp
      operand: [ m64int ]

    - opcode: 0x02
      mnemonic: fst
      operand: [ m64fp ]

    - opcode: 0x03
      mnemonic: fstp
      operand: [ m64fp ]

    - opcode: 0x04
      mnemonic: frstor
      operand: [ M ]

    - opcode: 0x05
      invalid:

    - opcode: 0x06
      mnemonic: fnsave
      operand: [ M ]

    - opcode: 0x07
      mnemonic: fnstsw
      operand: [ Mw ]

    group_FP6:
    - opcode: 0x00
      mnemonic: fiadd

    - opcode: 0x01
      mnemonic: fimul

    - opcode: 0x02
      mnemonic: ficom

    - opcode: 0x03
      mnemonic: ficomp

    - opcode: 0x04
      mnemonic: fisub

    - opcode: 0x05
      mnemonic: fisubr

    - opcode: 0x06
      mnemonic: fidiv

    - opcode: 0x07
      mnemonic: fidivr

    group_FP7:
    - opcode: 0x00
      mnemonic: fild
      operand: [ m16int ]

    - opcode: 0x01
      mnemonic: fisttp
      operand: [ m16int ]

    - opcode: 0x02
      mnemonic: fist
      operand: [ m16int ]

    - opcode: 0x03
      mnemonic: fistp
      operand: [ m16int ]

    - opcode: 0x04
      mnemonic: fbld
      operand: [ m80dec ]

    - opcode: 0x05
      mnemonic: fild
      operand: [ m64int ]

    - opcode: 0x06
      mnemonic: fbstp
      operand: [ m80bcd ]

    - opcode: 0x07
      mnemonic: fistp
      operand: [ m64int ]

  fpu:
    fpu0:
      group: group_FP1
      operand: [ m32fp ]
      table: table_FP1

    fpu1:
      group: group_FP2
      table: table_FP2

    fpu2:
      group: group_FP3
      operand: [ m32int ]
      table: table_FP3

    fpu3:
      group: group_FP4
      table: table_FP4

    fpu4:
      group: group_FP1
      operand: [ m64fp ]
      table: table_FP5

    fpu5:
      group: group_FP5
      table: table_FP6

    fpu6:
      group: group_FP6
      operand: [ m16int ]
      table: table_FP7

    fpu7:
      group: group_FP7
      table: table_FP8
